code,,constructive algorithms,data structures,greedy,math,dfs and similar,dp,trees,graphs,probabilities,brute force,sortings,bitmasks,divide and conquer,implementation,binary search,combinatorics,strings,two pointers,hashing,number theory,flows,games,dsu,shortest paths,graph matchings,geometry,interactive,meet-in-the-middle
"#include <bits/stdc++.h>

#define int long long
#define double long double
#define endl '\n'
#define st first
#define nd second
#define pb push_back
#define sz(x) (int)(x).size()
using namespace std;
double PI = 3.14159265359;
int inf = 1000000000000000007;
int mod = 1000000007;
int mod1 = 998244353;

const bool multi = 0;

int seg[400007], pot = 1;

void add(int v, int a, int b, int l, int r, int x)
{
    if (a <= l && b >= r)
    {
        seg[v] += x;
        return;
    }
    if (l > b || r < a)
        return;
    add(2 * v, a, b, l, (l + r) / 2, x);
    add(2 * v + 1, a, b, (l + r) / 2 + 1, r, x);
}
int get(int v)
{
    v += pot - 1;
    int val = 0;
    while (v > 0)
    {
        val += seg[v];
        v /= 2;
    }
    return val;
}

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int tt;
    if (multi)
        cin >> tt;
    else
        tt = 1;
    while (tt--)
    {
        int n, sum = 0, ans;
        cin >> n;
        while (pot < n + 1)
            pot *= 2;
        for (int i = 2; i <= n + 1; i++)
            cin >> seg[i + pot - 1];
        for (int i = 2; i <= n + 1; i++)
            sum += max(0LL, seg[i + pot - 1] - seg[i + pot - 2]);
        ans = sum - max(0LL, -get(2));
        if (ans > 0)
            cout << ans / 2 + ans % 2 << endl;
        else
            cout << ans / 2 << endl;
        int q;
        cin >> q;
        while (q--)
        {
            int l, r, x;
            cin >> l >> r >> x;
            l++, r++;
            sum -= max(0LL, get(l) - get(l - 1));
            if (r != n + 1)
                sum -= max(0LL, get(r + 1) - get(r));
            add(1, l, r, 1, pot, x);
            sum += max(0LL, get(l) - get(l - 1));
            if (r != n + 1)
                sum += max(0LL, get(r + 1) - get(r));
            ans = sum - max(0LL, -get(2));
            if (ans > 0)
                cout << ans / 2 + ans % 2 << endl;
            else
                cout << ans / 2 << endl;
        }
    }

    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
using namespace std;
#define ll long long

const int N = 1e5 + 20;

int n, q, l, r;
ll a[N], x, d[N], pos;

ll ans()
{
    if (a[1] + pos > 0)
        return (a[1] + pos + 1) / 2;
    else
        return (a[1] + pos) / 2;
}

void run_test()
{
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];

    for (int i = 1; i + 1 <= n; i++)
    {
        d[i] = a[i + 1] - a[i];
        if (d[i] > 0)
            pos += d[i];
    }

    cout << ans() << ""\n"";

    cin >> q;
    while (q--)
    {
        cin >> l >> r >> x;

        if (l == 1)
            a[l] += x;

        if (l > 1)
        {
            if (d[l - 1] > 0)
                pos -= d[l - 1];
            if (d[l - 1] + x > 0)
                pos += d[l - 1] + x;
            d[l - 1] += x;
        }

        if (r < n)
        {
            if (d[r] > 0)
                pos -= d[r];
            if (d[r] - x > 0)
                pos += d[r] - x;
            d[r] -= x;
        }

        cout << ans() << ""\n"";
    }
}

int main()
{
    ios::sync_with_stdio(0);
#ifndef LOCAL
    cin.tie(0);
#endif

    int t = 1;
    // cin >> t;
    while (t--)
    {
        run_test();
    }
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define RG register int
#define LL long long

template <typename elemType>
inline void Read(elemType& T)
{
    elemType X = 0, w = 0;
    char ch = 0;
    while (!isdigit(ch))
    {
        w |= ch == '-';
        ch = getchar();
    }
    while (isdigit(ch))
        X = (X << 3) + (X << 1) + (ch ^ 48), ch = getchar();
    T = (w ? -X : X);
}

inline int lowbit(int x)
{
    return x & (-x);
}

LL a[100010], Delta[100010];
struct BIT
{
    LL Node[100010];
    int N;
    void set_Len(int len)
    {
        N = len;
    }
    void Update(int x, LL Add)
    {
        for (; x <= N; x += lowbit(x))
            Node[x] += Add;
    }
    LL PrefixSum(int x)
    {
        LL Res = 0;
        for (; x; x -= lowbit(x))
            Res += Node[x];
        return Res;
    }
    LL Query(int L, int R)
    {
        return PrefixSum(R) - PrefixSum(L - 1);
    }
    LL GetAns()
    {
        LL Res = a[1] + PrefixSum(N);
        return (Res & 1) ? ((Res >> 1) + 1) : (Res >> 1);
    }
};
BIT Tree;
int N, M;

int main()
{
    Read(N);
    Tree.set_Len(N - 1);
    for (RG i = 1; i <= N; ++i)
        Read(a[i]);
    for (RG i = 1; i < N; ++i)
    {
        if (a[i + 1] - a[i] > 0)
            Tree.Update(i, a[i + 1] - a[i]);
        Delta[i] = a[i + 1] - a[i];
    }
    printf(""%I64d\n"", Tree.GetAns());
    Read(M);
    while (M--)
    {
        int L, R;
        LL Add;
        Read(L);
        Read(R);
        Read(Add);
        if (L == 1)
            a[1] += Add;
        if (L > 1)
        {
            Delta[L - 1] += Add;
            Tree.Update(L - 1, -Tree.Query(L - 1, L - 1));
            if (Delta[L - 1] > 0)
                Tree.Update(L - 1, Delta[L - 1]);
        }
        if (R < N)
        {
            Delta[R] -= Add;
            Tree.Update(R, -Tree.Query(R, R));
            if (Delta[R] > 0)
                Tree.Update(R, Delta[R]);
        }
        printf(""%I64d\n"", Tree.GetAns());
    }
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <algorithm>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
using namespace std;

const int maxn = 1e5 + 5;
long long a[maxn];
long long diff[maxn];
long long tmp1 = 0, tmp2 = 0;

void work()
{
    long long b1 = (a[1] - tmp1) / 2;
    printf(""%lld\n"", max(b1 + tmp1, a[1] - b1));
}

int main()
{
    int n;
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%lld"", &a[i]);
        diff[i] = a[i] - a[i - 1];
    }
    for (int i = 2; i <= n; i++)
    {
        if (diff[i] >= 0)
        {
            tmp1 += diff[i];
        }
        else
        {
            tmp2 += diff[i];
        }
    }
    work();
    int q;
    scanf(""%d"", &q);
    int l, r, x;
    while (q--)
    {
        scanf(""%d %d %d"", &l, &r, &x);
        if (l == 1)
        {
            a[1] += x;
        }
        if (l != 1)
        {
            if (diff[l] >= 0)
            {
                tmp1 -= diff[l];
            }
            else
            {
                tmp2 -= diff[l];
            }
        }
        if (r != n)
        {
            if (diff[r + 1] >= 0)
            {
                tmp1 -= diff[r + 1];
            }
            else
            {
                tmp2 -= diff[r + 1];
            }
        }

        if (l != 1)
        {
            diff[l] += x;
            if (diff[l] >= 0)
            {
                tmp1 += diff[l];
            }
            else
            {
                tmp2 += diff[l];
            }
        }
        if (r != n)
        {
            diff[r + 1] -= x;
            if (diff[r + 1] >= 0)
            {
                tmp1 += diff[r + 1];
            }
            else
            {
                tmp2 += diff[r + 1];
            }
        }
        work();
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/* hs_wfz_orz */
/* remember : */
/* First */
/* If you think a problem is right but wrong, give it up ! */
/* And solve another problem ! */
/* Second */
/* if one problem may long time */
/* turn cin into scanf */
#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <string>
#include <queue>
#include <map>
#include <vector>
#include <stack>
#include <set>
#include <ctime>
#include <stdlib.h>
#define pb push_back
#define dd double
#define mp make_pair
#define N 500005
#define mod 998244353
#define pp 1000000007
#define inf 100000000000000000
#define limt 1000
#define ull unsigned long long
#define int long long

using namespace std;

int n, a[N], b[N], s = 0, q;

signed main(void)
{
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    for (int i = 1; i <= n; i++)
    {
        b[i] = a[i] - a[i - 1];
        if (i != 1 && b[i] >= 0)
            s += b[i];
    }
    cout << (int)ceil((dd)(s + a[1]) / 2) << '\n';
    cin >> q;
    while (q--)
    {
        int l, r, x;
        cin >> l >> r >> x;
        int r1 = b[l], r2 = b[r + 1];
        b[l] += x;
        b[r + 1] -= x;
        if (l != 1)
        {
            s -= max(0ll, r1) - max(0ll, b[l]);
        }
        if (r != n)
        {
            s -= max(0ll, r2) - max(0ll, b[r + 1]);
        }
        cout << (int)ceil((dd)(s + b[1]) / 2) << '\n';
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define IO                                                                                         \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(0);                                                                                    \
    cout.tie(0)
#define rep(i, a, b) for (int i = a; i <= b; i++)
using namespace std;

const int inf = 0x3f3f3f3f;
typedef long long ll;
const int N = 1e5 + 7;
const ll mod = 1e9 + 7;
ll a[N], b[N];
int main()
{
    IO;
    int t = 1;
    // cin>>t;
    while (t--)
    {
        int n;
        cin >> n;
        ll sum = 0;
        for (int i = 1; i <= n; ++i)
        {
            cin >> b[i];
            a[i] = b[i] - b[i - 1];
            if (i > 1)
                sum += max(0ll, a[i]);
        }
        ll b1 = (a[1] - sum) / 2;
        cout << max(b1 + sum, a[1] - b1) << endl;

        // cout<<(a[1]+sum)/2<<endl;
        int m;
        cin >> m;
        while (m--)
        {
            int l, r;
            ll x;
            cin >> l >> r >> x;
            if (l == 1)
            {
                a[1] += x;
            }
            else
            {
                sum -= max(0ll, a[l]);
                a[l] += x;
                sum += max(0ll, a[l]);
            }
            if (r != n)
            {
                sum -= max(0ll, a[r + 1]);
                a[r + 1] -= x;
                sum += max(0ll, a[r + 1]);
            }
            b1 = (a[1] - sum) / 2;
            cout << max(b1 + sum, a[1] - b1) << endl;
        }
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <stdio.h>

long long llmax(long long a, long long b)
{
    if (a > b)
    {
        return a;
    }
    return b;
}
long long llmin(long long a, long long b)
{
    if (a < b)
    {
        return a;
    }
    return b;
}
long long llc2(long long a)
{
    if (a % 2 == 0)
    {
        return a / 2;
    }
    return ((a + 1) / 2);
}

long long calc(long long tp, long long u, long long d)
{
    long long st, fi, te;
    long long eu, ed, res = (1ll << 60);
    st = -(1ll << 60);
    fi = (1ll << 60);
    while (st <= fi)
    {
        te = (st + fi) / 2;
        ed = te;
        eu = tp - te;
        eu += u;
        long long cv = llmax(ed, eu);
        res = llmin(cv, res);
        if (ed > eu)
        {
            fi = te - 1;
        }
        else
        {
            st = te + 1;
        }
    }
    return res;
}

int main()
{
    long long n, a[524288], del[524288], us = 0, ds = 0;
    long long deldel;
    scanf(""%lld"", &n);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%lld"", &a[i]);
        if (i != 1)
        {
            del[i - 1] = (a[i] - a[i - 1]);
            // printf(""<%lld>\n"",del[i]);
            us += llmax(del[i - 1], 0);
            ds += llmax(-del[i - 1], 0);
        }
    }
    // for(int i=1;i<=n-1;i++){printf(""<%lld>"",del[i]);}puts("""");
    printf(""%lld\n"", calc(a[1], us, ds));
    long long q;
    scanf(""%lld"", &q);
    while (q > 0)
    {
        q--;
        long long l, r, x;
        scanf(""%lld%lld%lld"", &l, &r, &x);

        if (l != 1)
        {
            us -= llmax(del[l - 1], 0);
            ds -= llmax(-del[l - 1], 0);
        }
        if (r != n)
        {
            us -= llmax(del[r], 0);
            ds -= llmax(-del[r], 0);
        }

        if (l == 1)
        {
            a[1] += x;
        }
        else
        {
            del[l - 1] += x;
        }
        if (r != n)
        {
            del[r] -= x;
        }

        if (l != 1)
        {
            us += llmax(del[l - 1], 0);
            ds += llmax(-del[l - 1], 0);
        }
        if (r != n)
        {
            us += llmax(del[r], 0);
            ds += llmax(-del[r], 0);
        }

        // for(int i=1;i<=n-1;i++){printf(""<%lld>"",del[i]);}puts("""");

        printf(""%lld\n"", calc(a[1], us, ds));
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
using namespace std;
const double pi = 3.141592653589;
const int maxn = 1e6 + 10;
const double delta = 0.995;
typedef long long ll;
ll n, t;
ll a[maxn], cnt[maxn];


int main()
{
    scanf(""%lld"", &n);
    ll tot = 0;
    for (ll i = 1; i <= n; ++i)
    {
        scanf(""%lld"", &a[i]);
    }
    cnt[1] = a[1];
    for (ll i = 2; i <= n; ++i)
    {
        cnt[i] = a[i] - a[i - 1];
    }
    for (ll i = 2; i <= n; ++i)
    {
        if (cnt[i] >= 0)
        {
            tot += cnt[i];
        }
    }
    ll x = (a[1] - tot) / 2;
    printf(""%lld\n"", x + tot);
    scanf(""%lld"", &t);
    while (t--)
    {
        ll l, r, d;
        scanf(""%lld%lld%lld"", &l, &r, &d);
        if (l == 1)
            cnt[1] += d;
        else
        {
            if (d < 0)
            {
                if (cnt[l] > 0)
                    tot -= min(cnt[l], -d);
            }
            else
            {
                if (cnt[l] + d >= 0)
                    tot += min(cnt[l] + d, d);
            }
            cnt[l] += d;
        }
        if (r + 1 <= n)
        {
            if (d > 0)
            {
                if (cnt[r + 1] > 0)
                    tot -= min(cnt[r + 1], d);
            }
            else
            {
                if (cnt[r + 1] - d >= 0)
                    tot += min(cnt[r + 1] - d, -d);
            }
            cnt[r + 1] -= d;
        }
        x = (cnt[1] - tot) / 2;
        printf(""%lld\n"", x + tot); // max(x+tot,cnt[1]-x)
    }


    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define file(name)                                                                                 \
    freopen(name "".in"", ""r"", stdin);                                                               \
    freopen(name "".out"", ""w"", stdout);
#define fast                                                                                       \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);
#define x first
#define y second
#define pb push_back
#define mk make_pair
#define all(a) a.begin(), a.end()
#define len(a) (int) a.size()

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;

ll div(ll X)
{
    if (X >= 0)
    {
        return X / 2;
    }
    else
    {
        return X / 2 - (X % 2 != 0 ? 1 : 0);
    }
}

int main()
{
    fast;

    int n;
    cin >> n;

    ll a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];

    ll dif[n - 1];
    for (int i = 0; i < n - 1; i++)
        dif[i] = a[i + 1] - a[i];

    ll s = a[0], t = 0;
    for (int i = 0; i < n - 1; i++)
        if (dif[i] > 0)
            t += dif[i];

    cout << div(s + t + 1) << endl;

    int q;
    cin >> q;
    while (q--)
    {
        int l, r;
        ll d;
        cin >> l >> r >> d;

        l--;
        r--;
        if (l == 0)
            s += d;
        if (l > 0)
        {
            l--;
            t -= max(0ll, dif[l]);
            dif[l] += d;
            t += max(0ll, dif[l]);
        }
        if (r < n - 1)
        {
            t -= max(0ll, dif[r]);
            dif[r] -= d;
            t += max(0ll, dif[r]);
        }
        cout << div(s + t + 1) << endl;
    }


    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define ms(x, a) memset(x, a, sizeof(x))
#define inf 0x3f3f3f3f
using namespace std;

template <typename T>
inline void rd(T& n)
{
    T x = 0, f = 0;
    char ch = 0;
    while (!isdigit(ch))
        f |= ch == '-', ch = getchar();
    while (isdigit(ch))
        x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();
    n = f ? -x : x;
}

const int maxn = 2e5 + 10;
ll a[maxn], b[maxn];

int main()
{
    int n;
    rd(n);
    ll sm = 0;
    for (int i = 1; i <= n; ++i)
    {
        rd(a[i]);
        if (i == 1)
            b[1] = a[1];
        else
        {
            b[i] = a[i] - a[i - 1];
            sm += max(0LL, b[i]);
        }
    }
    printf(""%lld\n"", (ll)(ceil)((1.0 * (b[1] + sm) / 2)));
    int m;
    rd(m);
    for (int i = 1; i <= m; ++i)
    {
        int l, r;
        ll x;
        rd(l), rd(r), rd(x);
        if (l == 1)
        {
            b[1] += x;
        }
        else
        {
            sm -= max(0LL, b[l]);
            b[l] = b[l] + x;
            sm += max(0LL, b[l]);
        }
        if (r < n)
        {
            sm -= max(0LL, b[r + 1]);
            b[r + 1] = b[r + 1] - x;
            sm += max(0LL, b[r + 1]);
        }
        printf(""%lld\n"", (ll)(ceil)((1.0 * (b[1] + sm) / 2)));
    }
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*input
4
2 -1 7 3
2
2 4 -3
3 4 2

*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;

#pragma GCC optimize(""unroll-loops,no-stack-protector"")
// order_of_key #of elements less than x
// find_by_order kth element
#define ll long long
#define ld long double
#define pii pair<ll, ll>
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;
#define f first
#define s second
#define pb push_back
#define REP(i, n) for (ll i = 0; i < n; i++)
#define REP1(i, n) for (int i = 1; i <= n; i++)
#define FILL(n, x) memset(n, x, sizeof(n))
#define ALL(_a) _a.begin(), _a.end()
#define sz(x) (int) x.size()
#define SORT_UNIQUE(c)                                                                             \
    (sort(c.begin(), c.end()), c.resize(distance(c.begin(), unique(c.begin(), c.end()))))
#define MP make_pair
const ll INF64 = 4e12;
const int INF = 0x3f3f3f3f;
const ll MOD = 1e9 + 7;
const ld PI = acos(-1);
const ld eps = 1e-9;
#define lowb(x) x&(-x)
#define MNTO(x, y) x = min(x, (__typeof__(x))y)
#define MXTO(x, y) x = max(x, (__typeof__(x))y)
ll mult(ll a, ll b)
{
    return ((a % MOD) * (b % MOD)) % MOD;
}
ll mypow(ll a, ll b)
{
    if (b <= 0)
        return 1;
    ll res = 1LL;
    while (b)
    {
        if (b & 1)
        {
            res = (res * a) % MOD;
        }
        a = (a * a) % MOD;
        b >>= 1;
    }
    return res;
}
const ll maxn = 1e5 + 5;
const ll maxlg = __lg(maxn) + 2;
ll sum = 0;
ll arr[maxn];
int main()
{
    ios::sync_with_stdio(false), cin.tie(0);
    int n;
    cin >> n;
    REP1(i, n) cin >> arr[i];
    for (int i = n; i >= 1; i--)
        arr[i] = arr[i] - arr[i - 1];
    ll a1 = arr[1];
    for (int i = 2; i <= n; i++)
    {
        if (arr[i] > 0)
            sum += arr[i];
    }
    int q;
    cin >> q;
    cout << (ll)ceil((double)(a1 + sum) / 2) << '\n';
    while (q--)
    {
        int l, r, x;
        cin >> l >> r >> x;
        if (l != 1)
        {
            if (arr[l] > 0)
                sum -= arr[l];
            arr[l] += x;
            if (arr[l] > 0)
                sum += arr[l];
        }
        else
            a1 += x;
        if (r < n)
        {
            if (arr[r + 1] > 0)
                sum -= arr[r + 1];
            arr[r + 1] -= x;
            if (arr[r + 1] > 0)
                sum += arr[r + 1];
        }
        cout << (ll)ceil((double)(a1 + sum) / 2) << '\n';
    }
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
typedef long long ll;
int n;
ll b[100010], a[100010], val = 0;
void solve()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 0; i < n - 1; i++)
    {
        b[i] = a[i + 1] - a[i];
        if (b[i] > 0)
            val += b[i];
    }
    ll u = a[0] + val;
    ll c = u / 2, u0 = a[0];
    if (u % 2 == 1 && u > 0)
        c++;
    cout << c << endl;
    int q;
    cin >> q;
    for (int i = 0; i < q; i++)
    {
        int x, y, d;
        cin >> x >> y >> d;
        x--;
        y--;
        if (x == 0)
            u0 += d;
        if (x > 0)
        {
            if (b[x - 1] > 0)
            {
                if (b[x - 1] + d > 0)
                    val += d;
                else
                    val -= b[x - 1];
                b[x - 1] += d;
            }
            else
            {
                if (b[x - 1] + d > 0)
                {
                    b[x - 1] += d;
                    val += b[x - 1];
                }
                else
                    b[x - 1] += d;
            }
        }
        if (y < n - 1)
        {
            if (b[y] > 0)
            {
                if (d > 0)
                {
                    if (b[y] > d)
                    {
                        val -= d;
                        b[y] -= d;
                    }
                    else
                    {
                        val -= b[y];
                        b[y] -= d;
                    }
                }
                else
                {
                    val -= d;
                    b[y] -= d;
                }
            }
            else
            {
                if (d > 0)
                {
                    b[y] -= d;
                }
                else
                {
                    if (b[y] - d > 0)
                    {
                        val += b[y] - d;
                        b[y] -= d;
                    }
                    else
                        b[y] -= d;
                }
            }
        }
        ll u = val + u0;
        ll c = (u) / 2;
        if (u % 2 == 1 && u > 0)
            c++;
        cout << c << endl;
    }
}
int main()
{
    solve();
    //	system(""pause"");
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

const int N = 100010;
long long a[N];
int n, q;
long long S;

void add(int x, int t)
{
    if (x > n)
        return;
    if (x > 1 && a[x] >= 0)
        S -= a[x];
    a[x] += t;
    if (x > 1 && a[x] >= 0)
        S += a[x];
}

int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%lld"", &a[i]);
    for (int i = n; i >= 1; i--)
        a[i] -= a[i - 1];
    for (int i = 2; i <= n; i++)
        if (a[i] >= 0)
            S += a[i];
    printf(""%.0lf\n"", ceil((a[1] - S) / 2) + S);
    scanf(""%d"", &q);
    int l, r, x;
    while (q--)
    {
        scanf(""%d %d %d"", &l, &r, &x);
        add(l, x);
        add(r + 1, -x);
        printf(""%.0lf\n"", ceil((a[1] - S) / 2) + S);
    }
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ls i << 1
#define rs i << 1 | 1
#define fi first
#define se second
#define pb push_back
#define mp make_pair
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
const int N = 1E5 + 10;
ll read()
{
    ll a = 0;
    char b = 1, c;
    do
        if ((c = getchar()) == 45)
            b = -1;
    while (c < 48 || c > 57);
    do
        a = (a << 3) + (a << 1) + (c & 15);
    while ((c = getchar()) > 47 && c < 58);
    return a * b;
}
void write(ll x, char c)
{
    if (x < 0)
        putchar('-'), x = -x;
    char a[20], s = 0;
    do
        a[++s] = x % 10 | 48;
    while (x /= 10);
    do
        putchar(a[s]);
    while (--s);
    putchar(c);
}
ll a[N];
int main()
{
    int n = read();
    ll ans = 0;
    for (int i = 1; i <= n; ++i)
        a[i] = read();
    for (int i = n; i >= 2; --i)
    {
        a[i] -= a[i - 1];
        if (a[i] > 0)
            ans += a[i];
    }
    write(ans + a[1] + 1 >> 1, '\n');
    for (int x = read(); x--;)
    {
        int l = read(), r = read() + 1, w = read();
        if (l != 1 && a[l] > 0)
            ans -= a[l];
        if (r <= n && a[r] > 0)
            ans -= a[r];
        a[l] += w;
        a[r] -= w;
        if (l != 1 && a[l] > 0)
            ans += a[l];
        if (r <= n && a[r] > 0)
            ans += a[r];
        write(ans + a[1] + 1 >> 1, '\n');
    }
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#pragma GCC optimize(""O3"", ""unroll-all-loops"")
#pragma GCC target(""sse4.2"")

using namespace std;

#define F first
#define S second
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

ifstream in;
ofstream out;

const long long kk = 1000;
const long long ml = kk * kk;
const long long mod = ml * kk + 7;
const long long inf = ml * ml * ml + 7;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

ll n;
vector<ll> v, dif;
bool viv = false;
ll v0;
ll sum, ans;

void pr()
{
    ans = (v0 + sum) / 2;
    if ((v0 + sum) % 2)
        ans = (v0 + sum + 1) / 2;


    cout << ans << '\n';
    if (viv)
    {
        cout << ""\t["" << v0 << ' ' << sum << ""]: "";
        for (auto i : dif)
            cout << i << ' ';
        cout << '\n';
    }
}

void query()
{
    int l, r;
    ll x;
    cin >> l >> r >> x;
    l--, r--;
    if (l == 0)
        v0 += x;
    if (l > 0)
    {
        if (dif[l - 1] > 0)
            sum -= dif[l - 1];
        dif[l - 1] += x;
        if (dif[l - 1] > 0)
            sum += dif[l - 1];
    }
    if (r < n - 1)
    {
        if (dif[r] > 0)
            sum -= dif[r];
        dif[r] -= x;
        if (dif[r] > 0)
            sum += dif[r];
    }
    pr();
}

void queries()
{
    int q;
    cin >> q;
    while (q--)
        query();
}

void solve()
{
    cin >> n;
    v.resize(n);
    for (auto& i : v)
        cin >> i;

    v0 = v[0];
    for (int i = 1; i < n; i++)
    {
        if (v[i] > v[i - 1])
        {
            sum += v[i] - v[i - 1];
        }
        dif.push_back(v[i] - v[i - 1]);
    }
    pr();
    queries();
}

int main()
{
    // viv = true;
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    ll t = 1;
    // cin >> t;
    while (t--)
        solve();

    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits\stdc++.h>

using namespace std;

const int MAXN = 1e5 + 5;

long long a[MAXN], d[MAXN];

int main()
{
    int n;
    scanf(""%d"", &n);
    for (int i = 1; i <= n; ++i)
        scanf(""%lld"", &a[i]);
    long long k = 0;
    d[1] = a[1];
    for (int i = 2; i <= n; ++i)
    {
        d[i] = a[i] - a[i - 1];
        if (d[i] > 0)
        {
            k += d[i];
        }
    }
    printf(""%lld\n"", (k + a[1]) & 1ll ? (k + a[1] + 1) / 2ll : (k + a[1]) / 2ll);
    int q;
    scanf(""%d"", &q);
    for (int i = 0; i < q; ++i)
    {
        int l, r;
        long long x;
        scanf(""%d%d%lld"", &l, &r, &x);
        if (d[l] <= 0 && d[l] + x >= 0 && l > 1)
        {
            k += d[l] + x;
        }
        else if (d[l] >= 0 && l > 1)
        {
            if (d[l] + x > 0)
                k += x;
            else
                k -= d[l];
        }
        if (d[r + 1] <= 0 && d[r + 1] - x >= 0 && r < n)
        {
            k += d[r + 1] - x;
        }
        else if (d[r + 1] >= 0 && r < n)
        {
            if (d[r + 1] - x > 0)
                k -= x;
            else
                k -= d[r + 1];
        }
        d[l] += x;
        d[r + 1] -= x;
        if (l == 1)
            a[1] += x;
        printf(""%lld\n"", (k + a[1]) & 1ll ? (k + a[1] + 1) / 2ll : (k + a[1]) / 2ll);
    }
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define ll long long
#define add(x, v)                                                                                  \
    {                                                                                              \
        if (x == 1 || d[x] > 0)                                                                    \
            sum -= d[x];                                                                           \
        d[x] += v;                                                                                 \
        if (x == 1 || d[x] > 0)                                                                    \
            sum += d[x];                                                                           \
    \
}

using namespace std;

inline int qr()
{
    int f = 0, fu = 1;
    char c = getchar();
    while (c < '0' || c > '9')
    {
        if (c == '-')
            fu = -1;
        c = getchar();
    }
    while (c >= '0' && c <= '9')
    {
        f = (f << 3) + (f << 1) + c - 48;
        c = getchar();
    }
    return f * fu;
}

const int N = 1e5 + 10;
int n, q, a[N];
ll sum, d[N];

int main()
{
    n = qr();
    for (int i = 1; i <= n; ++i)
        a[i] = qr();
    for (int i = 1; i <= n; ++i)
        d[i] = a[i] - a[i - 1];
    for (int i = 1; i <= n; ++i)
        if (i == 1 || d[i] > 0)
            sum += d[i];
    printf(""%lld\n"", (sum + 1) >> 1);
    q = qr();
    while (q--)
    {
        int l = qr(), r = qr(), x = qr();
        add(l, x) if (r < n) add(r + 1, -x) printf(""%lld\n"", (sum + 1) >> 1);
    }
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int maxn = 1e5 + 10;
using LL = long long;
//BC
//C[1] = xB[n]sigma(max(0, a[i] - a[i - 1])) + a[1] - x
int n, q, L, R;
LL K = 0, d[maxn], x, a[maxn];
void print_ans()
{
    LL ans = (a[1] + K);
    if (ans > 0)
        ans = (ans + 1) / 2;
    else
        ans = ans / 2;
    printf(""%lld\n"", ans);
}
int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; ++i)
        scanf(""%lld"", &a[i]);
    for (int i = 2; i <= n; ++i)
    {
        d[i] = a[i] - a[i - 1];
        K += max(0LL, d[i]);
    }
    print_ans();
    scanf(""%d"", &q);
    while (q--)
    {
        scanf(""%d%d%lld"", &L, &R, &x);
        if (L > 1)
        {
            K -= max(0LL, d[L]);
            d[L] += x;
            K += max(0LL, d[L]);
        }
        if (R < n)
        {
            K -= max(0LL, d[R + 1]);
            d[R + 1] -= x;
            K += max(0LL, d[R + 1]);
        }
        if (L == 1)
            a[1] += x;
        print_ans();
    }
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstdio>
#include <string>
#include <cstdlib>
#include <set>
#include <utility>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <cmath>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <cassert>
#include <chrono>
#include <memory>

using namespace std;

#define int long long
// region TEMPLATE
////@formatter:off
typedef long long ll;
typedef unsigned long long ull;
template <typename T>
void __read(T& a)
{
    cin >> a;
}
template <typename T, typename... Args>
void __read(T& a, Args&... args)
{
    cin >> a;
    __read(args...);
}
#define make(t, ...)                                                                               \
    t __VA_ARGS__;                                                                                 \
    __read(__VA_ARGS__)
#define makev(a, n)                                                                                \
    VI a(n);                                                                                       \
    for (auto& v : (a))                                                                            \
        cin >> v;
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
typedef vector<int> VI;
typedef vector<vector<int>> VVI;
typedef pair<int, int> PII;
constexpr ll M7 = 1000000007;
constexpr ll M9 = 1000000009;
constexpr ll MFFT = 998244353;
constexpr double PI = 3.14159265358979323846;
template <class T>
void outv(const T& a, char d = ' ', bool nl = false)
{
    for (auto& x : a)
        cout << x << d;
    if (nl)
        cout << '\n';
}
static mt19937_64 rnd(static_cast<unsigned>(
    chrono::steady_clock::now().time_since_epoch().count())); // NOLINT(cert-err58-cpp)
auto __fast_io__ = (ios_base::sync_with_stdio(false),
    cin.tie(nullptr)); // NOLINT(cert-err58-cpp,cppcoreguidelines-interfaces-global-init)
////@formatter:on
// endregion


int32_t main()
{
    make(int, n);
    makev(a, n);
    int sm = 0;
    for (int i = n - 1; i > 0; --i)
    {
        a[i] -= a[i - 1];
        sm += max(0ll, a[i]);
    }
    int d = a[0] + sm;
    cout << (d >= 0 ? d + 1 : d) / 2 << '\n';
    make(int, q);
    for (int i = 0; i < q; ++i)
    {
        make(int, l, r, x);
        l--;
        sm -= l == 0 ? 0 : max(0ll, a[l]);
        a[l] += x;
        sm += l == 0 ? 0 : max(0ll, a[l]);
        if (r != n)
        {
            sm -= max(0ll, a[r]);
            a[r] -= x;
            sm += max(0ll, a[r]);
        }
        d = a[0] + sm;
        cout << (d >= 0 ? d + 1 : d) / 2 << '\n';
    }

    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef double db;
typedef pair<int, int> pii;
typedef vector<int> vi;
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define sz(x) ((int)(x.size()))
#define all(x) (x).begin(), (x).end()
#define rep(i, l, r) for (int i = (l); i < (r); ++i)
#define dd(x) cout << #x << "" = "" << x << "", ""
#define de(x) cout << #x << "" = "" << x << endl
//-------
const int N = 101010;
int n, q;
int a[N];
ll b[N], a1, sum;
void print()
{
    ll ans = ceil((1. * a1 + sum) / 2);
    printf(""%lld\n"", ans);
}
int main()
{
    scanf(""%d"", &n);
    rep(i, 1, n + 1) scanf(""%d"", a + i);
    rep(i, 2, n + 1) b[i] = a[i] - a[i - 1];
    a1 = a[1];
    rep(i, 2, n + 1) sum += max(0ll, b[i]);
    print();
    scanf(""%d"", &q);
    rep(_, 0, q)
    {
        int l, r, v;
        scanf(""%d%d%d"", &l, &r, &v);
        if (l == 1)
            a1 += v;
        if (l > 1)
        {
            sum -= max(0ll, b[l]);
            b[l] += v;
            sum += max(0ll, b[l]);
        }
        if (r < n)
        {
            sum -= max(0ll, b[r + 1]);
            b[r + 1] -= v;
            sum += max(0ll, b[r + 1]);
        }
        print();
        // dd(a[1]), dd(sum), de(ceil((1. * a[1] + sum) / 2));
    }
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

ll n, a[100009], tree[400009], lol = 2000000000;

ll cur(ll f, ll l, ll r, ll e)
{
    if (l == f && r == f + 1)
        return a[f] + tree[e];
    ll m = (l + r) / 2;
    if (f < m)
        return cur(f, l, m, e + e) + tree[e];
    else
        return cur(f, m, r, e + e + 1) + tree[e];
}

ll c(ll f)
{
    return cur(f, 0, n, 1);
}

void asd(ll lo, ll ro, ll l, ll r, ll e, ll x)
{
    if (ro <= l || lo >= r)
        return;
    if (lo <= l && ro >= r)
    {
        tree[e] += x;
        return;
    }
    ll m = (l + r) / 2;
    asd(lo, ro, l, m, e + e, x);
    asd(lo, ro, m, r, e + e + 1, x);
    return;
}

int main()
{
    cin >> n;
    memset(tree, 0, sizeof(tree));
    ll mb = 0, mc = 0;
    for (ll i = 0; i < n; i++)
    {
        scanf(""%lld"", &a[i]);
        if (i > 0)
        {
            if (a[i] > a[i - 1])
                mb += a[i] - a[i - 1];
            else if (a[i] < a[i - 1])
                mc += a[i - 1] - a[i];
        }
    }
    ll ib = 0, ic = 0;
    (a[0] > 0) ? ic = a[0] : ib = a[0];
    ll jb, jc;
    ll q, l, r, x;
    cin >> q;
    for (ll i = 0; i <= q; i++)
    {
        if (i > 0)
        {
            scanf(""%lld%lld%lld"", &l, &r, &x);
            l--;
            if (l - 1 >= 0)
                (c(l) > c(l - 1)) ? mb -= c(l) - c(l - 1) : mc -= c(l - 1) - c(l);
            if (r < n)
                (c(r) > c(r - 1)) ? mb -= c(r) - c(r - 1) : mc -= c(r - 1) - c(r);
            // printf(""number1 mb %lld mc %lld\n"", mb, mc);
            asd(l, r, 0, n, 1, x);
            if (l - 1 >= 0)
                (c(l) > c(l - 1)) ? mb += c(l) - c(l - 1) : mc += c(l - 1) - c(l);
            if (r < n)
                (c(r) > c(r - 1)) ? mb += c(r) - c(r - 1) : mc += c(r - 1) - c(r);
            // printf(""number2 mb %lld mc %lld\n"", mb, mc);
            (c(0) > 0) ? ic = c(0) : ib = c(0);
            (c(0) > 0) ? ib = 0 : ic = 0;
        }
        // for(ll j=0; j<n; j++) cout<< c(j)<< ""."";
        // cout<< endl;
        jb = ib + mb;
        jc = ic - mc;
        // printf(""ib %lld ic %lld jb %lld jc %lld mb %lld mc %lld\n"", ib, ic, jb, jc, mb, mc);
        jb += lol;
        ic += lol;
        ll k = (jb + ic) / 2;
        if ((jb + ic) % 2)
            k++;
        k -= lol;
        printf(""%lld\n"", k);
    }
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
const int N = 1e5 + 10;
ll a[N];
ll n;
ll k = 0;
void wjcy(int idx, int x)
{
    if (idx > n)
        return;
    if (a[idx] > 0)
        k -= a[idx];
    a[idx] += x;
    if (a[idx] > 0)
        k += a[idx];
}
int main()
{
    // ios::sync_with_stdio(false);
    // cin.tie(0);
    scanf(""%lld"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%lld"", &a[i]);
    for (int i = 2; i <= n; i++)
        if (a[i] > a[i - 1])
            k += (a[i] - a[i - 1]);
    for (int i = n; i >= 1; i--) //  
        a[i] = a[i] - a[i - 1];
    ll a1 = a[1];
    printf(""%lld\n"", (a1 + k + 1) >> 1);
    int q;
    scanf(""%d"", &q);
    while (q--)
    {
        int l, r, x;
        scanf(""%d%d%d"", &l, &r, &x);
        if (l == 1)
            a1 += x;
        else
            wjcy(l, x);
        // cout<<a1<<endl;
        wjcy(r + 1, -x);
        printf(""%lld\n"", (a1 + k + 1) >> 1);
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
int n, q;
int a[200005];
int b[200005];
signed main()
{
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
    }
    for (int i = 1; i <= n; i++)
    {
        b[i] = a[i] - a[i - 1];
    }
    int sum1 = 0;
    for (int i = 2; i <= n; i++)
    {
        if (b[i] > 0)
        {
            sum1 += b[i];
        }
    }
    cout << (int)ceil((double)(b[1] + sum1) / 2) << endl;
    cin >> q;
    for (int i = 1; i <= q; i++)
    {
        int l, r, x;
        cin >> l >> r >> x;
        b[l] += x;
        if (l > 1)
        {
            sum1 += max(1ll * 0, b[l]) - max(1ll * 0, b[l] - x);
        }
        b[r + 1] -= x;
        if (r + 1 <= n)
        {
            sum1 += max(1ll * 0, b[r + 1]) - max(1ll * 0, b[r + 1] + x);
        }
        cout << (int)ceil((double)(b[1] + sum1) / 2) << endl;
    }
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#pragma GCC optimize(""Ofast"", ""unroll-loops"", ""omit-frame-pointer"", ""inline"")
#pragma GCC option(""arch=native"", ""tune=native"", ""no-zero-upper"")
#pragma GCC target(""avx2"")
#include <bits/stdc++.h>
using namespace std;
#define INF 2147483647
#define infL (1LL << 60)
#define inf (1 << 30)
#define inf9 (1000000000)
#define MOD 1000000007 // 998244353//1000000007
#define EPS 1e-9
#define Gr 9.8
#define PI acos(-1)
#define REP(i, n) for (int(i) = 0; (i) < (int)(n); (i)++)
#define REQ(i, n) for (int(i) = 1; (i) <= (int)(n); (i)++)
#define lch (rt << 1)
#define rch (rt << 1 | 1)
#define readmp(n)                                                                                  \
    for (int i = 0, u, v; i < n; i++)                                                              \
    {                                                                                              \
        scanf(""%d%d"", &u, &v);                                                                     \
        mp[u].push_back(v);                                                                        \
        mp[v].push_back(u);                                                                        \
    }
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef ld ValType;
template <typename T>
void maxtt(T& t1, T t2)
{
    t1 = max(t1, t2);
}
template <typename T>
void mintt(T& t1, T t2)
{
    t1 = min(t1, t2);
}
#define MAX (100035)

bool debug = 0;
int n, m, k;
int dx[4] = { 0, 1, 0, -1 }, dy[4] = { 1, 0, -1, 0 };
string direc = ""RDLU"";
const ll MOD2 = (ll)MOD * (ll)MOD;
ll ln, lk, lm;
void etp(bool f = 0)
{
    puts(f ? ""YES"" : ""NO"");
    exit(0);
}
void addmod(int& x, int y, int mod = MOD)
{
    x += y;
    if (x >= mod)
        x -= mod;
    if (x < 0)
        x += mod;
    assert(x >= 0 && x < mod);
}
void et(int x = -1)
{
    printf(""%d\n"", x);
    exit(0);
}
ll fastPow(ll x, ll y, int mod = MOD)
{
    ll ans = 1;
    while (y > 0)
    {
        if (y & 1)
            ans = (x * ans) % mod;
        x = x * x % mod;
        y >>= 1;
    }
    return ans;
}
ll gcd1(ll x, ll y)
{
    return y ? gcd1(y, x % y) : x;
}


int a[MAX];
ll b[MAX], a1, t;
void ppt()
{
    ll z = (a1 + t) / 2;
    printf(""%lld\n"", max(z, a1 - z + t));
}
void fmain(int tid)
{
    scanf(""%d"", &n);
    REQ(i, n) scanf(""%d"", a + i);
    a1 = a[1];
    REQ(i, n - 1)
    {
        t += max(a[i + 1] - a[i], 0);
        b[i + 1] = a[i + 1] - a[i];
    }
    ppt();
    scanf(""%d"", &m);
    REQ(i, m)
    {
        int l, r, x;
        scanf(""%d%d%d"", &l, &r, &x);
        if (l == 1)
            a1 += x;
        else
        {
            t -= max(b[l], 0LL);
            b[l] += x;
            t += max(b[l], 0LL);
        }
        if (r != n)
        {
            t -= max(b[r + 1], 0LL);
            b[r + 1] -= x;
            t += max(b[r + 1], 0LL);
        }
        ppt();
    }
}
int main()
{
    int t = 1;
    //    scanf(""%d"", &t);
    //    init();
    REQ(i, t)
    {
        fmain(i);
    }
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define mp make_pair
#define pb push_back
#define MAX(a, b) a = max(a, b)
#define MIN(a, b) a = min(a, b)
#define SQR(x) ((LL)(x) * (x))
#define RESET(a, b) memset(a, b, sizeof(a))
#define ALL(v) v.begin(), v.end()
#define SORT(v) sort(ALL(v))
#define PERMUTE next_permutation
#define fi first
#define se second

#define MOD 1000000009 // 1E9+9

using namespace std;

typedef int64_t i64;

typedef pair<i64, i64> p64;
typedef vector<i64> v64;
typedef vector<p64> v6464;
typedef vector<v64> vv64;

typedef double dle;
typedef long double ldle;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<pii> vii;
typedef vector<vi> vvi;


typedef pair<string, string> pss;
typedef vector<string> vs;
typedef vector<pss> vss;

typedef pair<int, string> pis;
typedef vector<pis> vis;
typedef pair<string, int> psi;
typedef vector<psi> vsi;

typedef map<string, string> mss;
typedef map<int, string> mis;
typedef map<string, int> msi;

i64 over2Ceil(i64 x)
{
    return (x >> 1) + (x & 1);
}

i64 f(size_t i, const v64& a)
{
    return max(a[i], (i64)0);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, q, l, r, x;
    cin >> n;
    v64 a(n);
    for (int i = 0; i < n; i++)
        cin >> a[i];
    i64 k = 0;
    for (int i = n - 1; i; i--)
        a[i] = a[i] - a[i - 1], k += f(i, a);
    cout << over2Ceil(a[0] + k) << ""\n"";
    cin >> q;
    while (q--)
    {
        cin >> l >> r >> x;
        if (l == 1)
            a[0] += x;
        l--;
        if (l)
            k -= f(l, a), a[l] += x, k += f(l, a);
        if (r && r < n)
            k -= f(r, a), a[r] -= x, k += f(r, a);
        cout << over2Ceil(a[0] + k) << ""\n"";
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define endl '\n'
#define fastIO                                                                                     \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define int long long int
#define pb push_back
#define ff first
#define ss second
#define all(v) (v).begin(), (v).end()
#define mod (int)(998244353)
#define PI 3.14159265358979323846264338327950L

#ifndef DEBUG_LOCAL // DEBUG_IT...
#define trace(args...)                                                                             \
    {                                                                                              \
        string _s = #args;                                                                         \
        replace(_s.begin(), _s.end(), ',', ' ');                                                   \
        stringstream _ss(_s);                                                                      \
        istream_iterator<string> _it(_ss);                                                         \
        err(_it, args);                                                                            \
        cerr << endl;                                                                              \
    }

void err(istream_iterator<string> it)
{
}

template <typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args)
{
    cerr << ""[ "" << *it << "" = "" << a << "" ] "";
    err(++it, args...);
}

template <typename Tk, typename Tv>
ostream& operator<<(ostream& os, const pair<Tk, Tv>& p)
{
    os << ""{"" << p.first << ',' << p.second << ""}"";
    return os;
}
template <typename T>
ostream& operator<<(ostream& os, const vector<T>& p)
{
    os << ""[ "";
    for (T x : p)
        os << x << "" "";
    os << ""]"" << endl;
    return os;
}
template <typename T>
ostream& operator<<(ostream& os, const set<T>& p)
{
    os << ""{ "";
    for (T x : p)
        os << x << "" "";
    os << ""}"" << endl;
    return os;
}
template <typename T>
ostream& operator<<(ostream& os, const multiset<T>& p)
{
    os << ""{ "";
    for (T x : p)
        os << x << "" "";
    os << ""}"" << endl;
    return os;
}
template <typename Tk, typename Tv>
ostream& operator<<(ostream& os, const map<Tk, Tv>& p)
{
    os << ""{ "";
    for (pair<Tk, Tv> x : p)
        os << x << "" "";
    os << ""}"" << endl;
    return os;
}

#define imie(args)                                                                                 \
    cerr << #args << "": "";                                                                         \
    cerr << args;
#endif

signed main()
{

    fastIO

        int n;
    cin >> n;
    vector<int> v(n);
    int K = 0;
    vector<int> diff;
    diff.push_back(0);
    for (int i = 0; i < n; i++)
    {
        cin >> v[i];
        if (i != 0)
        {
            K += max(0ll, v[i] - v[i - 1]);
            diff.push_back(v[i] - v[i - 1]);
        }
    }
    cout << (int)ceil((double)(v[0] + K) / 2.0) << endl;
    int Q;
    cin >> Q;
    while (Q--)
    {
        int l, r, x;
        cin >> l >> r >> x;
        l--, r--;
        if (l == 0)
            v[0] += x;
        if (l > 0)
        {
            K -= max(0ll, diff[l]);
            diff[l] += x;
            K += max(0ll, diff[l]);
        }
        if (r + 1 < n)
        {
            K -= max(0ll, diff[r + 1]);
            diff[r + 1] -= x;
            K += max(0ll, diff[r + 1]);
        }
        cout << (int)ceil((double)(v[0] + K) / 2.0) << endl;
    }

    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

/*

*/

typedef long long ll;
const int mod = 1e9 + 7;
const int max_n = 100010;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    vector<ll> a(n);
    for (auto& A : a)
        cin >> A;
    ll sum = 0, a1 = a[0];

    for (int i = n - 1; i > 0; i--)
    {
        a[i] = a[i] - a[i - 1];
        sum += max(0LL, a[i]);
    }

    auto ans = [&]() -> void
    {
        ll K = sum + a1;
        if (K > 0)
            cout << (K + 1) / 2 << endl;
        else
            cout << (K / 2) << endl;
        ;
    };

    auto update = [&](int p, int x) -> void
    {
        if (p >= n)
            return;
        if (a[p] > 0)
            sum -= a[p];
        a[p] += x;
        if (a[p] > 0)
            sum += a[p];
    };

    ans();
    int q;
    cin >> q;
    while (q--)
    {
        int l, r, x;
        cin >> l >> r >> x;
        l--;
        r--;
        if (l == 0)
            a1 += x;
        else
            update(l, x);
        update(r + 1, -x);
        ans();
    }

    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <algorithm>

void Update(int l, int r, int64_t x, int n, std::vector<int64_t>& a_diff, int64_t& bn)
{
    // a_diff[i] == a[i + 1] - a[i], size = n - 1
    if (l == 0)
    {
        bn += x;
    }
    else
    {
        bn += std::max(a_diff[l - 1] + x, 0ll) - std::max(a_diff[l - 1], 0ll);
        a_diff[l - 1] += x;
    }
    if (r < n - 1)
    {
        bn += std::max(a_diff[r] - x, 0ll) - std::max(a_diff[r], 0ll);
        a_diff[r] -= x;
    }
    // std::cout << ""Update("" << l << ' ' << r << ' ' << x;
    // for (int i = 0; i < n - 1; ++i) {
    // std::cout << ' ' << a_diff[i];
    //}
    // std::cout << ' ' << bn << "")"" << std::endl;
}


int64_t GetMinMaxBC(int64_t bn)
{
    if (bn >= 0)
    {
        return (bn + 1) / 2;
    }
    else
    {
        return bn / 2;
    }
}

int main()
{
    int n;
    std::cin >> n;
    std::vector<int64_t> a_diff(n - 1, 0);
    int64_t bn = 0;
    for (int i = 0; i < n; ++i)
    {
        int64_t a;
        std::cin >> a;
        Update(i, i, a, n, a_diff, bn);
    }
    std::cout << GetMinMaxBC(bn) << std::endl;
    int q;
    std::cin >> q;
    for (int i = 0; i < q; ++i)
    {
        int l, r;
        int64_t x;
        std::cin >> l >> r >> x;
        Update(l - 1, r - 1, x, n, a_diff, bn);
        std::cout << GetMinMaxBC(bn) << std::endl;
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define ff first
#define ss second
typedef long long ll;
ll power(ll a, ll b)
{ // a^b
    ll res = 1;
    a = a % MOD;
    while (b > 0)
    {
        if (b & 1)
        {
            res = (res * a) % MOD;
            b--;
        }
        a = (a * a) % MOD;
        b >>= 1;
    }
    return res;
}
ll fermat_inv(ll y)
{
    return power(y, MOD - 2ll);
}
ll gcd(ll a, ll b)
{
    return (b == 0) ? a : gcd(b, a % b);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t = 1;
    // cin>>t;
    while (t--)
    {
        ll n;
        cin >> n;
        ll a[n + 1];
        ll k = 0ll;
        for (ll i = 1; i <= n; i++)
            cin >> a[i];
        vector<ll> diff(n + 1);
        for (ll i = 2; i <= n; i++)
        {
            diff[i] = a[i] - a[i - 1];
            k += max(0ll, diff[i]);
        }
        ll b = a[1];
        ll ans = max((b + k) / 2 + (b + k) % 2, (b + k) / 2);
        cout << ans << ""\n"";
        ll q;
        cin >> q;
        while (q--)
        {
            ll l, r, x;
            cin >> l >> r >> x;
            if (l >= 2)
            {
                k -= max(0ll, diff[l]);
                diff[l] += x;
                k += max(0ll, diff[l]);
            }
            if (r + 1 <= n)
            {
                k -= max(0ll, diff[r + 1]);
                diff[r + 1] -= x;
                k += max(0ll, diff[r + 1]);
            }
            if (l == 1)
                b += x;
            ans = max((b + k) / 2 + (b + k) % 2, (b + k) / 2);
            cout << ans << ""\n"";
        }
    }
    return 0;
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>

using namespace std;

typedef long long ll;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin >> n;
    vector<ll> a(n), d(n - 1);
    for (ll& i : a)
        cin >> i;
    ll sum = 0;
    for (int i = 1; i < n; ++i)
    {
        sum += max(0ll, a[i] - a[i - 1]);
        d[i - 1] = a[i] - a[i - 1];
    }
    int q;
    cin >> q;
    cout << max((a[0] + sum) / 2, a[0] + sum - (a[0] + sum) / 2) << '\n';
    while (q--)
    {
        int l, r;
        ll x;
        cin >> l >> r >> x;
        --l;
        --r;
        if (l > 0)
        {
            sum -= max(0ll, d[l - 1]);
            d[l - 1] += x;
            sum += max(0ll, d[l - 1]);
        }
        else
            a[0] += x;
        if (r < n - 1)
        {
            sum -= max(0ll, d[r]);
            d[r] -= x;
            sum += max(0ll, d[r]);
        }
        cout << max((a[0] + sum) / 2, a[0] + sum - (a[0] + sum) / 2) << '\n';
    }
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <algorithm>
#include <array>
#include <cstdio>
#include <cstring>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <unordered_map>
#include <vector>

using namespace std;

#define DEB if (0)
typedef long long LL;
typedef pair<int, int> pii;

const int N = 100010;
LL a[N], b[N];

LL calc(int x)
{
    return x == 1 ? b[x] : max(b[x], 0LL);
}

void update(LL& ans, int x, LL y)
{
    ans -= calc(x);
    b[x] += y;
    ans += calc(x);
}

int main()
{
    int n, q;
    scanf(""%d"", &n);
    LL ans = 0;
    for (int i = 1; i <= n; ++i)
    {
        scanf(""%lld"", a + i);
        b[i] = a[i] - a[i - 1];
        ans += calc(i);
    }
    printf(""%lld\n"", (ans + (ans & 1)) / 2);
    scanf(""%d"", &q);
    while (q--)
    {
        int l, r;
        LL w;
        scanf(""%d%d%lld"", &l, &r, &w);
        update(ans, l, w);
        if (r < n)
            update(ans, r + 1, -w);
        printf(""%lld\n"", (ans + (ans & 1)) / 2);
    }
    return 0;
}
",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long

int res(int a, int sum)
{
    if (a < 0)
        sum += a;
    if (sum < 0)
        return sum / 2;
    else
        return (sum + 1) / 2;
}

int getV(int a)
{
    return a > 0 ? a : 0;
}

signed main()
{
    iostream::sync_with_stdio(false);
    int n;
    cin >> n;
    vector<int> a(n);
    for (int& a1 : a)
        cin >> a1;
    vector<int> d(n + 1);
    d[0] = a[0];
    for (int i = 1; i < n; i++)
        d[i] = a[i] - a[i - 1];
    int sum = 0;
    for (int i = 0; i < n; i++)
        sum += getV(d[i]);

    cout << res(d[0], sum) << endl;

    int q;
    cin >> q;
    while (q--)
    {
        int l, r, x;
        cin >> l >> r >> x;
        l--;
        int orig = getV(d[l]) + getV(d[r]);
        d[l] += x;
        if (r < n)
            d[r] -= x;
        sum += getV(d[l]) + getV(d[r]) - orig;
        cout << res(d[0], sum) << endl;
    }
}",1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pii pair<int, int>
const int maxn = 2e5 + 5;
const int mx = 40;
const int mod = 1e9 + 5;
const ll inf = 34359738370;
const int INF = 1e9 + 5;
struct
{
    int to, next;
} e[maxn << 1];
int head[maxn], cnt = 0;
int in[maxn], out[maxn], tot = 0;
int a[maxn], d[maxn];
int n;
map<int, int> all, temp;
void add(int v, int u)
{
    e[++cnt].to = u;
    e[cnt].next = head[v];
    head[v] = cnt;
}
void dfs(int u, int fa)
{
    in[u] = ++tot;
    int tt = temp[a[u]];
    temp[a[u]]++;
    for (int i = head[u]; i; i = e[i].next)
    {
        int to = e[i].to;
        if (to == fa)
            continue;
        int now = temp[a[u]];
        dfs(to, u);
        if (temp[a[u]] > now) // toa[u]  [1,in[to]-1]  [out[to]+1,n]
        {
            d[1]++, d[in[to]]--;
            d[out[to] + 1]++;
        }
    }
    out[u] = tot;
    if (temp[a[u]] - tt < all[a[u]]) // u  u
    {
        d[in[u]]++;
        d[out[u] + 1]--;
    }
}
int main()
{
#ifndef ONLINE_JUDGE
// freopen(""data.in.txt"",""r"",stdin);
// freopen(""data.out.txt"",""w"",stdout);
#endif
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%d"", a + i);
        all[a[i]]++;
    }
    for (int i = 1; i < n; i++)
    {
        int v, u;
        scanf(""%d %d"", &v, &u);
        add(v, u), add(u, v);
    }
    dfs(1, 0);
    int ans = 0;
    for (int i = 1; i <= n; i++)
    {
        d[i] += d[i - 1];
        if (!d[i])
            ans++;
    }
    cout << ans;
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"using namespace std;

#include <iostream>
#include <map>
#include <set>
#include <vector>
#include <algorithm>

#define MAXN 200005

int N, dp[MAXN], arr[MAXN], tin[MAXN], tout[MAXN], parent[MAXN], euler[MAXN], t, ans;
set<pair<int, int>> g;
vector<int> edges[MAXN];
map<int, vector<int>> mv, times;

void dfs(int cur)
{
    tin[cur] = t;
    euler[t++] = cur;
    for (int i : edges[cur])
    {
        if (i == parent[cur])
            continue;
        parent[i] = cur;
        dfs(i);
    }
    tout[cur] = t - 1;
    return;
}

void check(int cur)
{
    int total = 0;
    for (int i : edges[cur])
    {
        if (i == parent[cur])
            continue;
        int cnt = upper_bound(times[arr[cur]].begin(), times[arr[cur]].end(), tout[i])
            - lower_bound(times[arr[cur]].begin(), times[arr[cur]].end(), tin[i]);
        if (cnt)
        {
            g.insert({ cur, i });
        }
        total += cnt;
    }
    if (times[arr[cur]].size() - total - 1)
    {
        g.insert({ cur, parent[cur] });
    }
    return;
}

void init(int cur)
{
    for (int i : edges[cur])
    {
        if (i == parent[cur])
            continue;
        init(i);
        dp[cur] += dp[i] + g.count({ i, cur });
    }
    return;
}

void dfs2(int cur)
{
    if (dp[cur] == g.size())
    {
        ans++;
    }
    for (int i : edges[cur])
    {
        if (i == parent[cur])
            continue;
        dp[cur] -= dp[i];
        dp[cur] -= g.count({ i, cur });
        dp[i] += dp[cur];
        dp[i] += g.count({ cur, i });

        dfs2(i);

        dp[i] -= g.count({ cur, i });
        dp[i] -= dp[cur];
        dp[cur] += g.count({ i, cur });
        dp[cur] += dp[i];
    }
    return;
}

int main()
{
    cin >> N;
    for (int i = 0; i < N; ++i)
    {
        cin >> arr[i];
        mv[arr[i]].push_back(i);
    }
    for (int i = 0; i < N - 1; ++i)
    {
        int a, b;
        cin >> a >> b;
        a--;
        b--;
        edges[a].push_back(b);
        edges[b].push_back(a);
    }
    dfs(0);
    for (auto i : mv)
    {
        for (auto j : i.second)
        {
            times[i.first].push_back(tin[j]);
        }
        sort(times[i.first].begin(), times[i.first].end());
        for (auto j : i.second)
        {
            check(j);
        }
    }
    init(0);
    dfs2(0);
    cout << ans << endl;
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
using namespace std;

#define FAST                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(0);
#define pb push_back
#define eb emplace_back
#define ins insert
#define f first
#define s second
#define cbr cerr << ""hi\n""
#define mmst(x, v) memset((x), v, sizeof((x)))
#define siz(x) ll(x.size())
#define all(x) (x).begin(), (x).end()
#define lbd(x, y) (lower_bound(all(x), y) - x.begin())
#define ubd(x, y) (upper_bound(all(x), y) - x.begin())
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
inline long long rand(long long x, long long y)
{
    return rng() % (y + 1 - x) + x;
} // inclusive
string inline to_string(char c)
{
    string s(1, c);
    return s;
}
template <typename T>
inline T gcd(T a, T b)
{
    return a == 0 ? llabs(b) : gcd(b % a, a);
}

using ll = long long;
using ld = long double;
#define FOR(i, s, e) for (ll i = s; i <= ll(e); ++i)
#define DEC(i, s, e) for (ll i = s; i >= ll(e); --i)
using pi = pair<ll, ll>;
using spi = pair<ll, pi>;
using dpi = pair<pi, pi>;

long long LLINF = 1e18;
int INF = 1e9 + 1e6;
#define MAXN (200006)
int n, A[MAXN], depth[MAXN], st[MAXN], en[MAXN], co, p[MAXN], bck[MAXN];
vector<int> d, po[MAXN], v[MAXN];
ll psum[MAXN];
void dfs(int x, int par)
{
    st[x] = co++, p[x] = par, bck[st[x]] = x;
    for (auto i : v[x])
        if (i ^ par)
            depth[i] = depth[x] + 1, dfs(i, x);
    en[x] = co - 1;
}
ll got(int z, int x, int y)
{
    return ubd(po[z], y) - lbd(po[z], x);
}
int main()
{
    FAST cin >> n;
    FOR(i, 1, n) cin >> A[i], d.eb(A[i]);
    sort(all(d)), d.resize(unique(all(d)) - d.begin());
    FOR(i, 1, n) A[i] = lbd(d, A[i]);
    FOR(i, 1, n - 1)
    {
        int a, b;
        cin >> a >> b;
        v[a].eb(b), v[b].eb(a);
    }
    dfs(1, 1);
    FOR(i, 1, n) po[A[i]].eb(st[i]);
    FOR(i, 0, siz(d) - 1) sort(all(po[i]));
    FOR(i, 1, n)
    {
        int co = 0;
        for (auto j : v[i])
            if (j ^ p[i])
            {
                bool have = got(A[i], st[j], en[j]);
                co += have;
            }
        if (co >= 2)
        {
            cout << ""0\n"";
            return 0;
        }
        if (co == 1 && got(A[i], st[i], en[i]) != po[A[i]].size())
        {
            cout << ""0\n"";
            return 0;
        }
    }
    FOR(i, 0, siz(d) - 1) if (po[i].size() > 1)
    {
        if (en[bck[po[i][0]]] >= po[i][1])
        {
            ++psum[0];
            ll x = bck[po[i][0]];
            for (auto j : v[x])
                if (j ^ p[x])
                {
                    bool have = got(i, st[j], en[j]);
                    if (have)
                    {
                        --psum[st[j]];
                        ++psum[en[j] + 1];
                    }
                }
            --psum[po[i][0]];
            ++psum[en[bck[po[i][0]]]];
        }
        for (auto j : po[i])
        {
            ++psum[j], --psum[en[bck[j]] + 1];
        }
    }
    FOR(i, 1, n - 1) psum[i] += psum[i - 1];
    // FOR(i,0,n-1) cout<<psum[i]<<' '; cout<<'\n';
    int r = -1;
    FOR(i, 0, n - 1) if (psum[i] == 0) r = bck[i];
    // cerr<<""r: ""<<r<<'\n';
    if (r == -1)
    {
        cout << ""0\n"";
        return 0;
    }
    ll ans = 0;
    function<void(int, int)> dfs = [&](int x, int p)
    {
        if (po[A[x]].size() > 1)
            return;
        ++ans;
        for (auto i : v[x])
            if (i ^ p)
                dfs(i, x);
    };
    dfs(r, r);
    cout << ans << '\n';
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// In the name of Allah.
#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 5;
int n, st[N], en[N], a[N], cur, ps[N];
vector<int> adj[N];
map<int, int> mp, cnt;

void dfs(int u = 0, int par = -1)
{
    st[u] = cur++;
    int tmp = mp[a[u]];
    mp[a[u]]++;
    for (int v : adj[u])
        if (v != par)
        {
            int t = mp[a[u]];
            dfs(v, u);
            if (mp[a[u]] > t)
            {
                ps[0]++;
                ps[st[v]]--;
                ps[en[v]]++;
            }
        }
    en[u] = cur;
    if (cnt[a[u]] > mp[a[u]] - tmp)
    {
        ps[st[u]]++;
        ps[en[u]]--;
    }
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0);
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        cnt[a[i]]++;
    }
    for (int i = 0, u, v; i < n - 1; i++)
    {
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs();
    int ans = ps[0] == 0;
    for (int i = 1; i < n; i++)
    {
        ps[i] += ps[i - 1];
        ans += ps[i] == 0;
    }
    cout << ans << endl;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int head[200005], nxt[400005], pnt[400005], a[200005], n, E, ans[200005], dfn[200005];
int siz[200005], cnt[200005], T;
vector<int> V;
map<int, int> mp1;
map<int, vector<int> > mp;
void add_edge(int u, int v)
{
    pnt[E] = v;
    nxt[E] = head[u];
    head[u] = E++;
}
void dfs1(int u, int pre)
{
    mp1[a[u]]++;
    dfn[u] = ++T;
    siz[dfn[u]] = 1;
    cnt[u] = -mp1[a[u]];
    for (int i = head[u]; i != -1; i = nxt[i])
    {
        int v = pnt[i];
        if (v == pre)
            continue;
        dfs1(v, u);
        siz[dfn[u]] += siz[dfn[v]];
    }
    cnt[u] += mp1[a[u]];
}
void dfs2(int u, int pre)
{
    V.push_back(dfn[u]);
    if (mp[a[u]].size())
    {
        int val = *upper_bound(V.begin(), V.end(), mp[a[u]].back());
        ans[1]++;
        ans[n + 1]--;
        ans[val]--;
        ans[val + siz[val]]++;
        ans[dfn[u]]++;
        ans[dfn[u] + siz[dfn[u]]]--;
    }
    mp[a[u]].push_back(dfn[u]);
    if (mp[a[u]].size() + cnt[u] != mp1[a[u]])
        ans[dfn[u]]++, ans[dfn[u] + siz[dfn[u]]]--;
    for (int i = head[u]; i != -1; i = nxt[i])
    {
        int v = pnt[i];
        if (v == pre)
            continue;
        dfs2(v, u);
    }
    V.pop_back();
    mp[a[u]].pop_back();
}
int main()
{
    memset(head, -1, sizeof(head));
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    for (int i = 1; i < n; i++)
    {
        int u, v;
        cin >> u >> v;
        add_edge(v, u);
        add_edge(u, v);
    }
    dfs1(1, 0);
    dfs2(1, 0);
    for (int i = 1; i <= n; i++)
        ans[i] += ans[i - 1];
    int tot = 0;
    for (int i = 1; i <= n; i++)
        if (!ans[i])
            tot++;
    cout << tot;
}
// test",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;
const int N = 2e5 + 10;
ll a[N], sum[N], id[N], sz[N];
int tot;
vector<int> g[N];
map<int, int> cnt, vis;
inline void dfs(int u, int f) // sum
{
    sz[u] = 1, id[u] = ++tot;
    ll pre = vis[a[u]]++; //
    for (auto x : g[u])
    {
        if (x == f)
            continue;
        ll tmp = vis[a[u]];
        dfs(x, u);
        sz[u] += sz[x];
        if (tmp != vis[a[u]])
        {
            //
            sum[1]++;
            sum[id[x]]--;
            sum[id[x] + sz[x]]++;
        }
    }
    if (vis[a[u]] - pre != cnt[a[u]])
    {
        //uu
        sum[id[u]]++;
        sum[id[u] + sz[u]]--;
    }
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
        cnt[a[i]]++;
    }
    for (int i = 1; i < n; i++)
    {
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1, 0);
    ll ans = 0;
    for (int i = 1; i <= n; i++)
    {
        sum[i] += sum[i - 1];
        ans += (sum[i] == 0);
    }
    cout << ans << endl;

    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/// Asta e cea mai clean solutie si vreau sa o las ultima trimisa
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define debug(x) cerr << #x << "" "" << x << ""\n""
#define debug_with_space(x) cerr << #x << "" "" << x << "" ""

using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<double, pii> muchie;
typedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> OST;

const ll NMAX = 200001;
const ll INF = (1LL << 60);
const ll MOD = 1000000007;
const ll BLOCK = 225;
const ll base = 31;
const ll nr_of_bits = 21;

vector<int> v[NMAX];
int root;
bool restul[NMAX];
bool subarbore[NMAX];
map<int, int> mp[NMAX];
int cn[NMAX];
int col[NMAX];
bool mere[NMAX];
int parent[NMAX];
int n;
int cnt;
int cate[NMAX];
map<int, int> total;

void merge(map<int, int>& a, map<int, int>& b)
{
    if (a.size() < b.size())
        swap(a, b);
    for (auto x : b)
    {
        a[x.first] += x.second;
    }
}

void DFS(int node, int p)
{
    int ap = 0, bune = 0;
    cate[node] = 1;
    for (auto x : v[node])
    {
        if (x == p)
            continue;
        DFS(x, node);
        bune += subarbore[x];
        cate[node] += mp[x][col[node]];
    }
    int sons = v[node].size() - (node != root);
    if (bune == sons && cate[node] == 1)
    {
        subarbore[node] = 1;
    }
    for (auto x : v[node])
    {
        if (x == p)
            continue;
        if (bune - subarbore[x] == sons - 1 && cate[node] - mp[x][col[node]] == 1)
        {
            mere[x] = 1;
        }
    }
    for (auto x : v[node])
    {
        if (x == p)
            continue;
        merge(mp[node], mp[x]);
    }
    mp[node][col[node]]++;
}

void Rerooting(int node, int p)
{
    if (node != root)
    {
        int ok = (restul[p] & mere[node] & (total[col[node]] - cate[node] == 0));
        restul[node] = ok;
    }
    if (restul[node] && subarbore[node])
        cnt++;
    for (auto x : v[node])
    {
        if (x == p)
            continue;
        Rerooting(x, node);
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int i;
    cin >> n;
    for (i = 1; i <= n; i++)
    {
        cin >> col[i];
        total[col[i]]++;
    }
    for (i = 1; i < n; i++)
    {
        int x, y;
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    for (i = 1; i <= n; i++)
    {
        if (v[i].size() == 1)
        {
            root = i;
            break;
        }
    }
    DFS(root, 0);
    restul[root] = 1;
    Rerooting(root, 0);
    cout << cnt;
    return 0;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int N = 2e5 + 10;

int n, a[N], cnt[N];
vector<int> v[N];

int idx;
unordered_map<int, int> mp;
int get(int val)
{
    if (mp.count(val))
        return mp[val];
    return mp[val] = ++idx;
}

int cf[N];
void add(int l, int r)
{
    cf[l]++, cf[r + 1]--;
}

int dfn[N], ma[N], _time;
int pos[N];
void dfs(int son, int fa)
{
    dfn[son] = ++_time;
    int tmp = pos[a[son]];
    pos[a[son]]++;
    for (auto x : v[son])
    {
        if (x == fa)
            continue;
        int pre = pos[a[son]];
        dfs(x, son);
        int now = pos[a[son]];
        if (pre != now)
            add(1, dfn[x] - 1), add(ma[x] + 1, n);
    }
    ma[son] = _time;
    if (pos[a[son]] - tmp != cnt[a[son]])
        add(dfn[son], ma[son]);
}

int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%d"", &a[i]);
    for (int i = 1; i <= n; i++)
    {
        a[i] = get(a[i]);
        cnt[a[i]]++;
    }

    for (int i = 1; i < n; i++)
    {
        int x, y;
        scanf(""%d %d"", &x, &y);
        v[x].push_back(y);
        v[y].push_back(x);
    }

    dfs(1, 0);

    int ans = 0;
    for (int i = 1; i <= n; i++)
    {
        cf[i] += cf[i - 1];
        if (cf[i] == 0)
            ans++;
    }
    printf(""%d\n"", ans);

    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define mp make_pair
#define pb push_back

const int N = 5e5;
vector<int> adj[N];
int a[N], par[N], n;

map<int, vector<int>> v, times;
int euler[N * 2 - 1], tin[N], tout[N], c = 0;

set<pair<int, int>> g;
int dp[N], ans;


void dfs(ll x, ll p = -1)
{
    par[x] = p;
    tin[x] = c++;
    for (auto z : adj[x])
    {
        if (z != p)
        {
            dfs(z, x);
        }
    }
    tout[x] = c++;
}

void examine(int v)
{
    int sum = 0;

    for (int i : adj[v])
    {
        if (i == par[v])
            continue;

        int count = upper_bound(times[a[v]].begin(), times[a[v]].end(), tout[i])
            - lower_bound(times[a[v]].begin(), times[a[v]].end(), tin[i]);
        if (count > 0)
            g.insert({ v, i });
        sum += count;
    }

    sum = times[a[v]].size() - sum - 1;
    if (sum)
        g.insert({ v, par[v] });
}


ll setup(ll x)
{
    for (auto z : adj[x])
    {
        if (z != par[x])
        {
            dp[x] += setup(z);
        }
    }
    return dp[x] + g.count(mp(x, par[x]));
}

void reroot(ll x)
{
    if (g.size() == dp[x])
    {
        // trace(x);
        ans++;
    }
    for (auto z : adj[x])
    {
        if (z != par[x])
        {
            // trace(x,z,dp[x],dp[z]);
            dp[x] -= dp[z];
            dp[x] -= g.count(mp(z, x));
            dp[z] += dp[x];
            dp[z] += g.count(mp(x, z));
            // trace(x,z,dp[x],dp[z]);
            reroot(z);

            dp[z] -= g.count(mp(x, z));
            dp[z] -= dp[x];
            dp[x] += g.count(mp(z, x));
            dp[x] += dp[z];
        }
    }
}

int solveTestCase()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];

    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    dfs(0);
    for (int i = 0; i < n; i++)
        v[a[i]].push_back(i);

    for (auto i : v)
    {
        if (i.second.size() == 1)
            continue;

        for (int j : i.second)
            times[i.first].push_back(tin[j]);
        sort(times[i.first].begin(), times[i.first].end());
        for (int j : i.second)
            examine(j);
    }

    setup(0);
    reroot(0);

    cout << ans;
}

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int t = 1;
    // cin >> t;
    while (t--)
        solveTestCase();
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int N = 2e5 + 15;

int a[N], tmp[N], org[N], cur[N];

vector<int> adj[N];

int cnt[N];

void dfs(int node, int par)
{
    int color = a[node];
    int be = cur[color];
    int x = cur[color];

    for (int ch : adj[node])
    {
        if (ch == par)
            continue;
        dfs(ch, node);
        if (x != cur[color])
        {
            ++cnt[1];
            --cnt[ch];
        }
        x = cur[color];
    }
    ++cur[color];

    if (cur[color] - be != org[color])
    {
        ++cnt[node];
    }
}

int dfs2(int node, int par)
{
    int ret = 0;
    if (cnt[node] == 0)
        ++ret;
    for (int ch : adj[node])
    {
        if (ch != par)
        {
            cnt[ch] += cnt[node];
            ret += dfs2(ch, node);
        }
    }
    return ret;
}

void solve2()
{
    int n, m;
    scanf(""%d "", &n);
    for (int i = 1; i <= n; ++i)
    {
        scanf(""%d "", &a[i]);
        tmp[i] = a[i];
    }
    sort(tmp + 1, tmp + n + 1);
    for (int i = n; i; --i)
    {
        a[i] = lower_bound(tmp + 1, tmp + n + 1, a[i]) - tmp;
        org[a[i]]++;
    }

    for (int i = 0; i < n - 1; ++i)
    {
        int u, v;
        scanf(""%d%d"", &u, &v);
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs(1, 0);
    printf(""%d\n"", dfs2(1, 0));
}

void solve()
{
    solve2();
}

int main()
{
    // freopen(""input.txt"",""r"",stdin);
    solve();
    return 0;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int N = 2e5 + 5;
int n;
int a[N];
int u, v;
int tot, head[N], ver[N << 1], nxt[N << 1];
inline void add(int x, int y)
{
    ver[++tot] = y;
    nxt[tot] = head[x];
    head[x] = tot;
}
map<int, int> cnt, cur;
int del[N];
inline void dfs(int p, int fa)
{
    int las = cur[a[p]];
    ++cur[a[p]];
    for (int i = head[p]; i; i = nxt[i])
    {
        int to = ver[i];
        if (to == fa)
            continue;
        int son = cur[a[p]];
        dfs(to, p);
        if (cur[a[p]] > son)
        {
            --del[to];
            ++del[1];
        }
    }
    int delta = cur[a[p]] - las;
    if (delta < cnt[a[p]])
        del[p]++;
}
int f[N];
int ans;
inline void dfs1(int p, int fa, int pl)
{
    f[p] = pl;
    if (!f[p])
        ++ans;
    for (int i = head[p]; i; i = nxt[i])
    {
        int to = ver[i];
        if (to == fa)
            continue;
        dfs1(to, p, pl + del[to]);
    }
}
int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; ++i)
        scanf(""%d"", &a[i]), cnt[a[i]]++;
    for (int i = 1; i < n; ++i)
    {
        scanf(""%d%d"", &u, &v);
        add(u, v), add(v, u);
    }
    dfs(1, 0);
    //	for(int i=1;i<=n;++i) printf(""del[%d]:%d\n"",i,del[i]);
    dfs1(1, 0, del[1]);
    //	for(int i=1;i<=n;++i) printf(""f[%d]:%d\n"",i,f[i]);
    printf(""%d"", ans);
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long

const int N = 5e5;
vector<int> adj[N];
int a[N], par[N], n;

map<int, vector<int>> v, times;
int euler[N * 2 - 1], tin[N], tout[N], c = 0;

set<pair<int, int>> g;
int dp[N], ans;

void dfs(int v, int p = -1)
{
    par[v] = p;
    tin[v] = c;
    euler[c++] = v;

    for (int i : adj[v])
    {
        if (i == p)
            continue;
        dfs(i, v);
        euler[c++] = v;
    }

    tout[v] = c - 1;
}

void examine(int v)
{
    int sum = 0;

    for (int i : adj[v])
    {
        // 
        if (i == par[v])
            continue;

        int count = upper_bound(times[a[v]].begin(), times[a[v]].end(), tout[i])
            - lower_bound(times[a[v]].begin(), times[a[v]].end(), tin[i]);
        // v -> i 
        if (count > 0)
            g.insert({ v, i });
        sum += count;
    }

    sum = times[a[v]].size() - sum - 1;
    if (sum)
        g.insert({ v, par[v] });
}

int setup(int v)
{
    for (int i : adj[v])
    {
        if (i != par[v])
            dp[v] += setup(i);
    }
    return dp[v] + g.count({ v, par[v] });
}

void reroot(int v)
{
    if (dp[v] == g.size())
        ans++;

    for (int i : adj[v])
    {
        if (i == par[v])
            continue;

        dp[v] -= dp[i];
        dp[v] -= g.count({ i, v });
        dp[i] += dp[v];
        dp[i] += g.count({ v, i });

        reroot(i);

        dp[i] -= g.count({ v, i });
        dp[i] -= dp[v];
        dp[v] += g.count({ i, v });
        dp[v] += dp[i];
    }
}

int solveTestCase()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];

    // 
    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    // 0
    dfs(0);

    // v[x] := a[i] = x  i 
    for (int i = 0; i < n; i++)
        v[a[i]].push_back(i);

    // 
    for (auto i : v)
    {
        if (i.second.size() == 1)
            continue;

        for (int j : i.second)
            times[i.first].push_back(tin[j]);
        sort(times[i.first].begin(), times[i.first].end());

        //  examine() 
        for (int j : i.second)
            examine(j);
    }

    setup(0);
    reroot(0);

    cout << ans;
    return 0;
}

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int t = 1;
    // cin >> t;
    while (t--)
        solveTestCase();
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <queue>
#include <iostream>
#include <cstring>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <string>
#include <vector>
#include <cmath>
#include <algorithm>
#define IOS                                                                                        \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0);                                                                                    \
    cout.tie(0);
using namespace std;
typedef long long ll;
const int maxn = 2e5 + 8;
const int mod = 1e9 + 7;
int a1[maxn], b1[maxn];
int cnt1[maxn], cnt2[maxn], dfn[maxn], cha[maxn], time, size[maxn], n;
struct Edge
{
    int v, next;
} edge[maxn * 2];
int head[maxn], tol;
void addEdge(int u, int v)
{
    edge[tol].v = v;
    edge[tol].next = head[u];
    head[u] = tol++;
}
void update(int l, int r, int val)
{
    cha[l] += val, cha[l + r] -= val;
}
int dfs(int s, int pre)
{
    size[s] = 1;
    dfn[s] = ++time;
    int now = cnt2[a1[s]];
    cnt2[a1[s]]++;
    for (int i = head[s]; i != 0; i = edge[i].next)
    {
        int v = edge[i].v;
        if (v == pre)
            continue;
        int ele = cnt2[a1[s]];
        size[s] += dfs(v, s);
        if (cnt2[a1[s]] > ele)
        {
            update(1, n, 1), update(dfn[v], size[v], -1);
        }
    }
    if (cnt2[a1[s]] - now != cnt1[a1[s]])
    {
        update(dfn[s], size[s], 1);
    }
    return size[s];
}
int main()
{
    //	freopen(""in.txt"",""r"",stdin);
    //	freopen(""out.txt"",""w"",stdout);
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%d"", &a1[i]), b1[i] = a1[i];
    sort(b1 + 1, b1 + 1 + n);
    int in1 = 0;
    tol = 1;
    for (int i = 1; i <= n; i++)
        if (b1[i] != b1[i - 1])
            b1[++in1] = b1[i];
    for (int i = 1; i <= n; i++)
    {
        int x = lower_bound(b1 + 1, b1 + in1 + 1, a1[i]) - b1;
        cnt1[x]++, a1[i] = x;
    }
    for (int i = 1; i <= n - 1; i++)
    {
        int u, v;
        scanf(""%d%d"", &u, &v);
        addEdge(u, v), addEdge(v, u);
    }
    dfs(1, 0);
    int ans = 0;
    for (int i = 1; i <= n; i++)
    {
        cha[i] += cha[i - 1];
        if (cha[i] == 0)
            ans++;
    }
    printf(""%d\n"", ans);
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define ll long long
#define f first
#define s second
#define vi vector<int>
#define vvi vector<vector<int>>
#define pb push_back
#define mp make_pair
typedef long double ld;
#define ordered_set                                                                                \
    tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,                             \
        tree_order_statistics_node_update>
const int MX = 1e6 + 5;
vector<int> a;
vector<vector<int>> adj;
map<int, int> freq; // compress?
vector<map<int, int>> in;
vector<vector<bool>> workIn;
vector<bool> workOut;
vector<int> f;
vector<int> num;
void dfs(int curr, int par)
{
    ++in[curr][a[curr]];
    bool tot = true;
    for (int next : adj[curr])
    {
        if (next == par)
            continue;
        dfs(next, curr);
        workIn[curr].pb(workIn[next].back() && (in[next][a[curr]] == 0));
        tot &= workIn[curr].back();
        if (!workIn[curr].back())
            ++num[curr];
        if (in[next].size() > in[curr].size())
            swap(in[next], in[curr]);
        for (auto& it : in[next])
        {
            in[curr][it.f] += it.s;
        }
        in[next].clear();
    }
    f[curr] = in[curr][a[curr]];
    workIn[curr].pb(tot);
}
void dfs2(int curr, int par)
{
    int i = 0;
    int x = num[curr];
    for (int next : adj[curr])
    {
        if (next == par)
            continue;
        if (!workIn[curr][i])
            --x;
        workOut[next] = workOut[curr] && (x == 0) && (freq[a[next]] == f[next]);
        if (!workIn[curr][i])
            ++x;
        ++i;
        dfs2(next, curr);
    }
}

int main()
{
    int n;
    cin >> n;
    a.resize(n);
    num.resize(n);
    for (auto& a : a)
        cin >> a, --a, ++freq[a];
    adj.resize(n);
    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        --u, --v;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    in.resize(n);
    workIn.resize(n);
    workOut.resize(n);
    f.resize(n);
    workOut[0] = true;
    dfs(0, -1);
    dfs2(0, -1);
    int ans = 0;
    for (int i = 0; i < n; i++)
    {
        // cout << num[i] << ""\n"";
        ans += workIn[i].back() && workOut[i];
    }
    cout << ans << ""\n"";
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
//#define LOCAL
#define pb push_back
#define debug(a) cout << #a << "": "" << a << endl
#define ALL(a) a.begin(), a.end()
#define For(i, x, y) for (int i = (x); i <= (y); i++)
#define fori(i, x, y) for (int i = (x); i < (y); i++)
using namespace std;
typedef long long ll;
const int maxn = 2e5 + 10;
int dfn[maxn], tot; // dfs,
int c[maxn], a[maxn], have[maxn], now[maxn];
int in[maxn], ou[maxn];
vector<int> vec, e[maxn];
int n;
void dfs(int x, int fa)
{
    dfn[++tot] = x;
    in[x] = tot;
    int now_v = now[a[x]]++;
    //++[a[x]];
    for (auto v : e[x])
    { // for(int i = 0;i < G[x].size();i++) {
        if (v == fa)
            continue;
        int pre = now[a[x]];
        dfs(v, x);
        if (now[a[x]] > pre)
        { //a[x]
            // x
            c[1]++;
            /// debug(c[1]);
            c[in[v]]--;
            /// FIRST use pre node to build is invaild

            c[ou[v] + 1]++; //dfs
        }
    }
    // ed[x] = cnt;
    ou[x] = tot;
    if (now[a[x]] - now_v != have[a[x]])
    { //a[x]xx
        c[in[x]]++;
        c[ou[x] + 1]--;
    }
}

void sol()
{
    cin >> n;
    For(i, 1, n) cin >> a[i], vec.pb(a[i]);
    fori(i, 1, n)
    {
        int u, v;
        cin >> u >> v;
        e[u].pb(v);
        e[v].pb(u);
    }

    sort(ALL(vec));
    vec.erase(unique(ALL(vec)), vec.end());
    For(i, 1, n)
    {
        a[i] = lower_bound(ALL(vec), a[i]) - vec.begin();
        have[a[i]]++;
    }
    // c[1] = 1;
    dfs(1, -1);
    int cur = 0, ans = 0;
    For(i, 1, n)
    {
        cur += c[i];
        if (cur == 0)
            ans++;
    }
    cout << ans;
}

int main()
{
#ifdef LOCAL
    freopen(""in.txt"", ""r"", stdin);
#else

#endif // LOCAL
    sol();
    return 0;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define LL long long
#define MEM(a, b) memset(a, b, sizeof a)
#define FI first
#define SE second
#define PB push_back
#define FastIO ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
using namespace std;
const int N = 2e5 + 10;
const int M = 1e5 + 10;
const int inf = 0x3f3f3f3f;
const int mod = 1e9 + 7;
vector<int> vec[N], vv;
int n, tot;
int a[N], c[N];
int cnt[N], all[N];
int st[N], ed[N];
void dfs(int x, int fa)
{
    st[x] = ++tot;
    int tmp = cnt[a[x]];
    cnt[a[x]]++;
    for (auto it : vec[x])
    {
        if (it == fa)
            continue;
        int y = cnt[a[x]];
        dfs(it, x);
        if (cnt[a[x]] != y)
        {
            c[1]++;
            c[st[it]]--;
            c[ed[it] + 1]++;
        }
    }
    ed[x] = tot;
    if (cnt[a[x]] - tmp != all[a[x]])
    {
        c[st[x]]++;
        c[ed[x] + 1]--;
    }
}
int main()
{
    FastIO;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
        vv.PB(a[i]);
    }
    sort(vv.begin(), vv.end());
    vv.erase(unique(vv.begin(), vv.end()), vv.end());
    for (int i = 1; i <= n; i++)
    {
        a[i] = lower_bound(vv.begin(), vv.end(), a[i]) - vv.begin() + 1;
        all[a[i]]++;
    }
    //	for(int i=1;i<=n;i++) cout<<i<<"":""<<a[i]<<endl;
    for (int i = 1; i < n; i++)
    {
        int u, v;
        cin >> u >> v;
        vec[u].PB(v);
        vec[v].PB(u);
    }
    tot = 0;
    dfs(1, 0);
    int ans = 0;
    for (int i = 1; i <= n; i++)
    {
        c[i] += c[i - 1];
        if (c[i] == 0)
            ans++;
    }
    //	for(int i=1;i<=n;i++) cout<<i<<"":""<<c[i]<<endl;
    cout << ans << ""\n"";
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define IOS ios::sync_with_stdio(false), cin.tie(0)
#define debug(a) cout << #a << "": "" << a << endl
using namespace std;
typedef long long ll;
const int N = 2e5 + 7;
int n, a[N], cnt[N];
vector<int> hs, g[N];
int tot, dfn[N], in[N], out[N], pre[N], msg[N];
int get(int x)
{
    return lower_bound(hs.begin(), hs.end(), x) - hs.begin();
}
void dfs(int u, int p)
{
    dfn[++tot] = u;
    in[u] = tot;
    int mrk1 = msg[a[u]];
    msg[a[u]]++;
    for (int i = 0; i < g[u].size(); ++i)
    {
        int v = g[u][i];
        if (v == p)
            continue;
        int mrk2 = msg[a[u]];
        dfs(v, u);
        if (mrk2 < msg[a[u]])
        {
            pre[1]++;
            pre[in[v]]--;
            pre[out[v] + 1]++;
        }
    }
    out[u] = tot;
    if (msg[a[u]] - mrk1 != cnt[a[u]])
    {
        pre[in[u]]++;
        pre[out[u] + 1]--;
    }
}
int main(void)
{
    IOS;
    cin >> n;
    for (int i = 1; i <= n; ++i)
    {
        cin >> a[i];
        hs.push_back(a[i]);
    }
    sort(hs.begin(), hs.end());
    hs.erase(unique(hs.begin(), hs.end()), hs.end());
    for (int i = 1; i <= n; ++i)
    {
        a[i] = get(a[i]);
        cnt[a[i]]++;
    }
    for (int i = 0; i < n - 1; ++i)
    {
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1, 0);
    int ans = 0;
    for (int i = 1; i <= n; ++i)
    {
        pre[i] += pre[i - 1];
        if (pre[i] == 0)
            ans++;
    }
    cout << ans << endl;
    return 0;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define m_p make_pair
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int)(x).size())
#define fi first
#define se second
typedef long long ll;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937 rnf(2106);
const int N = 200005;

int n;
int a[N];
vector<int> g[N];

int tin[N], tout[N], ti;
void dfs0(int x, int p)
{
    tin[x] = ++ti;
    for (int i = 0; i < g[x].size(); ++i)
    {
        int h = g[x][i];
        if (h == p)
            continue;
        dfs0(h, x);
    }
    tout[x] = ti;
}

vector<int> v[N];

bool dp[N];
bool stg(int x, int h)
{
    if (!dp[h])
        return false;
    auto it = lower_bound(all(v[a[x]]), tin[h]);
    if (it != v[a[x]].end() && *it <= tout[h])
        return false;
    return true;
}
void dfs1(int x, int p)
{
    dp[x] = true;
    for (int i = 0; i < g[x].size(); ++i)
    {
        int h = g[x][i];
        if (h == p)
            continue;
        dfs1(h, x);
        dp[x] = (dp[x] && stg(x, h));
    }
}

int ans;
void dfs2(int x, int p)
{
    if (dp[x])
    {
        if (sz(v[a[x]]) == 1)
            ++ans;
    }
    vector<int> t;
    for (int i = 0; i < g[x].size(); ++i)
    {
        int h = g[x][i];
        if (h == p)
            continue;
        if (!stg(x, h))
            t.push_back(h);
    }
    auto it = upper_bound(all(v[a[x]]), tout[x]);
    if (it != v[a[x]].end())
        return;
    if (v[a[x]][0] != tin[x])
        return;
    if (sz(t) >= 2)
        return;
    if (sz(t) == 1)
    {
        dfs2(t[0], x);
        return;
    }
    for (int i = 0; i < g[x].size(); ++i)
    {
        int h = g[x][i];
        if (h == p)
            continue;
        dfs2(h, x);
    }
}

void solv()
{
    cin >> n;
    for (int i = 1; i <= n; ++i)
        cin >> a[i];
    for (int i = 0; i < n - 1; ++i)
    {
        int x, y;
        cin >> x >> y;
        g[x].push_back(y);
        g[y].push_back(x);
    }

    dfs0(1, 1);

    vector<int> xt;
    for (int x = 1; x <= n; ++x)
        xt.push_back(a[x]);
    sort(all(xt));
    for (int x = 1; x <= n; ++x)
        a[x] = lower_bound(all(xt), a[x]) - xt.begin() + 1;

    for (int x = 1; x <= n; ++x)
        v[a[x]].push_back(tin[x]);
    for (int i = 1; i <= n; ++i)
        sort(all(v[i]));

    dfs1(1, 1);

    dfs2(1, 1);

    cout << ans << endl;
}

int main()
{
#ifdef SOMETHING
    freopen(""input.txt"", ""r"", stdin);
// freopen(""output.txt"", ""w"", stdout);
#endif // SOMETHING
    ios_base::sync_with_stdio(false), cin.tie(0);

    int tt = 1;
    // scanf(""%d"", &tt);
    // cin >> tt;
    while (tt--)
    {
        solv();
    }
    return 0;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long

const int N = 5e5;
vector<int> adj[N];
int a[N], par[N], n;

map<int, vector<int>> v, times;
int euler[N * 2 - 1], tin[N], tout[N], c = 0;

set<pair<int, int>> g;
int dp[N], ans;

void dfs(int v, int p = -1)
{
    par[v] = p;
    tin[v] = c;
    euler[c++] = v;

    for (int i : adj[v])
    {
        if (i == p)
            continue;
        dfs(i, v);
        euler[c++] = v;
    }

    tout[v] = c - 1;
}

void examine(int v)
{
    int sum = 0;

    for (int i : adj[v])
    {
        if (i == par[v])
            continue;

        int count = upper_bound(times[a[v]].begin(), times[a[v]].end(), tout[i])
            - lower_bound(times[a[v]].begin(), times[a[v]].end(), tin[i]);
        if (count > 0)
            g.insert({ v, i });
        sum += count;
    }

    sum = times[a[v]].size() - sum - 1;
    if (sum)
        g.insert({ v, par[v] });
}

int setup(int v)
{
    for (int i : adj[v])
    {
        if (i != par[v])
            dp[v] += setup(i);
    }
    return dp[v] + g.count({ v, par[v] });
}

void reroot(int v)
{
    if (dp[v] == g.size())
        ans++;

    for (int i : adj[v])
    {
        if (i == par[v])
            continue;

        dp[v] -= dp[i];
        dp[v] -= g.count({ i, v });
        dp[i] += dp[v];
        dp[i] += g.count({ v, i });

        reroot(i);

        dp[i] -= g.count({ v, i });
        dp[i] -= dp[v];
        dp[v] += g.count({ i, v });
        dp[v] += dp[i];
    }
}

int solveTestCase()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];

    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    dfs(0);
    for (int i = 0; i < n; i++)
        v[a[i]].push_back(i);

    for (auto i : v)
    {
        if (i.second.size() == 1)
            continue;

        for (int j : i.second)
            times[i.first].push_back(tin[j]);
        sort(times[i.first].begin(), times[i.first].end());
        for (int j : i.second)
            examine(j);
    }

    setup(0);
    reroot(0);

    cout << ans;
}

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int t = 1;
    // cin >> t;
    while (t--)
        solveTestCase();
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int N = 2e5 + 200;
const int L = 18;
vector<int> g[N];
int tin[N], tout[N], timer, up[N][L + 1], a[N];
map<int, vector<int>> val;
bool can[N];

void dfs(int v, int p)
{
    tin[v] = ++timer;
    up[v][0] = p;
    for (int i = 1; i <= L; i++)
        up[v][i] = up[up[v][i - 1]][i - 1];
    for (int to : g[v])
        if (to != p)
            dfs(to, v);
    tout[v] = ++timer;
}

bool upper(int a, int b)
{
    return tin[a] <= tin[b] && tout[a] >= tout[b];
}

int get_lca(int a, int b)
{
    if (upper(a, b))
        return a;
    if (upper(b, a))
        return b;
    for (int i = L; i >= 0; i--)
        if (!upper(up[a][i], b))
            a = up[a][i];
    return up[a][0];
}

int sub[N];

void dfs2(int v, int p, int cur = 0)
{
    cur += sub[v];
    sub[v] = cur;
    for (int to : g[v])
        if (to != p)
            dfs2(to, v, cur);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        val[a[i]].push_back(i);
    }
    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--;
        v--;
        g[v].push_back(u);
        g[u].push_back(v);
    }
    dfs(0, 0);
    int e = 0;
    for (auto[clr, b] : val)
    {
        if (b.size() > 1)
        {
            e++;
            int lca = -1;
            for (int v : b)
            {
                can[v] = false;
                if (lca == -1)
                    lca = v;
                else
                    lca = get_lca(lca, v);
            }
            sort(b.begin(), b.end(), [&](int a, int b)
                {
                    return tin[a] <= tin[b];
                });
            bool _lca = false, f = false;
            for (int x : b)
                if (x == lca)
                    _lca = true;
            int cnt = 0;
            for (int i = 0; i + 1 < b.size(); i++)
            {
                if (tout[b[i]] >= tout[b[i + 1]])
                    cnt++;
                if (get_lca(b[i], b[i + 1]) == lca && b[i] != lca && b[i + 1] != lca)
                    f = true;
            }
            if (cnt > 1 || ((_lca || cnt > 0) && f))
            {
                cout << 0;
                return 0;
            }
            if (_lca)
            {
                for (int to : g[lca])
                {
                    if (!upper(to, lca) && a[to] != clr)
                    {
                        int l = 0, r = b.size();
                        while (l < r)
                        {
                            int mid = (l + r) / 2;
                            if (tin[b[mid]] >= tin[to])
                                r = mid;
                            else
                                l = mid + 1;
                        }
                        if (l < b.size() && tout[b[l]] <= tout[to])
                            sub[to]++;
                    }
                }
                for (int x : b)
                    if (x != lca)
                        sub[x]--;
            }
            else
            {
                sub[0]++;
                for (int x : b)
                    sub[x]--;
            }
        }
    }
    dfs2(0, 0);
    int ans = 0;
    for (int i = 0; i < n; i++)
        ans += (sub[i] == e);
    cout << ans;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int N = 2e5 + 200;
vector<int> g[N];
map<int, int> sta, num;
int f[N], ans, a[N];
void dfs(int u, int fa)
{
    int bas = sta[a[u]];
    sta[a[u]]++;
    for (auto v : g[u])
    {
        if (v == fa)
            continue;
        int k = sta[a[u]];
        dfs(v, u);
        if (k != sta[a[u]])
        {
            f[1]++;
            f[v]--;
        }
    }
    if (sta[a[u]] - bas != num[a[u]])
        f[u]++;
}
void solve(int u, int fa, int res)
{
    if (!res)
    {
        ans++;
    }
    for (auto v : g[u])
    {
        if (v == fa)
            continue;
        solve(v, u, res + f[v]);
    }
}
int main()
{
    int n;
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%d"", &a[i]);
        num[a[i]]++;
    }
    for (int i = 1; i <= n - 1; i++)
    {
        int u, v;
        scanf(""%d%d"", &u, &v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1, 0);
    solve(1, 0, f[1]);
    printf(""%d"", ans);
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
using namespace std;

inline int read()
{
    char c = getchar();
    int x = 0;
    bool f = 0;
    for (; !isdigit(c); c = getchar())
        f ^= !(c ^ 45);
    for (; isdigit(c); c = getchar())
        x = (x << 1) + (x << 3) + (c ^ 48);
    if (f)
        x = -x;
    return x;
}

const int M = 2e5 + 10;
int n, a[M], d[M];
int dfn[M], out[M], ti;
vector<int> e[M];
map<int, int> c, t;

void dfs(int u, int fa)
{
    dfn[u] = ++ti;
    int k = c[a[u]];
    c[a[u]]++;
    for (int i = 0; i < e[u].size(); i++)
    {
        int to = e[u][i];
        if (to == fa)
            continue;
        int tmp = c[a[u]];
        dfs(to, u);
        if (c[a[u]] > tmp)
            d[1]++, d[dfn[to]]--, d[out[to] + 1]++;
    }
    out[u] = ti;
    if (c[a[u]] - k < t[a[u]])
        d[dfn[u]]++, d[out[u] + 1]--;
}

signed main()
{
    n = read();
    for (int i = 1; i <= n; i++)
        a[i] = read(), t[a[i]]++;
    for (int i = 1; i < n; i++)
    {
        int u = read(), v = read();
        e[u].push_back(v);
        e[v].push_back(u);
    }
    dfs(1, 0);
    int ans = 0;
    for (int i = 1; i <= n; i++)
        d[i] += d[i - 1];
    for (int i = 1; i <= n; i++)
        if (!d[i])
            ans++;
    cout << ans << endl;
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back
#define X first
#define Y second
#define y0 y12
#define y1 y22
#define INF 987654321
#define PI 3.141592653589793238462643383279502884
#define fup(i, a, b, c) for (int(i) = (a); (i) <= (b); (i) += (c))
#define fdn(i, a, b, c) for (int(i) = (a); (i) >= (b); (i) -= (c))
#define MEM0(a) memset((a), 0, sizeof(a))
#define MEM_1(a) memset((a), -1, sizeof(a))
#define ALL(a) a.begin(), a.end()
#define COMPRESS(a)                                                                                \
    sort(ALL(a));                                                                                  \
    a.resize(unique(ALL(a)) - a.begin())
#define SYNC                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(0)
using namespace std;
typedef long long ll;
typedef long double ld;
typedef double db;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<int, int> Pi;
typedef pair<ll, ll> Pll;
typedef pair<ld, ld> Pd;
typedef vector<int> Vi;
typedef vector<ll> Vll;
typedef vector<ld> Vd;
typedef vector<Pi> VPi;
typedef vector<Pll> VPll;
typedef vector<Pd> VPd;
typedef tuple<int, int, int> iii;
typedef tuple<int, int, int, int> iiii;
typedef tuple<ll, ll, ll> LLL;
typedef vector<iii> Viii;
typedef vector<LLL> VLLL;
typedef complex<double> base;
const int MOD = 1000000007;
ll POW(ll a, ll b, ll MMM = MOD)
{
    ll ret = 1;
    for (; b; b >>= 1, a = (a * a) % MMM)
        if (b & 1)
            ret = (ret * a) % MMM;
    return ret;
}
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 }, dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
int ddx[] = { -1, -2, 1, -2, 2, -1, 2, 1 }, ddy[] = { -2, -1, -2, 1, -1, 2, 1, 2 };

Vi v[250005], V[250005];
int a[250005], depth[250005], parent[250005];
int S[250005], E[250005], cnt[250005], cc;
void dfs(int N, int p = -1, int d = 0)
{
    depth[N] = d;
    S[N] = ++cc;
    parent[N] = p;
    V[a[N]].pb(cc);
    for (int next : v[N])
    {
        if (next == p)
            continue;
        dfs(next, N, d + 1);
    }
    E[N] = cc;
}
bool dfs2(int N, int p = -1)
{
    if (cnt[a[N]])
        return 0;
    cnt[a[N]]++;
    for (int next : v[N])
    {
        if (next == p)
            continue;
        if (!dfs2(next, N))
            return 0;
    }
    cnt[a[N]]--;
    return 1;
}
int main()
{
    int n;
    scanf(""%d"", &n);
    Vi vv;
    fup(i, 1, n, 1) scanf(""%d"", a + i), vv.pb(a[i]);
    COMPRESS(vv);
    fup(i, 1, n, 1) a[i] = lower_bound(ALL(vv), a[i]) - vv.begin();
    fup(i, 1, n - 1, 1)
    {
        int x, y;
        scanf(""%d%d"", &x, &y);
        v[x].pb(y);
        v[y].pb(x);
    }
    dfs(1);
    int dd = 0, r = 1, ok = 0;
    fup(i, 1, n, 1)
    {
        int t = upper_bound(ALL(V[a[i]]), E[i]) - lower_bound(ALL(V[a[i]]), S[i]);
        if (t != 1)
        {
            ok = 1;
            if (depth[i] > dd)
            {
                dd = depth[i], r = i;
            }
        }
    }
    if (ok)
    {
        fup(i, 1, n, 1)
        {
            if (parent[i] == r && upper_bound(ALL(V[a[r]]), E[i]) - lower_bound(ALL(V[a[r]]), S[i]))
            {
                r = i;
                break;
            }
        }
    }
    bool res = dfs2(r);
    Vi ans;
    if (res)
    {
        fup(i, 1, n, 1) cnt[i] = 0;
        queue<int> q;
        cnt[r] = 1;
        ans.pb(r);
        q.push(r);
        while (!q.empty())
        {
            int x = q.front();
            q.pop();
            for (int next : v[x])
            {
                if (!cnt[next] && V[a[next]].size() == 1)
                {
                    cnt[next] = 1;
                    ans.pb(next);
                    q.push(next);
                }
            }
        }
    }
    printf(""%d\n"", ans.size());
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <cctype>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <queue>
#define fs(i, x, y) for (int i = (x), _ = (y); i <= _; ++i)
#define fn(i, x, y) for (int i = (x), _ = (y); i >= _; --i)
#define tor(i, v, x) for (int i = head[x], v = to[i]; i; i = nxt[i], v = to[i])
#define ls(x) ch[x][0]
#define rs(x) ch[x][1]
#define mpi(x, y) make_pair(x, y)
#define pi pair<int, int>
#define DEBUG printf(""%s %d\n"", __FUNCTION__, __LINE__)
using namespace std;
typedef long long ll;
typedef double db;
template <typename T>
void read(T& x)
{
    x = 0;
    char ch = getchar();
    bool f = 0;
    while (ch < '0' || ch > '9')
    {
        if (ch == '-')
            f = 1;
        ch = getchar();
    }
    while (ch >= '0' && ch <= '9')
        x = (x << 1) + (x << 3) + ch - '0', ch = getchar();
    x = f ? -x : x;
}

const int N = 2e5 + 7, M = 4e5 + 7;
int n, m;
int a[N], b[N], tot, tag[N];
int cnt[N], num[N];
int head[N], to[M], nxt[M], tt;
int lfn[N], rfn[N], idx;

void adde(int u, int v)
{
    to[++tt] = v;
    nxt[tt] = head[u];
    head[u] = tt;
}

void dfs(int u, int fa)
{
    lfn[u] = ++idx;
    int t = cnt[a[u]];
    ++cnt[a[u]];
    tor(i, v, u) if (v ^ fa)
    {
        int tp = cnt[a[u]];
        dfs(v, u);
        if (tp < cnt[a[u]])
            ++tag[1], --tag[lfn[v]], ++tag[rfn[v] + 1];
    }
    rfn[u] = idx;
    if (cnt[a[u]] - t != num[a[u]])
        ++tag[lfn[u]], --tag[rfn[u] + 1];
}

signed main()
{
    read(n);
    fs(i, 1, n) read(a[i]), b[i] = a[i];
    sort(b + 1, b + n + 1);
    tot = unique(b + 1, b + n + 1) - b - 1;
    fs(i, 1, n) a[i] = lower_bound(b + 1, b + tot + 1, a[i]) - b, ++num[a[i]];
    fs(i, 1, n - 1)
    {
        int x, y;
        read(x);
        read(y);
        adde(x, y);
        adde(y, x);
    }
    dfs(1, 0);
    int ans = 0;
    fs(i, 1, n) tag[i] += tag[i - 1], ans += (!tag[i]);
    cout << ans << endl;
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define endl ""\n""

using namespace std;


void setup()
{
#ifdef LOCAL
    freopen(""input"", ""r"", stdin);
#else
    ios::sync_with_stdio(0);
    cin.tie(0);
#endif
}

vector<int> graph[200020];
int n;
bool isGood[200020];
bool badSubtree[200020];
bool goodSubtree[200020];
int numbers[200020];
map<int, int> freq;

int ins[200020], outs[200020];
map<int, vector<int>> numberIn;


void buildInOut(int v, int parent, int& time)
{
    ins[v] = time;
    numberIn[numbers[v]].push_back(time);
    time++;
    for (int u : graph[v])
    {
        if (u != parent)
        {
            buildInOut(u, v, time);
            time++;
        }
    }
    outs[v] = time;
}


void findSubtrees(int v, int parent)
{
    for (int u : graph[v])
    {
        if (u != parent)
        {
            findSubtrees(u, v);
        }
    }

    if (parent != -1)
    {
        if (freq[numbers[parent]] > 1)
        {
            auto lb = lower_bound(
                numberIn[numbers[parent]].begin(), numberIn[numbers[parent]].end(), ins[v]);
            if (lb != numberIn[numbers[parent]].end() && *lb <= outs[v])
            {
                goodSubtree[v] = true;
            }

            int k = numbers[parent];
            if (lower_bound(numberIn[k].begin(), numberIn[k].end(), ins[v])
                    != numberIn[k].begin() + 1
                || upper_bound(numberIn[k].begin(), numberIn[k].end(), outs[v])
                    != numberIn[k].end())
            {
                badSubtree[v] = true;
            }
        }
    }
    if (freq[numbers[v]] > 1)
    {
        int k = numbers[v];
        if (lower_bound(numberIn[k].begin(), numberIn[k].end(), ins[v]) != numberIn[k].begin()
            || upper_bound(numberIn[k].begin(), numberIn[k].end(), outs[v]) != numberIn[k].end())
        {
            badSubtree[v] = true;
        }
    }
}


bool removeRedundantGood(int v, int parent)
{
    bool res = false;
    for (int u : graph[v])
    {
        if (u != parent)
        {
            res |= removeRedundantGood(u, v);
        }
    }
    goodSubtree[v] &= !res;
    return res || goodSubtree[v];
}


void buildGood(int v, int parent, bool bad, bool good)
{
    good |= goodSubtree[v];
    bad |= badSubtree[v];
    isGood[v] = !bad && good && freq[numbers[v]] == 1;
    for (int u : graph[v])
    {
        if (u != parent)
        {
            buildGood(u, v, bad, good);
        }
    }
}


int main()
{
    setup();
    cin >> n;

    for (int i = 0; i <= n; i++)
    {
        graph[i] = vector<int>();
    }
    memset(badSubtree, 0, n + 4);
    memset(goodSubtree, 0, n + 4);

    goodSubtree[1] = true;

    for (int i = 1; i <= n; i++)
    {
        cin >> numbers[i];
        freq[numbers[i]]++;
        numberIn[numbers[i]] = vector<int>();
    }
    for (int i = 1; i < n; i++)
    {
        int u, v;
        cin >> u >> v;
        graph[u].push_back(v);
        graph[v].push_back(u);
    }
    int time = 0;
    buildInOut(1, -1, time);
    findSubtrees(1, -1);
    removeRedundantGood(1, -1);
    buildGood(1, -1, false, false);

    cout << accumulate(isGood + 1, isGood + n + 1, 0) << endl;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define mkp(x, y) make_pair(x, y)
#define pb(x) push_back(x)
#define sz(v) (int) v.size()
typedef long long LL;
typedef double db;
template <class T>
bool ckmax(T& x, T y)
{
    return x < y ? x = y, 1 : 0;
}
template <class T>
bool ckmin(T& x, T y)
{
    return x > y ? x = y, 1 : 0;
}
#define rep(i, x, y) for (int i = x, i##end = y; i <= i##end; ++i)
#define per(i, x, y) for (int i = x, i##end = y; i >= i##end; --i)
inline int read()
{
    int x = 0, f = 1;
    char ch = getchar();
    while (!isdigit(ch))
    {
        if (ch == '-')
            f = 0;
        ch = getchar();
    }
    while (isdigit(ch))
        x = x * 10 + ch - '0', ch = getchar();
    return f ? x : -x;
}
const int N = 200005;
const int T = N * 44;
int n, a[N], lsh[N], len, cnt[N], ans, st[N], ed[N], tmr, dif[N];
bool flg[N], fl;
vector<int> e[N];
int rt[N], tot, ls[T], rs[T], val[T];
inline void update(int& p, int pos, int d, int l = 1, int r = n)
{
    if (!p)
        p = ++tot;
    if (l == r)
        return val[p] += d, void();
    int mid = (l + r) >> 1;
    if (pos <= mid)
        update(ls[p], pos, d, l, mid);
    else
        update(rs[p], pos, d, mid + 1, r);
}
int merge(int x, int y, int l = 1, int r = n)
{
    if (!x || !y)
        return x | y;
    int mid = (l + r) >> 1, p = ++tot;
    if (l == r)
        return val[p] = val[x] + val[y], p;
    ls[p] = merge(ls[x], ls[y], l, mid);
    rs[p] = merge(rs[x], rs[y], mid + 1, r);
    return p;
}
inline int query(int p, int pos, int l = 1, int r = n)
{
    if (!p)
        return 0;
    if (l == r)
        return val[p];
    int mid = (l + r) >> 1;
    if (pos <= mid)
        return query(ls[p], pos, l, mid);
    else
        return query(rs[p], pos, mid + 1, r);
}
void dfs(int u, int ft)
{
    update(rt[u], a[u], 1);
    st[u] = ++tmr;
    for (int v : e[u])
    {
        if (v == ft)
            continue;
        dfs(v, u), rt[u] = merge(rt[u], rt[v]);
    }
    ed[u] = tmr;
    for (int v : e[u])
    {
        if (v == ft)
            continue;
        if (query(rt[v], a[u]))
            ++dif[1], --dif[st[v]], ++dif[ed[v] + 1];
    }
    if (query(rt[u], a[u]) < cnt[a[u]])
        ++dif[st[u]], --dif[ed[u] + 1];
}
int main()
{
    n = read();
    rep(i, 1, n) lsh[++len] = a[i] = read();
    sort(lsh + 1, lsh + len + 1), len = unique(lsh + 1, lsh + len + 1) - lsh - 1;
    rep(i, 1, n) a[i] = lower_bound(lsh + 1, lsh + len + 1, a[i]) - lsh, ++cnt[a[i]];
    rep(i, 2, n)
    {
        int x = read(), y = read();
        e[x].pb(y), e[y].pb(x);
    }
    dfs(1, 0);
    for (int i = 1; i <= n; ++i)
        dif[i] += dif[i - 1], ans += !dif[i];
    cout << ans << '\n';
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define For(i, j, k) for (int i = (int)(j); i <= (int)(k); i++)
#define Rep(i, j, k) for (int i = (int)(j); i >= (int)(k); i--)
#define pii pair<int, int>
#define fi first
#define se second
#define PB push_back
#define ll long long
#define ull unsigned long long
#define pll pair<ll, ll>
#define y1 orzkcz
using namespace std;

const int N = 200005;
int n, a[N], q[N], S[N], sz[N];
int fa[N], top[N], pos[N], dep[N];
vector<int> e[N], v[N];
int dfn[N], ed[N];

void dfs(int x)
{
    sz[x] = 1;
    for (auto i : e[x])
        if (i != fa[x])
        {
            fa[i] = x;
            dep[i] = dep[x] + 1;
            dfs(i);
            sz[x] += sz[i];
        }
}
void dfs2(int x, int tp)
{

    dfn[x] = ++*dfn;
    pos[*dfn] = x;
    top[x] = tp;

    int k = 0;
    for (auto i : e[x])
        if (i != fa[x] && sz[i] > sz[k])
            k = i;
    if (k)
        dfs2(k, tp);
    for (auto i : e[x])
        if (i != fa[x] && i != k)
            dfs2(i, i);
    ed[x] = *dfn;
}
int jmp(int x, int y)
{
    for (;;)
    {
        if (dep[top[x]] <= dep[y])
            return pos[dfn[x] - dep[x] + dep[y] + 1];
        if (fa[top[x]] == y)
            return top[x];
        x = fa[top[x]];
    }
}
bool isfa(int x, int y)
{
    return dfn[x] <= dfn[y] && ed[y] <= ed[x];
}
void UPD(int x, int y)
{
    For(i, 0, 1)
    {
        if (isfa(x, y))
        {
            int p = jmp(y, x);
            // cout<<x<<' '<<y<<' '<<p<<endl;
            ++S[1], --S[dfn[p]], ++S[ed[p] + 1];
        }
        else
            ++S[dfn[x]], --S[ed[x] + 1];
        swap(x, y);
    }
}
int main()
{
    scanf(""%d"", &n);
    For(i, 1, n) scanf(""%d"", &a[i]);
    For(i, 1, n) q[i] = a[i];
    sort(q + 1, q + n + 1);
    For(i, 1, n - 1)
    {
        int x, y;
        scanf(""%d%d"", &x, &y);
        e[x].PB(y);
        e[y].PB(x);
    }
    dfs(1);
    dfs2(1, 1);
    For(i, 1, n)
    {
        int p = lower_bound(q + 1, q + n + 1, a[i]) - q;
        For(j, 0, min(1, (int)v[p].size() - 1)) UPD(i, v[p][j]);
        v[p].PB(i);
    }
    For(i, 1, n) S[i] += S[i - 1];
    int ans = 0;
    For(i, 1, n) ans += (!S[i]);
    printf(""%d\n"", ans);
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#define LOCAL0
#include <bits/stdc++.h>
#define INF 0x3f3f3f3f
#define debug(msg) cout << (msg) << endl
#define FOR(i, a, b) for (int i = a; i <= (b); i++)
#define ROF(i, a, b) for (int i = a; i >= (b); i--)
#define pb(x) push_back(x)
#define ALL(x) x.begin(), x.end()
#define RALL(x) x.rbegin(), x.rend()
#define sz(x) (int) x.size()
#define JUDGE(x)                                                                                   \
    if (x)                                                                                         \
        cout << ""Yes\n"";                                                                           \
    else                                                                                           \
        cout << ""No\n"";
using namespace std;
typedef long long ll;
const ll mod = 1e9 + 7;
const int maxn = 500005;
struct edge
{
    int to;
    int next;
} e[maxn << 1];
int head[maxn], edgeNum;
void addEdge(int x, int y)
{
    e[++edgeNum].to = y;
    e[edgeNum].next = head[x];
    head[x] = edgeNum;
}
int f[maxn], a[maxn], ans;
map<int, int> num, now;
void dfs(int u, int fa)
{
    now[a[u]]++;
    int base = now[a[u]];
    for (int i = head[u]; i != -1; i = e[i].next)
    {
        int v = e[i].to;
        if (v == fa)
            continue;
        int temp = now[a[u]];
        dfs(v, u);
        if (now[a[u]] != temp)
        {
            f[1]++;
            f[v]--;
        }
    }
    if (now[a[u]] - base + 1 != num[a[u]])
    {
        f[u]++;
    }
}

void dfs2(int u, int fa, int x)
{
    ans += !x;
    for (int i = head[u]; i != -1; i = e[i].next)
    {
        int v = e[i].to;
        if (v == fa)
            continue;
        dfs2(v, u, x + f[v]);
    }
}

int main()
{
#ifdef LOCAL
    freopen(""in.txt"", ""r"", stdin);
    freopen(""out.txt"", ""w"", stdout);
#endif
    memset(head, -1, sizeof(head));
    int n;
    cin >> n;
    FOR(i, 1, n)
    {
        cin >> a[i];
        num[a[i]]++;
    }
    FOR(i, 1, n - 1)
    {
        int x, y;
        cin >> x >> y;
        addEdge(x, y);
        addEdge(y, x);
    }
    dfs(1, -1);
    dfs2(1, -1, f[1]);
    cout << ans << endl;
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>

#define For(i, l, r) for (i = int(l); i <= int(r); i++)
#define Fo(i, n) For(i, 1, n)
#define Rof(i, r, l) for (i = int(r); i >= int(l); i--)
#define Ro(i, n) Rof(i, n, 1)
#define clr(a) memset(a, 0, sizeof(a))
#define cpy(a, b) memcpy(a, b, sizeof(b))

#define all(a) a.begin(), a.end()
#define tree(u) id[u], id[u] + size[u] - 1

const int N = 2e5 + 10;

int n;
int a[N];
int pre[N << 1], to[N << 1], head[N], wcnt;
int fa[N], id[N], size[N], idcnt;
std::vector<int> posset[N];

int f[N], g[N];

inline int query(int v, int l, int r)
{
    return std::upper_bound(all(posset[v]), r) - std::lower_bound(all(posset[v]), l);
}

void discrete()
{
    static int num[N];
    int i;

    cpy(num, a);
    std::sort(num + 1, num + 1 + n);
    Fo(i, n) a[i] = std::lower_bound(num + 1, num + 1 + n, a[i]) - num;
}

#define Walk(u)                                                                                    \
    for (i = head[u]; i; i = pre[i])                                                               \
        if (fa[u] ^ to[i])
inline void addedge(int u, int v)
{
    wcnt++;
    pre[wcnt] = head[u];
    head[u] = wcnt;
    to[wcnt] = v;
}
inline void add2edge(int u, int v)
{
    addedge(u, v);
    addedge(v, u);
}
void dfs1(int u)
{
    int i;

    id[u] = ++idcnt;
    size[u] = 1;
    posset[a[u]].push_back(id[u]);
    Walk(u)
    {
        fa[to[i]] = u;
        dfs1(to[i]);
        size[u] += size[to[i]];
    }
}
void dfs2(int u)
{
    int i;

    f[u] = query(a[u], tree(u)) != 1;
    Walk(u)
    {
        dfs2(to[i]);
        f[u] += f[to[i]];
    }
}
void dfs3(int u)
{
    int i;

    if (fa[u])
        g[u] = (f[fa[u]] - (query(a[fa[u]], tree(fa[u])) != 1) - f[u]) or g[fa[u]]
            or (posset[a[u]].size() - query(a[u], tree(u)))
            or (posset[a[fa[u]]].size() - query(a[fa[u]], tree(u)) > 1);
    Walk(u) dfs3(to[i]);
}
#undef Walk

int main()
{
    int i;
    int u, v;
    int ans = 0;

    scanf(""%d"", &n);
    Fo(i, n) scanf(""%d"", &a[i]);
    Fo(i, n - 1)
    {
        scanf(""%d %d"", &u, &v);
        add2edge(u, v);
    }

    discrete();
    dfs1(1);
    dfs2(1);
    dfs3(1);
    Fo(i, n) ans += !f[i] and !g[i];
    printf(""%d\n"", ans);
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <cctype>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <vector>
#include <string>
#include <algorithm>

const int N = 1000005;

int n, t;
typedef long long ll;

inline void read(int& x)
{
    register char ch = 0;
    register bool w = 0;
    for (x = 0; !std::isdigit(ch); w |= ch == '-', ch = getchar())
        ;
    for (; std::isdigit(ch); x = x * 10 + ch - '0', ch = getchar())
        ;
    (w) && (x = -x);
    return;
}

std::vector<int> edge[N], col[N];
int val[N], q[N], u[N], ans[N], id[N], cha[N], dfn, outd[N], fa[N], cnt[N];

inline void add(int x, int y)
{
    ++cha[x], --cha[y + 1];
}

inline int find(int x, int y, int c)
{
    auto v = std::lower_bound(col[c].begin(), col[c].end(), x);
    if (v == col[c].end())
        return 0;
    if (x <= *v && *v <= y)
    {
        auto u = std::upper_bound(col[c].begin(), col[c].end(), y);
        // printf(""*u %d\n"", *u);
        --u;
        return u - v + 1;
    }
    return 0;
}

void dfs1(int now, int fa_)
{
    ++dfn;
    id[now] = dfn;
    fa[now] = fa_;
    for (auto v : edge[now])
    {
        if (v == fa_)
            continue;
        dfs1(v, now);
    }
    outd[now] = dfn;
} // [id_x, outd_x] -> subtree rooted x

void dfs2(int now)
{
    for (auto v : edge[now])
    {
        if (v == fa[now])
            continue;
        if (find(id[v], outd[v], val[now]))
        {
            // printf(""find v %d %d %d\n"", find(id[v], outd[v], val[now]), v, now);
            add(1, id[v] - 1);
            add(outd[v] + 1, n);
        }
        dfs2(v);
    }
    if (find(id[now], outd[now], val[now]) < cnt[val[now]])
    {
        add(id[now], outd[now]);
        // printf(""find now %d  %d\n"", find(id[now], outd[now], val[now]), now);
    }
}

int main()
{
    read(n);
    for (int i = 1; i <= n; ++i)
        read(q[i]), u[i] = q[i];
    std::sort(u + 1, u + n + 1);
    int loc = std::unique(u + 1, u + n + 1) - u - 1;
    for (int i = 1; i <= n; ++i)
    {
        val[i] = std::lower_bound(u + 1, u + loc + 1, q[i]) - u;
        ++cnt[val[i]];
    }
    for (int i = 1; i < n; ++i)
    {
        int x, y;
        read(x), read(y);
        edge[x].push_back(y), edge[y].push_back(x);
    }
    dfs1(1, 0);
    for (int i = 1; i <= n; ++i)
        col[val[i]].push_back(id[i]);
    for (int i = 1; i <= n; ++i)
        std::sort(col[i].begin(), col[i].end());
    int ans = 0;
    dfs2(1);
    for (int i = 1; i <= n; ++i)
        cha[i] += cha[i - 1];
    for (int i = 1; i <= n; ++i)
    {
        if (cha[i] == 0)
            ans += 1;
    }
    printf(""%d\n"", ans);
    return 0;
}",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
//#define int long long
#define mp make_pair
#define pb push_back
#define ld long double
#define pii pair<int, int>
#define sz(x) (int) x.size()
#define piii pair<pii, pii>
#define precise cout << fixed << setprecision(10)
#define st first
#define nd second
#define ins insert
#define vi vector<int>
#define BOOST                                                                                      \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(0);                                                                                    \
    cout.tie(0)
using namespace std;
const int MAX = 1 << 18;
const int STALA = 18;
int t[MAX * 2];
int ans = 0;
int sub[MAX];
int c[MAX];
int cnt[MAX];
int pre[MAX];
int A[MAX][STALA];
int gle[MAX];
set<int> pom;
map<int, int> compress;
vi P[MAX];
void update(int u, int v, int ce)
{
    for (u += MAX, v += MAX + 1; u < v; u >>= 1, v >>= 1)
    {
        if (u & 1)
            t[u++] += ce;
        if (v & 1)
            t[--v] += ce;
    }
}

int query(int u)
{
    int sum = 0;
    for (u += MAX; u > 0; u >>= 1)
    {
        sum += t[u];
    }
    return sum;
}
int czas = 0;

bool isuinv(int u, int v)
{
    return pre[v] <= pre[u] && pre[v] + sub[v] - 1 >= pre[u];
}


void dfs(int u, int fa)
{
    sub[u]++;
    A[u][0] = fa;
    pre[u] = ++czas;
    for (auto it : P[u])
    {
        if (it == fa)
            continue;
        gle[it] = gle[u] + 1;
        dfs(it, u);
        sub[u] += sub[it];
    }
}

void add(int u)
{
    update(pre[u], pre[u] + sub[u] - 1, 1);
}

int czy(int u)
{
    return query(pre[u]);
}

vector<int> color[MAX];
int ile(int id, int l, int r)
{
    auto itl = lower_bound(color[id].begin(), color[id].end(), l) - color[id].begin();
    auto itr = --upper_bound(color[id].begin(), color[id].end(), r) - color[id].begin();
    return itr - itl + 1;
}

int jump(int u, int ile)
{
    for (int i = STALA - 1; i >= 0; i--)
    {
        if (ile - (1 << i) >= 0)
            u = A[u][i], ile -= (1 << i);
    }
    return u;
}
int closest[MAX];
vi stos[MAX];
void dfs2(int u, int fa)
{
    if (!stos[c[u]].empty())
    {
        closest[u] = stos[c[u]].back();
    }
    stos[c[u]].pb(u);
    for (auto it : P[u])
    {
        if (it == fa)
            continue;
        dfs2(it, u);
    }
    stos[c[u]].pop_back();
}
int32_t main()
{
    BOOST;
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> c[i], pom.ins(c[i]);
    int licznik = 1;
    for (auto it : pom)
        compress[it] = licznik++;
    for (int i = 1; i <= n; i++)
        c[i] = compress[c[i]], cnt[c[i]]++;
    for (int i = 1; i <= n - 1; i++)
    {
        int a, b;
        cin >> a >> b;
        P[a].pb(b);
        P[b].pb(a);
    }
    dfs(1, 1);
    for (int i = 1; i < STALA; i++)
        for (int j = 1; j <= n; j++)
        {
            A[j][i] = A[A[j][i - 1]][i - 1];
        }
    for (int i = 1; i <= n; i++)
        color[c[i]].pb(pre[i]);
    for (int i = 1; i <= n; i++)
        sort(color[i].begin(), color[i].end());
    for (int i = 1; i <= n; i++)
    {
        int zmienna = ile(c[i], pre[i], pre[i] + sub[i] - 1);
        if (zmienna != cnt[c[i]])
        {
            add(i);
        }
    }

    dfs2(1, -1);

    for (int i = 1; i <= n; i++)
    {
        if (!closest[i])
            continue;
        int x = jump(i, gle[i] - gle[closest[i]] - 1);
        // cout<<""TERAZ ""<<x<<"" ""<<i<<""\n"";
        add(i);
        update(1, pre[x] - 1, 1);
        update(pre[x] + sub[x], n, 1);
    }

    for (int i = 1; i <= n; i++)
    {
        if (!czy(i))
            ans++;
    }
    cout << ans;
    return 0;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define jizz                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
typedef pair<int, int> pii;
#define F first
#define S second
const int MAXN = 2E5 + 10;
int arr[MAXN], mpid[MAXN], sz[MAXN], cost[MAXN], allcost = 0;
map<int, int> mp[MAXN];
vector<int> G[MAXN];
void dfs(int x, int f)
{
    sz[x] = 1;
    mpid[x] = x;
    int mxch = 0;
    for (auto i : G[x])
    {
        if (i != f)
        {
            dfs(i, x);
            sz[x] += sz[i];
            if (sz[i] > sz[mxch])
            {
                mxch = i;
                mpid[x] = mpid[i];
            }
        }
    }
    int p = mpid[x], q;
    for (auto i : G[x])
    {
        if (i != f && i != mxch)
        {
            q = mpid[i];
            for (auto j : mp[q])
            {
                if (mp[p][j.F] > 0)
                {
                    cost[mp[p][j.F]]++;
                    cost[j.S]++;
                }
                else
                {
                    mp[p][j.F] = j.S;
                }
            }
        }
    }
    mp[p][arr[x]] = x;
    if (mp[p][arr[f]] > 0)
    {
        allcost++;
        cost[x]--;
        cost[mp[p][arr[f]]]++;
    }
}
int get_ans(int x, int f)
{
    int ans = 0;
    allcost += cost[x];
    if (allcost == 0)
        ans++;
    for (auto i : G[x])
    {
        if (i != f)
        {
            ans += get_ans(i, x);
        }
    }
    allcost -= cost[x];
    return ans;
}
int main()
{
    jizz int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> arr[i];
    }
    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        G[u].push_back(v);
        G[v].push_back(u);
    }
    dfs(1, 0);
    /*for(int i=1;i<=n;i++){
        cout<<cost[i]<<"" "";
    }
    cout<<""\n"";
    cout<<allcost<<""\n"";*/
    cout << get_ans(1, 0) << ""\n"";
    return 0;
}
",1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <cstring>
#include <chrono>
#include <vector>
#include <map>
#include <random>
#include <set>
#include <algorithm>
#include <math.h>
#include <cstdio>
#include <stdio.h>
#include <queue>
#include <bitset>
#include <cstdlib>
#include <deque>
#include <cassert>
#include <stack>
using namespace std;

#define mp make_pair
#define f first
#define se second
#define pb push_back
#define ppb pop_back
#define emb emplace_back
#define ll long long
#define ull unsigned long long
#define cntbit(x) __builtin_popcount(x)
#define endl '\n'
#define uset unordered_set
#define umap unordered_map
#define pii pair<int, int>
#define ld long double
#define pll pair<long long, long long>

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

template <typename T>
inline T range(T l, T r)
{
    return uniform_int_distribution<T>(l, r)(rng);
}

inline void setin(string s)
{
    freopen(s.c_str(), ""r"", stdin);
}

inline void setout(string s)
{
    freopen(s.c_str(), ""w"", stdout);
}

template <typename T>
void Min(T& a, T b)
{
    a = min(a, b);
}

template <typename T>
void Max(T& a, T b)
{
    a = max(a, b);
}

const int inf = 0x3f3f3f3f;
const int mod = 1e9 + 7;
const int N = 85;
int n, k;
int g[N][N];
vector<int> cur;

vector<pii> paths[N][N];
int used[N];

inline void precalc()
{
    for (int i = 1; i <= n; ++i)
    {
        for (int j = 1; j <= n; ++j)
        {
            for (int k = 1; k <= n; ++k)
                if (k != i && k != j)
                    paths[i][j].pb({ g[i][k] + g[k][j], k });
            if (!paths[i][j].empty())
                sort(paths[i][j].begin(), paths[i][j].end());
        }
    }
}

int ans = inf;

void rec(int i)
{
    if (i == k / 2 + 1)
    {
        int sum = 0;
        for (int j = 1; j < cur.size(); ++j)
        {
            bool flag = false;
            for (pii t : paths[cur[j - 1]][cur[j]])
            {
                if (used[t.se] == 0)
                {
                    sum += t.f;
                    flag = true;
                    break;
                }
            }
            if (!flag)
                return;
        }
        Min(ans, sum);
    }
    else
    {
        for (int j = 1; j <= n; ++j)
        {
            cur.pb(j);
            ++used[j];

            rec(i + 1);

            --used[j];
            cur.ppb();
            if (i == 0 || i == k / 2)
                break;
        }
    }
}

main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    // setin(""input.txt"");
    cin >> n >> k;
    for (int i = 1; i <= n; ++i)
        for (int j = 1; j <= n; ++j)
            cin >> g[i][j];
    precalc();
    rec(0);
    cout << ans << endl;
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define all(v) v.begin(), v.end()
#define sz(v) (int) v.size()

#define MOO(i, a, b) for (int i = a; i < b; i++)
#define M00(i, a) for (int i = 0; i < a; i++)
#define MOOd(i, a, b) for (int i = (b)-1; i >= a; i--)
#define M00d(i, a) for (int i = (a)-1; i >= 0; i--)

#define FAST                                                                                       \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0);
#define finish(x) return cout << x << '\n', 0;
#define dbg(x) cerr << "">>> "" << #x << "" = "" << x << ""\n"";
#define _ << "" _ "" <<

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pi;
typedef pair<ld, ld> pd;
typedef complex<ld> cd;

const int MAX_N = 85;
const int MAX_K = 15;
int n, k;
int cost[MAX_N][MAX_N];
vector<pi> between[MAX_N][MAX_N];
int cur[MAX_K];
int ans = 1e9;
int used[MAX_N];

void updBes()
{
    int res = 0;
    for (int idx = 1; idx < k; idx += 2)
    {
        int lo = 1e9;
        for (pi& p : between[cur[idx - 1]][cur[idx + 1]])
        {
            if (!used[p.s])
            {
                lo = p.f;
                break;
            }
        }
        if (lo == 1e9)
            return;
        res += lo;
    }
    ans = min(ans, res);
}

void solve(int idx)
{
    if (2 * idx >= k - 1)
    {
        updBes();
    }
    else
    {
        M00(i, n)
        {
            cur[2 * idx] = i;
            used[i]++;
            solve(idx + 1);
            used[i]--;
        }
    }
}

int main()
{
    FAST cin >> n >> k;
    k++;
    M00(i, n) M00(j, n) cin >> cost[i][j];
    M00(i, n)
    {
        M00(j, n)
        {
            M00(u, n) if (u != i && u != j)
            {
                between[i][j].pb(mp(cost[i][u] + cost[u][j], u));
            }
            sort(all(between[i][j]));
        }
    }
    cur[0] = 0;
    cur[k - 1] = 0;
    used[0] += 2;
    solve(1);
    finish(ans);
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

mt19937 rnd(time(0));
const int N = 100;

int e[N][N];
int color[N];
int dp[N][15];

int main()
{
    int n, k;
    scanf(""%d%d"", &n, &k);
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            scanf(""%d"", &e[i][j]);
        }
    }
    int ans = 1 << 30;
    int T = 3000;
    for (int x = 1; x <= T; x++)
    {
        for (int i = 1; i <= n; i++)
        {
            color[i] = rnd() % 2;
            if (i == 1)
                dp[i][0] = 0;
            else
                dp[i][0] = 1 << 30;
        }
        for (int i = 1; i <= k; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                dp[j][i] = 1 << 30;
                for (int l = 1; l <= n; l++)
                {
                    if ((color[j] ^ color[l]))
                    {
                        dp[j][i] = min(dp[j][i], dp[l][i - 1] + e[l][j]);
                    }
                }
            }
        }
        ans = min(ans, dp[1][k]);
    }
    printf(""%d\n"", ans);
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <chrono>
//#include <intrin.h>

using namespace std;

typedef long long ll;

const int sz = 81;
const int inf = 2e9;


int n, k;
int cost[sz][sz];
int dp[11][sz];
int color[sz];

inline void solve()
{
    srand(chrono::high_resolution_clock::now().time_since_epoch().count());
    cin >> n >> k;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> cost[i][j];

    int otv = inf;

    for (int q = 0; q < 36784; q++)
    {
        for (int i = 0; i <= k; i++)
            for (int j = 0; j < n; j++)
            {
                dp[i][j] = inf;
            }
        for (int i = 0; i < n; i++)
            color[i] = rand() % 2;

        dp[k][0] = 0;

        for (int i = k; i > 0; i--)
            for (int j = 0; j < n; j++)
            {
                if (dp[i][j] == inf)
                    continue;

                for (int to = 0; to < n; to++)
                    if (color[j] != color[to])
                        dp[i - 1][to] = min(dp[i - 1][to], dp[i][j] + cost[j][to]);
            }

        otv = min(otv, dp[0][0]);
    }

    cout << otv;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#if defined(_DEBUG)
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    int q = 1;
    // cin >> q;
    for (; q > 0; q--)
    {
        solve();
        cout << '\n';
    }
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;


// SHORTCUTS

#define ll long long
#define endl '\n'
#define i1(a) cin >> a
#define i2(a, b) cin >> a >> b
#define i3(a, b, c) cin >> a >> b >> c
#define o1(a) cout << a << endl
#define o2(a, b) cout << a << "" "" << b << endl
#define o3(a, b, c) cout << a << "" "" << b << "" "" << c << endl
#define f(i, a, b) for (int i = a; i < b; i++)
#define fe(i, a, b) for (int i = a; i <= b; i++)
#define fi(i, a, b) for (i = a; i < b; i++)
#define eb emplace_back
#define pb push_back
#define pob pop_back
#define mp make_pair


// DEBUG CODE & FAST OUTPUT

#define printv(a)                                                                                  \
    for (int i = 0; i < a.size(); i++)                                                             \
        cout << a[i] << ' ';
#define printvl(a)                                                                                 \
    for (int i = 0; i < a.size(); i++)                                                             \
        cout << a[i] << endl;
#define printa(a, n)                                                                               \
    for (int i = 0; i < n; i++)                                                                    \
        cout << a[i] << ' ';
#define printal(a, n)                                                                              \
    for (int i = 0; i < n; i++)                                                                    \
        cout << a[i] << endl;


// DATA STRUCTURES

#define pq priority_queue
#define ms multiset
// #define y0 _y0_
// #define y1 _y1_
// #define div divi

typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<ld> vld;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<vi> vvi;
typedef vector<vll> vvll;
typedef vector<pii> vpii;
typedef vector<pll> vpll;

// IMP CONSTANT
const int mod = 1e9 + 7, inf = 1e9 + 7;
const ll infll = 1e18 + 7;
bool google_contest = false;


// MODULAR OPERATIONS
ll myadd(ll a, ll b)
{
    ll ans = a + b;
    ans -= ans >= mod ? mod : 0;
    return ans;
}
ll mysub(ll a, ll b)
{
    return (a - b + mod) % mod;
}
ll mymul(ll a, ll b)
{
    return (a * b) % mod;
}
ll mypow(ll a, ll b)
{
    ll ans = 1;
    while (b > 0)
        if (b & 1)
            ans = mymul(ans, a), b--;
        else
            a = mymul(a, a), b >>= 1;
    return ans;
}
ll nCr(ll n, ll r)
{
    if (r == 0)
        return 1;
    if (r == 1)
        return n;
    if (n == 0)
        return 0;
    return mymul(n, mymul(nCr(n - 1, r - 1), mypow(r, mod - 2)));
}

//    /\    |  |\  /|
//   /__\   |  | \/ |
//  /    \  |  |    |


int main()
{

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int t, tt;
    t = 1;
    // i1(t);
    if (google_contest)
        tt = 1;

    while (t--)
    {

        int n, k;
        i2(n, k);

        vector<vi> dist(n, vector<int>(n));

        f(i, 0, n)
        {
            f(j, 0, n)
            {
                i1(dist[i][j]);
            }
        }

        bool clr[n];
        f(i, 0, n / 2) clr[i] = true;
        f(i, n / 2, n) clr[i] = false;

        int ans = INT_MAX;
        f(l, 0, 10000)
        {

            random_shuffle(clr, clr + n);

            vector<vi> dp(k, vi(n, INT_MAX));

            f(i, 1, n) if (clr[i] ^ clr[0]) dp[0][i] = dist[0][i];

            f(i, 1, k)
            {
                f(j, 0, n)
                {
                    f(h, 0, n)
                    {
                        if (clr[j] ^ clr[h])
                            dp[i][h] = min(dp[i][h], dp[i - 1][j] + dist[j][h]);
                    }
                }
            }
            ans = min(ans, dp[k - 1][0]);
        }
        o1(ans);

        if (google_contest)
        {
            cout << ""Case "" << tt++ << "": "";
        }
    }

    return 0;
}


//    /\    |  |\  /|
//   /__\   |  | \/ |
//  /    \  |  |    |   OVER!!!!
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define ll long long
#define INF 2147483647

int inp()
{
    char c = getchar();
    while (c < '0' || c > '9')
        c = getchar();
    int sum = 0;
    while (c >= '0' && c <= '9')
    {
        sum = sum * 10 + c - '0';
        c = getchar();
    }
    return sum;
}

ll f[20][100], dis[100][100];
int c[100];

int main()
{
    srand((unsigned)time(NULL));
    int n = inp();
    int k = inp();
    int T = 5000;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            dis[i][j] = inp();
    ll ans = 1e18;
    while (T--)
    {
        for (int i = 1; i <= n; i++)
        {
            c[i] = rand() & 1;
            f[0][i] = 1e18;
        }
        f[0][1] = 0;
        for (int i = 0; i < k; i++)
        {
            for (int j = 1; j <= n; j++)
                f[i + 1][j] = 1e18;
            for (int j = 1; j <= n; j++)
                for (int u = 1; u <= n; u++)
                    if (c[j] != c[u])
                        f[i + 1][u] = std::min(f[i + 1][u], f[i][j] + dis[j][u]);
        }
        ans = std::min(ans, f[k][1]);
    }
    printf(""%lld\n"", ans);
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ctime>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
#define REP(i, n) for (int i = 0; i < n; ++i)
#define REP1(i, n) for (int i = 1; i <= n; ++i)
#define SZ(i) int(i.size())
#define eb emplace_back
#define ALL(i) i.begin(), i.end()
#define X first
#define Y second
#ifdef tmd
#define IOS()
#define debug(...) fprintf(stderr, ""#%d: %s = "", __LINE__, #__VA_ARGS__), _do(__VA_ARGS__);
template <typename T>
void _do(T&& x)
{
    cerr << x << endl;
}
template <typename T, typename... S>
void _do(T&& x, S&&... y)
{
    cerr << x << "", "";
    _do(y...);
}
template <typename It>
ostream& _printRng(ostream& os, It bg, It ed)
{
    os << ""{"";
    for (It it = bg; it != ed; it++)
    {
        os << (it == bg ? """" : "","") << *it;
    }
    os << ""}"";
    return os;
}
template <typename T>
ostream& operator<<(ostream& os, vector<T>& v)
{
    return _printRng(os, v.begin(), v.end());
}
template <typename T>
void pary(T bg, T ed)
{
    _printRng(cerr, bg, ed);
    cerr << endl;
}
#else
#define IOS()                                                                                      \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);
#define endl '\n'
#define debug(...)
#define pary(...)
#endif

const int MAXN = 81;
const ll MOD = 1000000007;

int n, k, dis[MAXN][MAXN];

bool part[MAXN];
int dp[2][MAXN];
int solve()
{

    memset(dp, 0x3f, sizeof(dp));
    dp[0][0] = 0;

    for (int i = 0; i < n; i++)
    {
        part[i] = rand() % 2;
    }
    part[0] = 1;

    for (int i = 1; i <= k; i++)
    {
        for (int j = 0; j < n; j++)
        {
            int res = MOD;
            if (part[j] ^ (i & 1))
            {
                for (int l = 0; l < n; l++)
                {
                    res = min(res, dp[(i & 1) ^ 1][l] + dis[l][j]);
                }
            }
            dp[i & 1][j] = res;
        }
    }

    return dp[k & 1][0];
}
/*********************GoodLuck***********************/
int main()
{
    IOS();
    srand(time(0));

    cin >> n >> k;
    REP(i, n)
    {
        REP(j, n)
        {
            cin >> dis[i][j];
        }
    }

    int ans = MOD;
    while (double(clock() / CLOCKS_PER_SEC < 2.9))
    {
        ans = min(ans, solve());
    }

    cout << ans << endl;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// nauynix
// 28/11/2020
#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < n; i++)
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define fi first
#define se second
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<PII> VII;
typedef vector<VI> VVI;
typedef long long int ll;
const int INF = 1e9 + 7;
const int mod = 1e9 + 7;
ll powmod(ll a, ll b)
{
    ll res = 1;
    a %= mod;
    assert(b >= 0);
    for (; b; b >>= 1)
    {
        if (b & 1)
            res = res * a % mod;
        a = a * a % mod;
    }
    return res;
}
int nxt()
{
    int x;
    scanf(""%d"", &x);
    return x;
}


#define error(args...)                                                                             \
    {                                                                                              \
        string _s = #args;                                                                         \
        replace(_s.begin(), _s.end(), ',', ' ');                                                   \
        stringstream _ss(_s);                                                                      \
        istream_iterator<string> _it(_ss);                                                         \
        err(_it, args);                                                                            \
    }

void err(istream_iterator<string> it)
{
}
template <typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args)
{
    cerr << *it << "" = "" << a << endl;
    err(++it, args...);
}

void min_self(int& a, int b)
{
    a = min(a, b);
}
int main()
{
    int a = 4, b = 8, c = 9;
    error(a, b, c);
    int n = nxt(), k = nxt();
    VVI matrix(n, VI(n));
    REP(i, n) generate(all(matrix[i]), nxt);
    int ans = INT_MAX;
    REP(_, 20 * 512)
    {
        VVI dp(k + 1, VI(n, INF));
        VI col(n);
        REP(i, n) col[i] = rand() % 2;
        col[0] = 0;
        dp[0][0] = 0;
        REP(i, k)
        {
            REP(u, n) REP(v, n)
            {
                if (col[v] != col[u])
                {
                    min_self(dp[i + 1][v], dp[i][u] + matrix[u][v]);
                }
            }
        }
        min_self(ans, dp[k][0]);
    }
    printf(""%d\n"", ans);
    return 0;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define dd(x) cout << #x << "" = "" << x << "" ""
#define de(x) cout << #x << "" = "" << x << ""\n""
#define sz(x) int(x.size())
#define All(x) x.begin(), x.end()
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> P;
typedef priority_queue<int> BQ;
const double eps = 1e-8;
inline int sign(double x)
{
    return (x > eps) - (x < -eps);
}
const int maxn = 85, mod = 1e9 + 7, INF = 0x3f3f3f3f;
int w[maxn][maxn], f[maxn][maxn], c[maxn];
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
int main()
{
    clock_t tim = clock();
    int n, k;
    cin >> n >> k;
    for (int i = 1; i <= n; ++i)
        for (int j = 1; j <= n; ++j)
            scanf(""%d"", &w[i][j]);
    int ans = INF;
    while (clock() - tim < 2 * CLOCKS_PER_SEC)
    {
        for (int i = 1; i <= n; ++i)
            c[i] = rng() % 2;
        memset(f, INF, sizeof(f));
        f[1][0] = 0;
        for (int l = 1; l <= k; ++l)
            for (int i = 1; i <= n; ++i)
                for (int j = 1; j <= n; ++j)
                    if (c[i] != c[j])
                        f[i][l] = min(f[i][l], f[j][l - 1] + w[j][i]);
        ans = min(ans, f[1][k]);
    }
    cout << ans;
    return 0;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#pragma GCC optimize(3, ""Ofast"", ""inline"")

#include <bits/stdc++.h>

#define start                                                                                      \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define ll long long
#define ull unsigned long long
#define int ll
#define ls st << 1
#define rs st << 1 | 1
#define pii pair<int, int>
#define rep(z, x, y) for (int z = x; z <= y; ++z)
#define repd(z, x, y) for (int z = x; z >= y; --z)
#define com bool operator<(const node& b) const
using namespace std;
mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());
const int maxn = (ll)1e6 + 5;
const int mod = 998244353;
const int inf = 0x3f3f3f3f;
int T = 1;
int f[20][100], dis[100][100];
int c[100];

void solve()
{
    int n, k;
    cin >> n >> k;
    rep(i, 1, n) rep(j, 1, n) cin >> dis[i][j];
    int ans = LLONG_MAX;
    rep(cas, 1, 5000)
    {
        rep(i, 1, n)
        {
            c[i] = rnd() & 1;
            f[0][i] = 1e18;
        }
        f[0][1] = 0;
        rep(i, 0, k - 1)
        {
            rep(j, 1, n) f[i + 1][j] = 1e18;
            rep(j, 1, n)
            {
                rep(u, 1, n)
                {
                    if (c[j] != c[u])
                    {
                        f[i + 1][u] = min(f[i + 1][u], f[i][j] + dis[j][u]);
                    }
                }
            }
        }
        ans = min(ans, f[k][1]);
    }
    cout << ans;
}

signed main()
{
    start;
    while (T--)
        solve();
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> P;

const int INF = 0x3F3F3F3F;
const int N = 1e6 + 5;

int n, k;
bool color[81];
int a[81][81];
ll dis[11][81];
int v[2][81];

ll getColor()
{
    v[0][0] = 0;
    v[1][0] = 0;
    for (int i = 1; i <= n; ++i)
    {
        color[i] = rand() % 2;
        int* cur = v[color[i]];
        cur[++cur[0]] = i;
    }
    memset(dis, INF, sizeof(dis));
    dis[0][1] = 0;
    for (int ki = 1; ki <= k; ++ki)
    {
        for (int i = 1; i <= n; ++i)
        {
            int* other = v[1 ^ color[i]];
            for (int ji = 1; ji <= other[0]; ++ji)
            {
                int j = other[ji];
                dis[ki][i] = min(dis[ki][i], dis[ki - 1][j] + a[i][j]);
            }
        }
    }
    return dis[k][1];
}

void solve()
{
    srand(time(0));
    scanf(""%d%d"", &n, &k);
    for (int i = 1; i <= n; ++i)
    {
        for (int j = 1; j <= n; ++j)
            scanf(""%lld"", &a[i][j]);
    }
    ll ans = 1e18;
    for (int i = 1; i <= 8000; ++i)
        ans = min(ans, getColor());
    printf(""%lld\n"", ans);
}

int main()
{
#ifdef LOCAL
    freopen(""lyz.txt"", ""r"", stdin);
#endif // LOCAL
    int T = 1;
    // scanf(""%d"", &T);
    while (T--)
        solve();
    return 0;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
using ll = long long;

const int INF = 2e9;

int n, k;
vector<vector<int>> cost;
vector<vector<array<array<int, 2>, 6>>> dp;
vector<int> even, used;

int solve()
{
    int cur_ans = INF;
    if (even.size() == k / 2 - 1)
    {
        cur_ans = 0;
        even.push_back(0);
        for (int i = 0, j; i < even.size(); i++)
        {
            int v = (i ? even[i - 1] : 0), u = even[i];
            for (j = 0; j < 6 && used[dp[v][u][j][1]]; j++)
                ;
            if (j == 6 || dp[v][u][j][1] == -1)
            {
                cur_ans = INF;
                break;
            }
            cur_ans += dp[v][u][j][0];
        }
        even.pop_back();
    }
    else
    {
        for (int i = 0; i < n; i++)
        {
            even.push_back(i);
            used[even.back()]++;
            cur_ans = min(cur_ans, solve());
            used[even.back()]--;
            even.pop_back();
        }
    }
    return cur_ans;
}

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    cin >> n >> k;
    cost.assign(n, vector<int>(n, 0));
    for (auto& el : cost)
    {
        for (auto& ell : el)
        {
            cin >> ell;
        }
    }
    dp.assign(n, vector<array<array<int, 2>, 6>>(n));
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            for (int ii = 0; ii < 6; ii++)
            {
                dp[i][j][ii] = { INF, -1 };
            }
            for (int k = 0, ii; k < n; k++)
            {
                if (k != i && k != j)
                {
                    array<int, 2> cur = { cost[i][k] + cost[k][j], k };
                    for (ii = 0; ii < 6 && cur > dp[i][j][ii]; ii++)
                        ;
                    if (ii != 6)
                    {
                        for (int jj = 5; jj > ii; jj--)
                        {
                            dp[i][j][jj] = dp[i][j][jj - 1];
                        }
                        dp[i][j][ii] = cur;
                    }
                }
            }
        }
    }
    even = {};
    used.assign(n, 0);
    used[0] = INF;
    cout << solve() << '\n';
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

const ll inf = 1e18;
const int N = 85;
int a[N][N], bit[N];
vector<int> g[N];
ll dist[N], ndist[N];

inline ll compute(int n, int k)
{
    for (int i = 1; i <= n; i++)
    {
        g[i].clear();
        for (int j = 1; j <= n; j++)
        {
            if (bit[i] != bit[j])
                g[i].push_back(j);
        }
    }
    memset(dist, 0x3f, sizeof(dist));
    dist[1] = 0;
    for (int rr = 1; rr <= k; rr++)
    {
        memset(ndist, 0x3f, sizeof(dist));
        for (int i = 1; i <= n; i++)
        {
            for (auto x : g[i])
            {
                ndist[x] = min(ndist[x], dist[i] + a[i][x]);
            }
        }
        for (int i = 1; i <= n; i++)
        {
            dist[i] = ndist[i];
        }
    }
    return dist[1];
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    cout << setprecision(32);

    int n, k;
    cin >> n >> k;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            cin >> a[i][j];
        }
    }
    ll ans = 1e18;
    bit[1] = 0;
    for (int run = 0; run < 10000; run++)
    {
        for (int i = 2; i <= n; i++)
        {
            bit[i] = rng() & 1;
        }
        ans = min(ans, compute(n, k));
    }
    cout << ans << '\n';

    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""

using namespace std;

#define _                                                                                          \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);
#define endl '\n'
#define debug(x) cerr << #x << "" == "" << (x) << '\n';
#define all(X) begin(X), end(X)
#define size(X) (int) std::size(X)

using ll = long long;
using ull = unsigned long long;

const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fLL;

const int FIXED_RANDOM = (int)chrono::steady_clock::now().time_since_epoch().count();
mt19937 rng(FIXED_RANDOM);

template <int N>
bitset<N> sample()
{
    static uniform_int_distribution<ull> unif(0, -1);
    bitset<N> res;
    for (int i = 0; i < (N + 63) / 64; ++i)
    {
        res <<= 64;
        res |= unif(rng);
    }
    return res;
}

bool chmin(auto& x, auto y)
{
    return y < x ? (x = y, true) : false;
}

int main()
{
    _ int n, k;
    cin >> n >> k;

    vector<vector<pair<int, ll>>> E(n);

    for (int u = 0; u < n; ++u)
    {
        for (int v = 0; v < n; ++v)
        {
            ll w;
            cin >> w;
            if (u == v)
                continue;
            E[u].emplace_back(v, w);
        }
    }

    constexpr int nmax = 80, maxiter = 5e3;
    bitset<nmax> color;

    ll ans = LINF;

    vector<ll> dp(n), dpnxt(n);

    for (int iter = 0; iter < maxiter; ++iter)
    {
        color = sample<nmax>();

        fill(all(dp), LINF), fill(all(dpnxt), LINF);

        dp[0] = 0;

        for (int j = 0; j < k; ++j)
        {
            for (int u = 0; u < n; ++u)
            {
                for (auto[v, w] : E[u])
                    if (color[u] ^ color[v])
                        chmin(dpnxt[v], dp[u] + w);
            }

            swap(dp, dpnxt), fill(all(dpnxt), LINF);
        }

        chmin(ans, dp[0]);
    }

    cout << ans << endl;

    exit(0);
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// CLOCKS_PER_SEC
using namespace std;
#include <bits/stdc++.h>
#define sqr(x) 1ll * (x) * (x)
//#define sort stable_sort
#define ll long long
#define mk make_pair
#define pb push_back
#define in insert
#define mtr(x, y, z) mk(mk(x, y), z)
#define fi first
#define se second
#define lch(x) ((x) << 1)
#define rch(x) (((x) << 1) | 1)
#define all(x) (x).begin(), (x).end()
#define titose CLOCKS_PER_SEC
#define fpi(x) freopen(x, ""r"", stdin);
#define fpo(x) freopen(x, ""w"", stdout);
#define fprio                                                                                      \
    fpi(""in.txt"");                                                                                 \
    fpo(""out.txt"");
#define fast ios_base::sync_with_stdio(false);
inline void read(int& x)
{
    int v = 0, f = 1;
    char c = getchar();
    while (!isdigit(c) && c != '-')
        c = getchar();
    if (c == '-')
        f = -1;
    else
        v = (c & 15);
    while (isdigit(c = getchar()))
        v = (v << 1) + (v << 3) + (c & 15);
    x = v * f;
}
inline void read(ll& x)
{
    ll v = 0ll, f = 1ll;
    char c = getchar();
    while (!isdigit(c) && c != '-')
        c = getchar();
    if (c == '-')
        f = -1;
    else
        v = (c & 15);
    while (isdigit(c = getchar()))
        v = (v << 1) + (v << 3) + (c & 15);
    x = v * f;
}
inline void readc(char& x)
{
    char c;
    while (((c = getchar()) == ' ') || c == '\n')
        ;
    x = c;
}
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vi vector<int>
#define vl vector<ll>
#define si set<int>
//#define sl set<ll>
#define mii map<int, int>
#define mll map<ll, ll>
#define msi map<string, int>
#define msl map<string, ll>
#define piii pair<int, pii>
#define piipi pair<pii, int>
#define plll pair<ll, pll>
#define pllpl pair<pll, ll>
#define pqi priority_queue<int>
#define pql priority_queue<ll>
#define npqi priority_queue<int, vector<int>, greater<int> >
#define npql priority_queue<ll, vector<ll>, greater<ll> >
#define forup(i, a, b) for ((i) = (a); (i) <= (b); (i)++)
#define fordo(i, a, b) for ((i) = (a); (i) >= (b); (i)--)
#define rep(i, x) forup((i), 1, (x))
#define repd(i, x) fordo((i), (x), 1)
#define rep0(i, x) forup((i), 0, (x)-1)
#define rep0d(i, x) fordo((i), ((int)(x)) - 1, 0)
#define itr iterator
#define fe(itcalc, c)                                                                              \
    for (__typeof((c).begin()) itcalc = (c).begin(); itcalc != (c).end(); itcalc++)
#define NO                                                                                         \
    {                                                                                              \
        cout << ""NO"";                                                                              \
        return 0;                                                                                  \
    }
#define YES                                                                                        \
    {                                                                                              \
        cout << ""YES"";                                                                             \
        return 0;                                                                                  \
    }
#define y0 y000000000000000000000000000
#define y1 y111111111111111111111111111
#define j0 j000000000000000000000000000
#define j1 j111111111111111111111111111
#define cl0(a) memset((a), (0), (sizeof((a))))
#define clz(a) memset((a), (0x16), (sizeof((a))))
#define clf(a) memset((a), (-(0x16)), (sizeof((a))))
#define inf 0x3bbbbbbb
#define lnf 0x2bbbbbbbbbbbbbbbll
//#define sqrt divi
#define p2(i) (1ll << (i))
#define readi read
#define readll read
/*************************************************/
int n, k, _, i, j, p, a[105][105], col[105], dp[15][105], ans = inf;
int main()
{
    srand(time(NULL));
    read(n);
    read(k);
    rep(i, n) rep(j, n)
    {
        read(a[i][j]);
    }
    rep(_, 5000)
    {
        rep(i, n) col[i] = (rand() & 1);
        clz(dp);
        dp[0][1] = 0;
        rep(i, k)
        {
            rep(j, n)
            {
                rep(p, n) if (col[j] != col[p])
                {
                    dp[i][p] = min(dp[i - 1][j] + a[j][p], dp[i][p]);
                }
            }
        }
        ans = min(ans, dp[k][1]);
    }
    cout << ans << endl;
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define IOS                                                                                        \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define endl ""\n""
#define int long long

const int N = 81;
const int K = 11;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int getRand(int l, int r)
{
    uniform_int_distribution<int> uid(l, r);
    return uid(rng);
}

int n, k;
int cost[N][N];
int col[N];
int cache[N][K];

int dp(int u, int k)
{
    if (k == 0)
    {
        if (u == 1)
            return 0;
        return 1e12;
    }
    int& ans = cache[u][k];
    if (ans != -1)
        return ans;
    ans = 1e12;
    for (int i = 1; i <= n; i++)
    {
        if (u != i && col[i] ^ col[u])
            ans = min(ans, cost[u][i] + dp(i, k - 1));
    }
    return ans;
}

int32_t main()
{
    IOS;
    cin >> n >> k;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            cin >> cost[i][j];
    int answer = 1e12;
    while ((double)clock() / CLOCKS_PER_SEC < 2.6)
    {
        memset(cache, -1, sizeof(cache));
        for (int i = 1; i <= n; i++)
            col[i] = getRand(0, 1);
        int cur = dp(1, k);
        answer = min(answer, cur);
    }
    cout << answer;
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <algorithm>
#include <functional>
#include <iomanip>
#include <queue>
#include <ciso646>
#include <random>
#include <map>
#include <set>
#include <complex>
#include <bitset>
#include <stack>
#include <unordered_map>
#include <utility>
#include <tuple>
#include <cassert>
using namespace std;
typedef long long ll;
typedef unsigned int ui;
const ll mod = 1000000007;
const ll INF = (ll)1000000007 * 1000000007;
typedef pair<int, int> P;
#define stop                                                                                       \
    char nyaa;                                                                                     \
    cin >> nyaa;
#define rep(i, n) for (int i = 0; i < n; i++)
#define per(i, n) for (int i = n - 1; i >= 0; i--)
#define Rep(i, sta, n) for (int i = sta; i < n; i++)
#define Per(i, sta, n) for (int i = n - 1; i >= sta; i--)
#define rep1(i, n) for (int i = 1; i <= n; i++)
#define per1(i, n) for (int i = n; i >= 1; i--)
#define Rep1(i, sta, n) for (int i = sta; i <= n; i++)
typedef long double ld;
const ld eps = 1e-8;
const ld pi = acos(-1.0);
typedef pair<ll, ll> LP;
int dx[4] = { 1, -1, 0, 0 };
int dy[4] = { 0, 0, 1, -1 };
template <class T>
bool chmax(T& a, const T& b)
{
    if (a < b)
    {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
bool chmin(T& a, const T& b)
{
    if (b < a)
    {
        a = b;
        return 1;
    }
    return 0;
}

int n, k;
int d[85][85];
int ans = mod;

void calc(vector<int>& V)
{
    vector<vector<int>> dp(n, vector<int>(k + 1, mod));
    dp[0][0] = 0;
    rep(t, k)
    {
        rep(i, n)
        {
            rep(j, n)
            {
                if (V[i] == V[j])
                    continue;
                chmin(dp[j][t + 1], dp[i][t] + d[i][j]);
            }
        }
    }
    chmin(ans, dp[0][k]);
}

void solve()
{
    cin >> n >> k;
    rep(i, n)
    {
        rep(j, n)
        {
            cin >> d[i][j];
        }
    }
    rep(i, 10000)
    {
        vector<int> V(n);
        rep(j, n / 2)
        {
            int s = rand() % n;
            V[s] = 1;
        }
        calc(V);
    }
    cout << ans << endl;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout << fixed << setprecision(50);
    solve();
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cmath>
#include <string>
#include <bitset>
#include <cstdio>
#include <vector>
#include <cctype>
#include <cstring>
#include <cstdlib>
#include <climits>
#include <iostream>
#include <algorithm>
using namespace std;

template <typename T>
inline int read(T& x)
{
    x = 0;
    char c = getchar(), f = 1;
    while (c > '9' || c < '0')
    {
        if (c == '-')
            f = -1;
        if (c == -1)
            return -1;
        c = getchar();
    }
    while (c <= '9' && c >= '0')
        x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();
    x *= f;
    return 1;
}
template <typename T, typename... Args>
inline int read(T& x, Args&... args)
{
    return read(x) + read(args...);
}
template <typename T>
inline int write(T x)
{
    if (x < 0)
        return putchar('-') & write((~x) + 1);
    if (x / 10)
        return write(x / 10) & putchar(x % 10 | 48);
    return putchar(x | 48);
}
template <typename T>
inline int write(T x, char c)
{
    return write(x) + putchar(c);
}
typedef long long ll;
typedef unsigned long long ull;
#define Min(a, b) ((a) < (b) ? (a) : (b))
#define Max(a, b) ((a) > (b) ? (a) : (b))
#define Abs(a) ((a) > 0 ? (a) : (-(a)))
typedef pair<int, int> pii;
typedef pair<int, long long> pil;
typedef pair<long long, int> pli;
typedef pair<long long, long long> pll;

int n, m, k;
inline int seedrand(string s)
{
    int seed = 0;
    for (char c : s)
        seed = seed * 233 + 114514 + 1919810 + c;
    return seed;
}
ll dis[85][85], dp[15][85];
int col[85];
int adpc;
signed main()
{
    read(n, k);
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            read(dis[i][j]);
    srand(seedrand(""jzm,xyx,dym,tql,orz""));
    ll ans = 1e18, rep = 3e8 / k / n / n;
    while (rep--)
    {
        for (int i = 1; i <= n; i++)
            col[i] = rand() & 1, dp[0][i] = 1e18;
        dp[0][1] = 0;
        for (int i = 1; i <= k; i++)
        {
            for (int j = 1; j <= n; j++)
                dp[i][j] = 1e18;
            for (int j = 1; j <= n; j++)
                for (int x = 1; x <= n; x++)
                    if (col[x] != col[j])
                        dp[i][x] = Min(dp[i][x], dp[i - 1][j] + dis[j][x]);
        }
        ans = Min(ans, dp[k][1]);
    }
    write(ans, '\n');
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n, k;
    cin >> n >> k;
    srand(time(NULL));
    int arr[n][n];
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cin >> arr[i][j];
        }
    }
    int mini = 2e9;
    for (int g = 0; g < 10000; g++)
    {
        int color[n];
        for (int i = 0; i < n; i++)
        {
            int x = rand();
            if (x % 2 == 0)
            {
                color[i] = 1;
            }
            else
            {
                color[i] = 0;
            }
        }
        int dp[n][k + 1];
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < k + 1; j++)
            {
                dp[i][j] = 2e9;
            }
        }
        dp[0][0] = 0;
        for (int i = 1; i <= k; i++)
        {
            for (int j = 0; j < n; j++)
            {
                for (int k = 0; k < n; k++)
                {
                    if (j == k || color[j] == color[k])
                    {
                        continue;
                    }
                    dp[j][i] = min(dp[j][i], dp[k][i - 1] + arr[k][j]);
                }
            }
        }

        mini = min(mini, dp[0][k]);
    }
    cout << mini;
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"//#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#define lson l, mid, rt << 1
#define rson mid + 1, r, rt << 1 | 1
#define inf 0x3f3f3f3f
#define INF 0x7fffffff
#define infll 0x3f3f3f3f3f3f3f3f
#define il inline
#define re register
#define pb push_back
#define db double
#define ll long long
#define ull unsigned long long
#define pii pair<int, int>
#define pll pair<ll, ll>
#define puu pair<ull, ull>
#define MP make_pair
#define lowbit(x) x&(-x)
#define fi first
#define se second
il ll read()
{
    char ch = getchar();
    ll p = 1, data = 0;
    while (ch < '0' || ch > '9')
    {
        if (ch == '-')
            p = -1;
        ch = getchar();
    }
    while (ch >= '0' && ch <= '9')
    {
        data = data * 10 + (ch ^ 48);
        ch = getchar();
    }
    return p * data;
}
il ll qpow(ll a, ll b)
{
    ll r = 1;
    while (b)
    {
        if (b & 1)
            r = a * r;
        a = a * a;
        b >>= 1;
    }
    return r;
}
il ll gcd(ll a, ll b)
{
    if (!a || !b)
        return (!a) ? b : a;
    while (b ^= a ^= b ^= a %= b)
        ;
    return a;
}
il ll lcm(ll a, ll b)
{
    return a * b / gcd(a, b);
}
void exgcd(ll a, ll b, ll& x, ll& y)
{
    if (!b)
        x = 1, y = 0;
    else
    {
        exgcd(b, a % b, y, x);
        y -= x * (a / b);
    }
}
const int mod = 1e9 + 7;
int mp[81][81], dp[81][11], col[81];
int main()
{
    int n = read(), m = read();
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            mp[i][j] = read();
    memset(dp, inf, sizeof(dp));
    srand(2333);
    int ans = inf;
    for (int tot = 1; tot <= 10000; tot++)
    {
        for (int i = 1; i <= n; i++)
            col[i] = rand() & 1;
        for (int i = 1; i <= n; i++)
            for (int k = 1; k <= m; k++)
                dp[i][k] = inf;
        dp[1][0] = 0;
        for (int p = 1; p <= m; p++)
            for (int i = 1; i <= n; i++)
                for (int j = 1; j <= n; j++)
                    if (col[i] != col[j])
                        dp[j][p] = min(dp[j][p], dp[i][p - 1] + mp[i][j]);
        ans = min(ans, dp[1][m]);
    }
    printf(""%d\n"", ans);
    return 0;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <stdio.h>
#include <algorithm>
#include <time.h>

int read(int x = 0, int f = 0, char ch = getchar())
{
    while ('0' > ch or ch > '9')
        f = ch == '-', ch = getchar();
    while ('0' <= ch and ch <= '9')
        x = x * 10 + (ch ^ 48), ch = getchar();
    return f ? -x : x;
}

const int N = 80 + 5;
const int K = 10 + 5;
const int INF = 0x3f3f3f3f;

int n, k, ans = INF;
int col[N];
int dis[N][N], f[K][N];

int main()
{
    srand(unsigned(time(NULL)));
    n = read(), k = read();
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            dis[i][j] = read();
    for (int T = 5000; T--;)
    {
        for (int i = 1; i <= n; i++)
            col[i] = rand() & 1, f[0][i] = INF;
        f[0][1] = 0;
        for (int i = 0; i < k; i++)
        {
            for (int j = 1; j <= n; j++)
                f[i + 1][j] = INF;
            for (int u = 1; u <= n; u++)
                for (int v = 1; v <= n; v++)
                    if (col[u] ^ col[v])
                        f[i + 1][v] = std::min(f[i + 1][v], f[i][u] + dis[u][v]);
        }
        ans = std::min(ans, f[k][1]);
    }
    return printf(""%d"", ans), 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
#define ri register
#define mk make_pair
#define E (N + 1)
using namespace std;
const int N = 210;
inline int read()
{
    int s = 0, w = 1;
    ri char ch = getchar();
    while (ch < '0' || ch > '9')
    {
        if (ch == '-')
            w = -1;
        ch = getchar();
    }
    while (ch >= '0' && ch <= '9')
        s = (s << 3) + (s << 1) + (ch ^ 48), ch = getchar();
    return s * w;
}
int n, K, dis[N][N], col[N], F[N][N], Ans = 1e18;
signed main()
{
    n = read(), K = read();
    for (ri int i = 1; i <= n; i++)
        for (ri int j = 1; j <= n; j++)
            dis[i][j] = read();

    srand(time(NULL));
    for (ri int R = 1; R <= 5000; R++)
    {
        int X = rand() % 233;
        int gg = 0;
        for (ri int i = 1; i <= X; i++)
            gg++;
        // random it
        for (ri int i = 1; i <= n; i++)
        {
            col[i] = rand() & 1;
            for (ri int j = 0; j <= K; j++)
                F[i][j] = 1e18;
        }
        F[1][0] = 0;
        for (ri int i = 1; i <= K; i++)
            for (ri int j = 1; j <= n; j++)
                for (ri int k = 1; k <= n; k++)
                {
                    if (j == k || col[j] == col[k])
                        continue;
                    F[j][i] = min(F[j][i], F[k][i - 1] + dis[k][j]);
                }
        Ans = min(Ans, F[1][K]);
    }
    printf(""%lld\n"", Ans);
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <algorithm>
#include <ctime>
using namespace std;

typedef long long ll;
const int MAXN = 105;
const ll INF = 1e18;
ll f[MAXN][MAXN], a[MAXN][MAXN];
int main()
{
    int n, k;
    scanf(""%d%d"", &n, &k);
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
            scanf(""%lld"", &a[i][j]);
    }
    srand((unsigned)time(NULL));
    int c[MAXN];
    int T = 5000;
    ll ans = INF;
    while (T--)
    {
        for (int i = 1; i <= n; i++)
            c[i] = rand() & 1, f[0][i] = INF;
        f[0][1] = 0;
        for (int i = 0; i < k; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                f[i + 1][j] = INF;
            }
            for (int j = 1; j <= n; j++)
                for (int p = 1; p <= n; p++)
                {
                    if (c[j] != c[p])
                        f[i + 1][p] = min(f[i + 1][p], f[i][j] + a[j][p]);
                }
        }
        ans = min(ans, f[k][1]);
    }
    printf(""%lld"", ans);

    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
#include <math.h>
#include <queue>
#include <iomanip>
#include <numeric>
using namespace std;
int used[81];
vector<pair<int, int>> minp[81][81];
int a[81][81];
int n, k;
int kol;
int ans = 1e9 + 7;
vector<int> v{ 1 };
vector<int> kk{ 1, 1, 1, 2, 3 };
void F()
{
    if (v.size() == k / 2)
    {
        int rez = 0;
        if (n <= 5)
        {
            bool f = false;
            for (int i = 1; i < n + 1; i++)
            {
                if (!used[i])
                    f = true;
            }
            if (!f)
                return;
        }
        for (int i = 0; i < v.size(); i++)
        {
            for (int j = 0; j < minp[v[i]][v[(i + 1) % (k / 2)]].size(); j++)
            {
                if (!used[minp[v[i]][v[(i + 1) % (k / 2)]][j].second])
                {
                    rez += minp[v[i]][v[(i + 1) % (k / 2)]][j].first;
                    break;
                }
            }
        }
        ans = min(rez, ans);
        return;
    }
    for (int i = 1; i <= n; i++)
    {
        v.push_back(i);
        used[i]++;
        F();
        v.pop_back();
        used[i]--;
    }
}
int main()
{
    cin >> n >> k;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            cin >> a[i][j];
        }
    }
    // kol = (k - 1) / 2;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            for (int k = 1; k <= n; k++)
            {
                minp[i][j].push_back({ a[i][k] + a[k][j], k });
            }
            sort(minp[i][j].begin(), minp[i][j].end());
        }
    }

    used[1] = 1;
    F();
    cout << ans;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define rint register int
#define deb(x) cerr << #x << "" = "" << (x) << '\n';
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
const int maxn = 85;
int n, k, d[maxn][maxn];
int col[maxn];
ll dp[maxn][maxn];

signed main()
{
    srand(time(0));
    scanf(""%d%d"", &n, &k);
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            scanf(""%d"", &d[i][j]);
    int ti = 1 << k + 2;
    ll ans = 4e18;
    while (ti--)
    {
        for (int i = 1; i <= n; i++)
            col[i] = rand() % 2;
        memset(dp, 127, sizeof(dp));
        dp[1][0] = 0;
        for (rint i = 1; i <= k; ++i)
        {
            for (rint j = 1; j <= n; ++j)
            {
                for (rint x = 1; x <= n; ++x)
                {
                    if (col[j] == col[x])
                        continue;
                    dp[x][i] = min(dp[x][i], dp[j][i - 1] + d[j][x]);
                }
            }
        }
        ans = min(ans, dp[1][k]);
    }
    printf(""%lld\n"", ans);
}
/*

*/
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// kur za vlashka

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MAXN = 85;
const int MAXK = 15;
const int inf = 1e9 + 5;

int n, k;
int a[MAXN][MAXN];

int answer = inf;
vector<pair<int, int>> transition[MAXN][MAXN];

int usedNodes[MAXN];
vector<int> seq;

void init()
{
    for (int x = 1; x <= n; x++)
    {
        for (int y = 1; y <= n; y++)
        {
            for (int z = 1; z <= n; z++)
            {
                if (z == x || z == y)
                    continue;
                transition[x][y].push_back({ a[x][z] + a[z][y], z });
            }

            sort(transition[x][y].begin(), transition[x][y].end());
        }
    }
}

int getTransition(int x, int y)
{
    for (pair<int, int> item : transition[x][y])
    {
        if (usedNodes[item.second] == 0)
            return item.first;
    }

    return inf / 10;
}

void getPart0(int taken)
{
    if (taken == k / 2)
    {
        int curr = 0;
        for (int i = 1; i < seq.size(); i++)
            curr += getTransition(seq[i - 1], seq[i]);
        curr += getTransition(seq.back(), 1);

        answer = min(answer, curr);
        return;
    }

    for (int x = 1; x <= n; x++)
    {
        usedNodes[x]++;
        seq.push_back(x);

        getPart0(taken + 1);

        usedNodes[x]--;
        seq.pop_back();
    }
}

int main()
{
    cin >> n >> k;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            cin >> a[i][j];

    init();

    seq = { 1 };
    usedNodes[1]++;
    getPart0(1);

    cout << answer << '\n';
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define forn(i, n) for (int i = 1; i <= int(n); ++i)
#define sz(v) int((v).size())
#define int ll
#define x first
#define y second

int n, k;
int d[111][111], c[111];
int f[15][111];
void solve()
{
    scanf(""%lld%lld"", &n, &k);
    forn(i, n) forn(j, n) scanf(""%lld"", &d[i][j]);
    int T = 5555;
    srand(time(0));
    int ans = 1e9;
    while (T--)
    {
        forn(i, n) c[i] = rand() & 1;
        memset(f, 0x3F, sizeof f);
        f[0][1] = 0;
        for (int t = 0; t < k; ++t)
        {
            forn(i, n)
            {
                forn(j, n)
                {
                    if (c[i] ^ c[j])
                    {
                        f[t + 1][j] = min(f[t + 1][j], f[t][i] + d[i][j]);
                    }
                }
            }
        }
        ans = min(ans, f[k][1]);
    }
    printf(""%lld\n"", ans);
}
signed main()
{
    int T = 1; // scanf(""%lld"", &T);
    while (T--)
        solve();
    return 0;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define it register int
#define ct const int
#define il inline
using namespace std;
typedef long long ll;
#define rll register ll
#define cll const ll
typedef double db;
#define rdb register db
#define cdb const db
typedef long double ldb;
typedef unsigned long long ull;
#define pb push_back
#define mkp make_pair
#define pl pair<ll, int>
#define pi pair<int, int>
#define fir first
#define sec second
namespace io
{
il char nc()
{
    static char buf[100000], *p1 = buf, *p2 = buf;
    return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;
}
template <class I>
il void fr(I& num)
{
    num = 0;
    register char c = nc();
    it p = 1;
    while (c < '0' || c > '9')
        c == '-' ? p = -1, c = nc() : c = nc();
    while (c >= '0' && c <= '9')
        num = num * 10 + c - '0', c = nc();
    num *= p;
}
template <class I>
il I Max(I p, I q)
{
    return p > q ? p : q;
}
template <class I>
il I Min(I p, I q)
{
    return p < q ? p : q;
}
template <class I>
il I A(I x)
{
    return x < 0 ? -x : x;
}
template <class I>
il void sp(I& p, I& q)
{
    I x = p;
    p = q, q = x;
}
template <class I>
il void ckMax(I& p, I q)
{
    p = (p > q ? p : q);
}
template <class I>
il void ckMin(I& p, I q)
{
    p = (p < q ? p : q);
}
};
using io::fr;
using io::nc;
using io::Max;
using io::Min;
using io::A;
using io::sp;
using io::ckMax;
using io::ckMin;
const int N = 105, inf = 1e8;
pair<int, int> f[N][N][N];
int a[N][N], tag[N], ans, n, m, o[N], mm;
il int cal(ct x, ct y)
{
    for (it i = 1; i <= n; i++)
        if (!tag[f[x][y][i].sec])
            return f[x][y][i].fir;
    return inf;
}
il void dfs(ct x)
{
    if (x == m)
    {
        it s = 0, i;
        for (i = 0; i < mm; ++i)
            s += cal(o[i], o[(i + 1) % mm]);
        ans = (ans < s ? ans : s);
        return;
    }
    for (it i = 1; i <= n; ++i)
        ++tag[i], o[x >> 1] = i, dfs(x + 2), --tag[i];
}
int main()
{
    scanf(""%d%d"", &n, &m), mm = m >> 1, ans = 2e9;
    it i, j, k;
    for (i = 1; i <= n; ++i)
        for (j = 1; j <= n; ++j)
            scanf(""%d"", &a[i][j]);
    for (i = 1; i <= n; ++i)
        for (j = 1; j <= n; ++j)
        {
            for (k = 1; k <= n; ++k)
                f[i][j][k] = mkp(a[i][k] + a[k][j], k);
            std::sort(f[i][j] + 1, f[i][j] + n + 1);
        }
    o[0] = tag[1] = 1, dfs(2), printf(""%d"", ans);
    return 0;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define mset(a, b) memset(a, b, sizeof(a))
#define mcpy(a, b) memcpy(a, b, sizeof(a))
using namespace std;
typedef long long LL;
const int N = 85;

template <typename T>
inline void read(T& AKNOI)
{
    T x = 0, flag = 1;
    char ch = getchar();
    while (!isdigit(ch))
    {
        if (ch == '-')
            flag = -1;
        ch = getchar();
    }
    while (isdigit(ch))
    {
        x = x * 10 + ch - '0';
        ch = getchar();
    }
    AKNOI = flag * x;
}

template <typename T>
inline void cmin(T& x, T y)
{
    if (x > y)
        x = y;
}

int n, k;
int c[N], g[N][N], dp[11][N];

void init()
{
    read(n);
    read(k);
    for (int i = 1; i <= n; ++i)
    {
        for (int j = 1; j <= n; ++j)
        {
            read(g[i][j]);
        }
    }
}

void solve()
{
    srand((unsigned)time(NULL));
    int ans = INT_MAX, T = 3456;
    while (T--)
    {
        for (int i = 1; i <= n; ++i)
        {
            c[i] = (rand() & 1);
        }
        mset(dp, 0x3f);
        dp[0][1] = 0;
        for (int t = 1; t <= k; ++t)
        {
            for (int i = 1; i <= n; ++i)
            {
                for (int j = 1; j <= n; ++j)
                {
                    if (c[i] == c[j])
                        continue;
                    cmin(dp[t][i], dp[t - 1][j] + g[j][i]);
                }
            }
        }
        cmin(ans, dp[k][1]);
    }
    printf(""%d\n"", ans);
}

int main()
{
    init();
    solve();
    return 0;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <map>
#include <vector>

using namespace std;

typedef long long int64;

const int MAXN = 81;
const int MAXK = 15;

int64 dp[MAXN][MAXK];
int cost[MAXN][MAXN];
bool co[MAXN];

int n, k;

int main(void)
{
    cin >> n >> k;
    srand(clock() ^ time(0) + rand());
    for (int i = 1; i <= n; ++i)
        for (int j = 1; j <= n; ++j)
            cin >> cost[i][j];

    int T = 5000;
    int64 ans = 2e18;
    while (T--)
    {
        for (int i = 1; i <= n; ++i)
            co[i] = rand() & 1;
        memset(dp, 63, sizeof dp);
        dp[1][0] = 0;
        for (int p = 1; p <= k; ++p)
            for (int i = 1; i <= n; ++i)
                for (int j = 1; j <= n; ++j)
                    if (co[i] ^ co[j])
                        dp[j][p] = min(dp[i][p - 1] + cost[i][j], dp[j][p]);
        ans = min(ans, dp[1][k]);
    }

    cout << ans << '\n';
    return 0;
}",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pii> pipii;
typedef pair<pii, int> piipi;
typedef pair<pii, pii> piipii;
typedef pair<ll, int> pli;

#define mp make_pair
#define fi first
#define se second
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)(a).size()
#define eb emplace_back

int n;
int a[85][85];
int vis[85];
int path[100], x = 0;
int ans = 2e9;
vector<pii> dist[85][85];

void dfs(int k)
{
    if (k == 0)
    {
        path[x++] = 1;
        int res = 0;
        for (int i = 1; i < x; i++)
        {
            int u = path[i - 1], v = path[i];
            bool ok = 0;
            for (int j = 0; j < sz(dist[u][v]); j++)
            {
                if (vis[dist[u][v][j].se] == 0)
                {
                    res += dist[u][v][j].fi;
                    ok = 1;
                    break;
                }
            }
            if (!ok)
            {
                x--;
                return;
            }
        }
        ans = min(ans, res);
        x--;
    }
    else
    {
        for (int i = 1; i <= n; i++)
        {
            path[x++] = i;
            vis[i]++;
            dfs(k - 1);
            vis[i]--;
            x--;
        }
    }
}
int main()
{
    int k;
    scanf(""%d%d"", &n, &k);
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
            scanf(""%d"", &a[i][j]);
    }
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            for (int k = 1; k <= n; k++)
            {
                if (i != k && j != k)
                    dist[i][j].eb(mp(a[i][k] + a[k][j], k));
            }
            sort(all(dist[i][j]));
        }
    }
    path[x++] = 1;
    vis[1]++;
    dfs(k / 2 - 1);
    printf(""%d\n"", ans);
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <algorithm>
#include <string>
#include <sstream>
#include <vector>
#include <set>
#include <cmath>
#include <unordered_map>
#include <queue>
#include <map>
#include <functional>
#include <stack>
#include <cmath>
#include <cstring>
#include <random>
#include <chrono>
#include <memory>
#include <cassert>
#include <numeric>
#define int long long
#define pii pair<int, int>
#define pic pair<int, char>
#define x first
#define y second
#define ll long long
#define endl ""\n""
#define all(a) (a).begin(), (a).end()
#pragma GCC optimize(""O3"")
#define PI 3.14159265

using namespace std;

const int N = 1e3 + 10;
const int inf = (int)1e18 + 10ll;
const int mod = 1e9 + 7;
const int eps = 1e-9;
const char spc = 29;

mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());

using namespace std;

int n, k;
int a[N][N];
char c[N];
int dp[N];
int buf[N];

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> n >> k;

    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            cin >> a[i][j];

    int ans = inf;

    for (int i = 0; i < (int)1e4; ++i)
    {
        for (int i = 0; i < n; ++i)
            c[i] = rnd() % 2;

        for (int i = 0; i < n; ++i)
            if (c[i] == c[0])
                dp[i] = inf;
            else
                dp[i] = a[0][i];

        for (int z = 1; z < k; ++z)
        {
            fill(buf, buf + n, inf);

            for (int i = 0; i < n; ++i)
            {
                for (int j = 0; j < n; ++j)
                    if (c[i] != c[j])
                        buf[i] = min(buf[i], dp[j] + a[j][i]);
            }

            copy(buf, buf + n, dp);
        }

        ans = min(ans, dp[0]);
    }

    cout << ans << endl;
}
",1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <stdio.h>
#include <stdlib.h>
typedef long long int ll;
int main()
{
    int t, i;
    scanf(""%d"", &t);
    for (i = 0; i < t; i++)
    {
        ll q, x, j, k;
        int d;
        scanf(""%lld%d"", &q, &d);
        ll mx = 10 * d;
        int mat[105] = { 0 };
        for (j = 0; j <= 10; j++)
        {
            mat[j * d] = 1;
        }
        for (j = 0; j <= 10; j++)
        {
            mat[j * 10 + d] = 1;
        }
        for (j = d + 1; j <= mx; j++)
        {
            mat[j] = mat[j] | mat[j - d];
        }
        for (j = 0; j < q; j++)
        {
            scanf(""%lld"", &x);
            if (x >= 10 * d)
            {
                printf(""YES\n"");
            }
            else if (mat[x] == 1)
            {
                printf(""YES\n"");
            }
            else
            {
                printf(""NO\n"");
            }
        }
    }
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
typedef long long int ll;

using namespace std;

int main()
{

    int t;
    cin >> t;
    for (int tt = 0; tt < t; tt++)
    {
        int q, d;
        cin >> q >> d;

        for (int i = 0; i < q; i++)
        {
            int flag = 0;
            int x;
            cin >> x;
            if (x >= d * 10)
                flag = 1;
            if (flag == 0)
            {
                while (x >= d)
                {
                    if (x % d == 0)
                    {
                        flag = 1;
                        break;
                    }
                    x -= 10;
                }
            }
            if (flag)
            {
                cout << ""YES\n"";
            }
            else
            {
                cout << ""NO\n"";
            }
        }
    }
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0), cout.tie(0);
    int tc, q, d;
    cin >> tc;
    while (tc--)
    {
        cin >> q >> d;
        for (int i = 0; i < q; i++)
        {
            int x;
            cin >> x;
            bool flag = 0;
            if (x >= d * 10)
            {
                cout << ""YES\n"";
                continue;
            }
            while (x >= d)
            {
                if (x % d == 0)
                {
                    flag = 1;
                    break;
                }
                x -= 10;
            }
            cout << (flag ? ""YES"" : ""NO"") << ""\n"";
        }
    }
    return 0;
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

int main()

{

    int t, n, a, b, c, i, j, d;

    cin >> t;

    while (t--)
    {

        cin >> n >> d;

        while (n--)
        {
            cin >> a;
            c = 0;

            if (a >= d * 10)
                c = 1;

            if (c == 0)
            {
                while (a >= d)
                {

                    if (a % d == 0)
                    {
                        c = 1;
                        break;
                    }
                    a -= 10;
                }
            }

            if (c)
                cout << ""YES\n"";

            else
                cout << ""NO\n"";
        }
    }
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

const int maxn = 207;
int t, d, q;
bool dp[maxn];
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    cin >> t;
    while (t--)
    {
        memset(dp, 0, sizeof(dp));
        dp[0] = 1;
        cin >> q >> d;
        if (!d)
            d += 10;
        int mx = d * 10;
        for (int i = 0; 10 * i + d <= mx; ++i)
        {
            for (int j = 0; 10 * i + d + j <= mx; ++j)
            {
                dp[10 * i + d + j] |= dp[j];
            }
        }
        while (q--)
        {
            int u;
            cin >> u;
            if (u >= mx || dp[u])
                cout << ""YES\n"";
            else
                cout << ""NO\n"";
        }
    }
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long int
#define endl '\n'
#define pb push_back
#define vect vector<int>
#define mod 998244353

using namespace std;


#undef int
int main()
{
#define int long long int
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int t;
    cin >> t;

    while (t--)
    {
        int q, d;
        cin >> q >> d;
        vect v(q);
        for (auto& i : v)
            cin >> i;

        if (d == 1)
        {
            for (auto i : v)
                cout << ""YES"" << endl;
            continue;
        }

        for (int i = 0; i < q; i++)
        {
            if (10 * d <= v[i])
            {
                cout << ""YES"" << endl;
                continue;
            }

            int flag = 0;
            for (int j = d; j <= v[i]; j += d)
            {

                if (j == v[i])
                {
                    flag = 1;
                    break;
                }

                int p = v[i] - j;
                while (p)
                {
                    int q = p % 10;
                    if (q == d)
                    {
                        flag = 1;
                        break;
                    }
                    p = p / 10;
                }
                if (flag)
                    break;
            }

            int p = v[i];
            while (p)
            {
                int q = p % 10;
                if (q == d)
                {
                    flag = 1;
                    break;
                }
                p = p / 10;
            }

            if (!flag)
                cout << ""NO"" << endl;
            else
                cout << ""YES"" << endl;
        }
    }

    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        long long int n;
        cin >> n;
        long long int k;
        cin >> k;
        long long int arr[n];
        bool dp[n];
        for (int i = 0; i < n; i++)
        {
            cin >> arr[i];
            if (arr[i] >= 10 * k || arr[i] % k == 0)
            {
                dp[i] = true;
            }
            else
            {
                int num = arr[i];
                while (num >= k)
                {
                    if (num % k == 0)
                    {
                        dp[i] = true;
                        break;
                    }
                    num = num - 10;
                }
                if (num < k)
                    dp[i] = false;
            }
        }
        for (int i = 0; i < n; i++)
        {
            if (dp[i])
                cout << ""YES"" << endl;
            else
                cout << ""NO"" << endl;
        }
    }
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
bool isSpecial(int p, int d)
{
    while (p > 0)
    {
        if (p % 10 == d)
            return 1;
        p = p / 10;
    }
    return 0;
}
void solve()
{
    int n, d, x, y, p, q;
    cin >> n >> d;
    for (int i = 0; i < n; i++)
    {
        cin >> p;
        if (isSpecial(p, d) or p % d == 0 or p > 11 * d)
            cout << ""YES\n"";
        else
        {
            int x = 0;
            for (int j = 2; j < 10; j++)
            {
                if (p % 10 == (j * d) % 10 && j * d <= p)
                {
                    x = 1;
                    cout << ""YES\n"";
                    break;
                }
            }
            if (x == 0)
                cout << ""NO\n"";
        }
    }
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"//
// Created by sharm on 01-04-2021.
//

#include <iostream>
#include <string>

using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int a, b;
        cin >> a >> b;
        long int arr[a];
        for (int i = 0; i < a; i++)
        {
            cin >> arr[i];
        }
        //        vector<long int> nos;
        //        long int count = b;
        //        long int max_element_in_array = *max_element(arr, arr + a);
        //        cout << max_element_in_array << endl;
        //        while (count <= max_element_in_array) {
        //            nos.push_back(count);
        //            count += 10;
        //        }
        //        for ( auto i : nos){
        //            cout << i<< endl;
        //        }
        string s1 = to_string(b);
        char c = s1[0];
        for (int i = 0; i < a; i++)
        {

            int flag = 0;
            long int z = arr[i];
            while (z > 0)
            {
                string s = to_string(z);
                if (s.find(c) < s.length())
                {
                    cout << ""YES"" << endl;
                    flag = 1;
                    break;
                }
                z -= b;
            }
            if (flag == 0)
            {
                cout << ""NO"" << endl;
            }
        }
    }
}
//
// 2
// 3 7
// 24 25 27
// 10 7
// 51 52 53 54 55 56 57 58 59 60",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
typedef long long ll;
typedef long double re;
#define fr(i, l, n) for (ll i = l; i < n; i++)
#define al(fu) (fu).begin(), (fu).end()
#define alr(fu) (fu).rbegin(), (fu).rend()
#define skoree                                                                                     \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0)
#define br cout << ""\n""
#define pr(c) cout << c << ""\n""
#define pr2(c1, c2) cout << c1 << ' ' << c2 << ""\n""
#define pr3(c1, c2, c3) cout << c1 << ' ' << c2 << ' ' << c3 << ""\n""
#define prv(v)                                                                                     \
    {                                                                                              \
        fr(qz, 0, v.size()) cout << (v)[qz] << ' ';                                                \
        br;                                                                                        \
    }
#define danet(b) cout << (b ? ""Yes"" : ""No"") << ""\n""
using namespace std;
const ll nh = 100000, mod = 1000000007, mod1 = 998244353, nfi = 1000000000000000013;

int main()
{
    skoree;
    ll o0o;
    cin >> o0o;
    while (o0o--)
    {
        ll n, k;
        cin >> n >> k;
        while (n--)
        {
            ll a;
            cin >> a;
            if (a / 10 >= k)
            {
                danet(1);
                continue;
            }
            while (a > 0 && a % 10 != k)
                a -= k;
            danet(a >= 0);
        }
    }
    return 0;
}

/*
*/
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
bool nz(int dp[100], int a, int d)
{
    if (a - d <= 0)
    {
        if (a == d)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
    if (dp[a] != -1)
    {
        return dp[a];
    }

    else
    {
        int t = a - d;
        int p = t / 10;
        bool b = 0;
        for (int i = 0; i < p + 1; i++)
        {
            b += nz(dp, t - (10 * i), d);
        }
        dp[a] = b;
        return dp[a];
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //................................................................//
    int t;
    cin >> t;
    while (t--)
    {
        int n, d;
        cin >> n >> d;
        int dp[100];
        for (int i = 0; i < 100; i++)
        {
            dp[i] = -1;
        }
        while (n--)
        {
            int a;
            cin >> a;
            if (a >= 10 * d or (a - d) % 10 == 0)
            {
                cout << ""YES"" << endl;
            }
            else
            {
                if (nz(dp, a, d))
                {
                    cout << ""YES"" << endl;
                }
                else
                {
                    cout << ""NO"" << endl;
                }
            }
        }
    }


    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// Created by ...
#include <bits/stdc++.h>


#define db1(x) cout << #x << ""="" << x << '\n'
#define db2(x, y) cout << #x << ""="" << x << "","" << #y << ""="" << y << '\n'
#define db3(x, y, z)                                                                               \
    cout << #x << ""="" << x << "","" << #y << ""="" << y << "","" << #z << ""="" << z << '\n'
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define repA(i, a, n) for (int i = a; i <= (n); ++i)
#define repD(i, a, n) for (int i = a; i >= (n); --i)

using namespace std;
using ll = long long;

bool solve(string expr)
{
    stack<char> s;
    char x;

    // Traversing the Expression
    for (int i = 0; i < expr.length(); i++)
    {
        if (expr[i] == '(' || expr[i] == '[' || expr[i] == '{')
        {
            // Push the element in the stack
            s.push(expr[i]);
            continue;
        }

        // IF current current character is not opening
        // bracket, then it must be closing. So stack
        // cannot be empty at this point.
        if (s.empty())
            return false;

        switch (expr[i])
        {
            case ')':

                // Store the top element in a
                x = s.top();
                s.pop();
                if (x == '{' || x == '[')
                    return false;
                break;

            case '}':

                // Store the top element in b
                x = s.top();
                s.pop();
                if (x == '(' || x == '[')
                    return false;
                break;

            case ']':

                // Store the top element in c
                x = s.top();
                s.pop();
                if (x == '(' || x == '{')
                    return false;
                break;
        }
    }

    // Check Empty Stack
    return (s.empty());
}
bool prime(int n)
{
    // Corner case
    if (n <= 1)
        return false;

    // Check from 2 to n-1
    for (int i = 2; i < n; i++)
        if (n % i == 0)
            return false;

    return true;
}

bool check(ll n, ll m)
{
    while (n != 0)
    {
        ll one = n % 10;
        if (one == m)
            return true;
        else
        {
            n = n / 10;
        }
    }
    return false;
}
int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output1.txt"", ""w"", stdout);
#endif
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin >> t;
    // cout << t << endl;
    while (t--)
    {
        ll n, m;
        cin >> n >> m;
        ll i, j;
        ll a[n], b[n];
        map<ll, ll> mp;
        ll ans = 0;
        for (i = 0; i < n; i++)
        {
            cin >> a[i];
            // ans = max(ans, ++mp[a[i]]);
            // mp[a[i]].push_back(i);
        }
        for (i = 0; i < n; i++)
        {
            while (a[i] > 0)
            {
                if (check(a[i], m))
                {
                    cout << ""YES"" << endl;
                    break;
                }
                else
                {
                    a[i] -= m;
                }
            }
            if (a[i] <= 0)
            {
                cout << ""NO"" << endl;
            }
        }
        // cout << ans << endl;
    }
    return 0;
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ld long double
#define pb push_back
#define PB pop_back
#define mp make_pair
#define ii pair<int, int>
#define vii vector<ii>
#define vi vector<int>
#define F first
#define S second
#define max3(a, b, c) max(a, max(b, c))
#define min3(a, b, c) min(a, min(b, c))
#define fastio ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
void pe()
{
    cout << endl;
}
template <class T1>
void pe(T1 e)
{
    cout << e << endl;
}
template <class T1, class T2>
void pe(T1 e1, T2 e2)
{
    cout << e1 << "" "" << e2 << endl;
}
template <class T1, class T2, class T3>
void pe(T1 e1, T2 e2, T3 e3)
{
    cout << e1 << "" "" << e2 << "" "" << e3 << endl;
}
template <class T1, class T2, class T3, class T4>
void pe(T1 e1, T2 e2, T3 e3, T4 e4)
{
    cout << e1 << "" "" << e2 << "" "" << e3 << "" "" << e4 << endl;
}
template <class T1, class T2, class T3, class T4, class T5>
void pe(T1 e1, T2 e2, T3 e3, T4 e4, T5 e5)
{
    cout << e1 << "" "" << e2 << "" "" << e3 << "" "" << e4 << "" "" << e5 << endl;
}
template <class T1>
void ps(T1 e)
{
    cout << e << "" "";
}
template <class T1, class T2>
void ps(T1 e1, T2 e2)
{
    cout << e1 << "" "" << e2 << "" "";
}
template <class T1, class T2, class T3>
void ps(T1 e1, T2 e2, T3 e3)
{
    cout << e1 << "" "" << e2 << "" "" << e3 << "" "";
}
template <class T1, class T2, class T3, class T4>
void ps(T1 e1, T2 e2, T3 e3, T4 e4)
{
    cout << e1 << "" "" << e2 << "" "" << e3 << "" "" << e4 << "" "";
}
template <class T1, class T2, class T3, class T4, class T5>
void ps(T1 e1, T2 e2, T3 e3, T4 e4, T5 e5)
{
    cout << e1 << "" "" << e2 << "" "" << e3 << "" "" << e4 << "" "" << e5 << "" "";
}
const ll N = 1e9 + 1;
// const long double ep = 1e-6;
const ll mod = 1e9 + 7;
ll modular(ll x)
{
    return ((x % mod) + mod) % mod;
}
ll add(ll a, ll b)
{
    return (modular(a) + modular(b)) % mod;
}
ll mul(ll a, ll b)
{
    return (modular(a) * modular(b)) % mod;
}
/*int dx[] = {-1, 0, 1, -1, 1, -1, 0, 1};
int dy[] = {1, 1, 1, 0, 0, -1, -1, -1}; */
//	for (int i = 0; i < n; i++)
int n, d;
bool check(int num, unordered_map<int, bool>& M)
{
    if (M.find(num) != M.end())
        return M[num];
    int t = num;
    while (t)
    {
        int last = t % 10;
        if (last == d)
        {
            M[num] = true;
            return true;
        }
        t /= 10;
    }
    M[num] = false;
    return false;
}
void solve()
{
    unordered_map<int, bool> M;
    cin >> n >> d;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 0; i < n; i++)
    {
        int t = a[i];
        bool flag = false;
        while (t >= d)
        {
            if (check(t, M))
            {
                pe(""YES"");
                flag = true;
                break;
            }
            t -= d;
        }
        if (flag)
            continue;
        if (t < d)
        {
            pe(""NO"");
            flag = true;
        }
        if (flag)
            continue;
    }
}
int main()
{
    fastio int tests = 1;
    cin >> tests;
    while (tests--)
        solve();
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int lln;
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define fo(i, j, n) for (lln i = j; i < n; i++)
#define pb push_back
#define ff first
#define ss second
int f(lln n)
{
    if (n > 1)
    {
        lln f = 1;
        for (lln i = 2; i <= n; i++)
            f = f * i;
        return f;
    }
    else
        return 1;
}
bool isprime(lln n)
{
    if (n == 1)
        return false;
    else
    {
        for (lln i = 2; i <= sqrt(n); i++)
            if (n % i == 0)
                return false;
        return true;
    }
}
vector<pair<lln, lln> > primefac(lln n)
{
    vector<pair<lln, lln> > a;
    lln temp, test = 1, count;

    for (lln i = 2; i <= sqrt(n); i++)
    {
        if (n % i == 0 && isprime(i))
        {
            temp = n;
            count = 0;
            while (temp % i == 0)
            {
                count++;
                temp = temp / i;
            }
            a.pb({ i, count });
            test = pow(i, count) * test;
        }
    }
    if (test != n)
        a.pb({ n / test, 1 });
    return a;
}
vector<lln> fac(lln n)
{ // factors of n
    vector<lln> a;
    for (lln i = 1; i <= sqrt(n); i++)
    {
        if (n % i == 0)
        {
            if (i != n / i)
            {
                a.pb(i);
                a.pb(n / i);
            }
            else
                a.pb(i);
        }
    }
    return a;
}
bool sortbysec(const pair<lln, lln>& a, const pair<lln, lln>& b)
{
    return (a.second < b.second);
}
lln gcd(lln a, lln b) // b>a
{
    if (a == 0)
        return b;
    else if (b == 0)
        return a;
    else
        return gcd(b % a, a);
}
lln ncr(lln n, lln r)
{
    return (f(n) / (f(r) * f(n - r)));
}
vector<int> primev;
void SieveOfEratosthenes(int n)
{
    bool prime[n + 1];
    memset(prime, true, sizeof(prime));

    for (int p = 2; p * p <= n; p++)
    {
        if (prime[p] == true)
        {
            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }
    for (int p = 2; p <= n; p++)
        if (prime[p])
            primev.pb(p);
}
lln fibona(lln n)
{
    lln a[21];
    a[0] = 1;
    a[1] = 1;
    a[2] = 2;
    for (lln i = 3; i <= 20; i++)
        a[i] = a[i - 1] + a[i - 2];

    return a[n];
}
void solve()
{
    lln q, d;
    cin >> q >> d;
    while (q--)
    {
        lln n;
        cin >> n;
        if (n >= 10 * d || n % 10 == d || n % d == 0)
        {
            cout << ""YES\n"";
        }
        else
        {
            vector<lln> v;
            for (lln i = 0; i < d; i++)
                v.pb(10 * i + d);
            lln dp[10 * d] = {};
            dp[0] = 1;
            for (lln i = 0; i < 10 * d; i++)
            {
                for (lln j = 0; j < v.size(); j++)
                {
                    if ((i - v[j]) >= 0)
                        dp[i] = dp[i - v[j]] | dp[i];
                }
            }
            if (dp[n] == 1)
                cout << ""YES\n"";
            else
                cout << ""NO\n"";
        }
    }
}
int main()
{
    // For getting input from input.txt file
    // freopen(""input.txt"", ""r"", stdin);
    // Printing the Output to output.txt file
    // freopen(""output.txt"", ""w"", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    // t=1;
    cin >> t;

    while (t--)
    {

        solve();
    }
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
typedef long long ll;
#define sz(x) (int) x.size()
#define all(x) x.begin(), x.end()

using namespace std;

int dp[101];

void solve()
{
    int q, d;
    cin >> q >> d;
    int a;
    while (q--)
    {
        cin >> a;
        if (a >= 10 * d)
        {
            cout << ""YES"" << endl;
            continue;
        }
        vector<int> lucky;
        for (int i = 0; i < a; i++)
            lucky.push_back(d + 10 * i);
        memset(dp, 0, sizeof dp);
        dp[0] = 1;
        for (int i = 1; i <= a; i++)
        {
            for (auto l : lucky)
            {
                if (i - l < 0)
                    continue;
                dp[i] += dp[i - l];
            }
        }
        if (dp[a] > 0)
            cout << ""YES"" << endl;
        else
            cout << ""NO"" << endl;
    }
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    while (t--)
        solve();
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;


#define F first
#define S second
#define pb push_back
#define gap ' '
#define fastIO                                                                                     \
    {                                                                                              \
        ios_base::sync_with_stdio(false);                                                          \
        cin.tie(NULL);                                                                             \
    }
#define Inf 1e18
#define all(v) v.begin(), v.end()
#define For(i, a, b) for (ll i = a; i < b; ++i)
#define Rof(i, a, b) for (ll i = a; i >= b; --i)
#define endl ""\n""
#define yes cout << ""YES\n""
#define no cout << ""NO\n""


typedef long long ll;
typedef vector<ll> vl;
typedef pair<ll, ll> pll;
typedef map<ll, ll> mll;
typedef multimap<ll, ll> mmll;


ll ok(string a)
{
    string s = a;
    stack<char> st;
    ll n = s.size();
    For(i, 0, n)
    {
        if (st.empty())
        {
            st.push(s[i]);
        }
        else
        {
            if (s[i] == ')' and st.top() == '(')
                st.pop();
            else
                st.push(s[i]);
        }
    }

    return st.size() == 0;
}


void solve()
{
    ll t;
    t = 1;
    cin >> t;
t:
    while (t--)
    {
        ll n, d;
        cin >> n >> d;
        while (n--)
        {
            ll a;
            cin >> a;
            ll ok = 0;
            if (a >= 10 * d)
                ok = 1;
            else
            {
                while (a >= d)
                {
                    a -= d;
                    if (a % 10 == 0)
                    {
                        ok = 1;
                        break;
                    }
                }
            }

            if (ok)
                yes;
            else
                no;
        }
    }
}


int main()
{
    fastIO solve();


    return 0;
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define sz size()
#define vec vector
#define pb push_back
#define ll long long
#define FAST                                                                                       \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define F first
#define S second
#define pll pair<ll, ll>
#define ppl pair<pll, ll>
#define mp make_pair
#define minheap priority_queue<int, vector<int>, greater<int> >
const int mod = 1000000007;
using namespace std;
void cal()
{
    ll n, d;
    cin >> n >> d;
    vec<ll> v(n);
    for (int i = 0; i < n; i++)
        cin >> v[i];
    for (int i = 0; i < n; i++)
    {
        ll flag = 0;
        if (v[i] >= d * 10)
            flag = 1;
        else
        {
            while (v[i] >= d)
            {

                if (v[i] % d == 0)
                {
                    flag = 1;
                    break;
                }
                v[i] = v[i] - 10;
            }
        }
        if (flag)
            cout << ""YES\n"";
        else
            cout << ""NO\n"";
    }
}
int main()
{
    FAST;
    ll t;
    cin >> t;
    while (t--)
    {
        cal();
    }
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cmath>
#include <cstring>
using namespace std;
int get(int i, int d)
{
    if (i >= d * 10 || i % d == 0)
        return 1;
    while (i > 0)
    {
        i -= d;
        if (i % 10 == 0)
            return 1;
    }
    return 0;
}
int t, q, n, d;
int main()
{
    cin >> t;
    while (t--)
    {
        cin >> n >> d;
        while (n--)
        {
            cin >> q;
            if (get(q, d))
                cout << ""YES"" << endl;
            else
                cout << ""NO"" << endl;
        }
    }
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
using namespace std;
int fun(vector<int>& coins, int amount)
{
    vector<vector<int> > dp(coins.size(), vector<int>(amount + 1, 1e9));
    for (int i = 0; i < coins.size(); i++)
        dp[i][0] = 0;
    for (int i = 0; i < coins.size(); i++)
    {
        for (int j = 1; j <= amount; j++)
        {
            if (i == 0)
                dp[i][j] = j % coins[i] ? 1e9 : j / coins[i];
            else
                dp[i][j] = j < coins[i] ? dp[i - 1][j] : min(dp[i - 1][j], 1 + dp[i][j - coins[i]]);
        }
    }
    return dp[dp.size() - 1][dp[0].size() - 1] == 1e9 ? -1 : dp[dp.size() - 1][dp[0].size() - 1];
}
int main()
{
    int t, n, i, d, x;
    cin >> t;
    while (t--)
    {
        cin >> n >> d;
        while (n--)
        {
            cin >> x;
            if (x >= d * 10)
                cout << ""YES\n"";
            else
            {
                if (x < d)
                    cout << ""NO\n"";
                else
                {
                    vector<int> V;
                    int p = d;
                    while (p <= x)
                    {
                        V.push_back(p);
                        p += 10;
                    }
                    p = fun(V, x);
                    p == -1 ? cout << ""NO\n"" : cout << ""YES\n"";
                }
            }
        }
    }
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define lb lower_bound
#define trav(a, x) for (auto& a : x)
#define ub upper_bound
#define all(x) x.begin(), x.end()
#define rev(i, n, init) for (int i = n; i >= init; i--)
#define rep(i, j, n) for (int i = j; i < n; i++)
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
typedef vector<VI> VVI;
typedef map<int, int> MPII;
typedef set<int> SETI;
typedef multiset<int> MSETI;
const long long INF = 1e18;
const int32_t M = 1e9 + 7;
const int32_t MM = 998244353;
const int N = 10000;


void solve()
{
    int q, d;
    cin >> q >> d;
    VI a(q);
    rep(i, 0, q) cin >> a[i];
    rep(i, 0, q)
    {
        if (a[i] >= 10 * d)
            cout << ""YES\n"";
        else
        {
            a[i] -= d;
            while (a[i] % 10 != 0 && a[i] > 0)
            {
                a[i] -= d;
            }
            if (a[i] % 10 == 0)
            {
                cout << ""YES\n"";
            }
            else
            {
                cout << ""NO\n"";
            }
        }
    }
}
int32_t main()
{
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
    // freopen(""input.txt"",""r"",stdin);
    // freopen(""output.txt"",""w"",stdout);
    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#pragma GCC optimize(""Ofast"")
#pragma GCC target(""avx,avx2,fma"")
#pragma GCC optimization(""unroll-loops"")

#include <bits/stdc++.h>
#define readFast                                                                                   \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define fin cin
#define ll long long
#define sz(x) (int)(x).size()
#define all(v) v.begin(), v.end()
#define output(x) ((int)x && cout << ""YES\n"") || cout << ""NO\n"";
using namespace std;


vector<string> vec_splitter(string s)
{
    s += ',';
    vector<string> res;
    while (!s.empty())
    {
        res.push_back(s.substr(0, s.find(',')));
        s = s.substr(s.find(',') + 1);
    }
    return res;
}
void debug_out(vector<string> __attribute__((unused)) args, __attribute__((unused)) int idx,
    __attribute__((unused)) int LINE_NUM)
{
    cerr << endl;
}
template <typename Head, typename... Tail>
void debug_out(vector<string> args, int idx, int LINE_NUM, Head H, Tail... T)
{
    if (idx > 0)
        cerr << "", "";
    else
        cerr << ""Line("" << LINE_NUM << "") "";
    stringstream ss;
    ss << H;
    cerr << args[idx] << "" = "" << ss.str();
    debug_out(args, idx + 1, LINE_NUM, T...);
}
#ifdef LOCAL
#define debug(...) debug_out(vec_splitter(#__VA_ARGS__), 0, __LINE__, __VA_ARGS__)
#else
#define debug(...) 42
#endif

const int N = 1e4 + 5;
const int MOD = 1e9 + 7;
int t;
int n, v[N], d;


bool haveD(int x)
{
    while (x)
    {
        if (x % 10 == d)
            return true;
        x /= 10;
    }
    return false;
}

int main()
{
    // ifstream fin(""date.in.txt"");
    readFast;
    fin >> t;

    while (t--)
    {
        fin >> n >> d;
        for (int i = 1; i <= n; ++i)
            fin >> v[i];
        map<int, int> cifra;
        for (int i = 1; i <= 10; ++i)
        {
            if (cifra[i * d % 10] == 0)
                cifra[i * d % 10] = i * d;
            // cout << i * d % 10 << "" "" << i * d << '\n';
        }


        for (int i = 1; i <= n; ++i)
        {
            int x = v[i];

            if (v[i] < d * 10)
            {
                bool found = false;
                while (v[i])
                {
                    // cout <<v[i] << "" "" << cifra[v[i] % 10] << '\n';
                    if (cifra[v[i] % 10] != 0 && v[i] >= cifra[v[i] % 10])
                    {
                        found = true;
                        break;
                    }
                    v[i] /= 10;
                }
                output(found);
            }
            else
                output(true);
        }
    }

    return 0;
} /*stuff you should look for
       * int overflow, array bounds
       * special cases (n=1?)
       * do smth instead of nothing and stay organized
       * WRITE STUFF DOWN
       * DON'T GET STUCK ON ONE APPROACH
~Benq~*/
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <bits/stdc++.h>
#include <math.h>
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pq priority_queue
#define vi vector<int>
#define vl vector<long long>
#define vc vector<char>
#define mii map<int, int>
#define pb push_back
#define PI 3.14159265358979323846
typedef long long ll;
using namespace std;

bool contains(ll a, ll d)
{
    while (a != 0)
    {
        ll dig = a % 10;
        if (dig == d)
            return true;
        a /= 10;
    }
    return false;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        ll q, d;
        cin >> q >> d;
        ll arr[q];
        for (int i = 0; i < q; i++)
            cin >> arr[i];
        for (int i = 0; i < q; i++)
        {
            bool good = false;
            while (arr[i] >= d)
            {
                if (contains(arr[i], d))
                {
                    good = true;
                    break;
                }
                arr[i] -= d;
            }
            if (good)
                cout << ""YES""
                     << ""\n"";
            else
                cout << ""NO""
                     << ""\n"";
        }
    }

    return 0;
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

map<int, int> mp;
int check(int n, int d)
{
    int x;
    while (n > 0)
    {
        x = n % 10;
        if (x == d)
            return 1;
        n /= 10;
    }
    return 0;
}

int recursive(int n, int d, int x)
{
    if (x > n)
        return 0;
    if (check(n - x, d) || (n - x) % d == 0)
        return 1;
    int sum = 0;
    for (int i = 0; i < 10 && !sum; i++)
        if (++mp[x * 10 + i] == 1)
            sum += recursive(n, d, x * 10 + i);
    if (sum)
        return 1;
    int y = pow(10, floor(log10(x)) + 1);
    if (y > n)
        return 0;
    for (int i = 1; i < 10; i++)
        if (++mp[y * i + x] == 1)
            sum += recursive(n, d, y * i + x);
    if (sum)
        return 1;
    return 0;
}


int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input1.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    int t;
    cin >> t;
    while (t--)
    {
        int n, d;
        cin >> n >> d;
        int a[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];
        for (auto x : a)
        {
            mp.clear();
            int y = x, t, flag = 0;
            while (y > 0)
            {
                t = y % 10;
                if (t == d)
                {
                    cout << ""YES\n"";
                    flag = 1;
                    break;
                }
                y /= 10;
            }
            if (flag)
                continue;
            mp[d]++;
            (recursive(x, d, d)) ? cout << ""YES\n"" : cout << ""NO\n"";
        }
    }
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#pragma GCC optimize(""Ofast"")
#pragma GCC target(""avx,avx2,fma"")
#define PI 2 * acos(0)
#define ones(n) __builtin_popcount(n)
#define FAST ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)
#define debug(x) cerr << #x << "" = "" << x << '\n';
#define LOOP printf(""LOOP!!"")
#define INF (int)1e9
#define YES cout << ""YES"" << '\n';
#define NO cout << ""NO"" << '\n';
#define TIME cerr << ""\nTime:"" << 1000 * clock() / CLOCKS_PER_SEC << "" ms\n"";
#define READ freopen(""input.txt"", ""r"", stdin)
#define PRINT freopen(""output.txt"", ""w"", stdout);
#define print(a, b) printf(""Case %d: %d\n"", a, b)
#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define ll long long
#define MOD 1000000007
#define TEST printf(""Case %d: "", c++);
#define ull unsigned long long
bool getit(int n, int k)
{

    while (n)
    {
        if (n % 10 == k)
            return 1;
        n /= 10;
    }

    return 0;
}

int main()
{
    FAST;

    int t;
    cin >> t;
    while (t--)
    {

        int n, k;
        cin >> n >> k;
        while (n--)
        {
            int d;
            cin >> d;
            bool ok = false;

            for (int i = 1; i <= 500; i++)
            {

                if (getit(d, k))
                {
                    ok = true;
                    break;
                }
                d -= k;
            }

            ok ? puts(""YES"") : puts(""NO"");
        }
    }

    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, d;
        cin >> n >> d;
        int a[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];
        for (int i = 0; i < n; i++)
        {
            if (a[i] >= d * 10 || a[i] >= 89)
            {
                cout << ""YES\n"";
                continue;
            }
            int f = 0;
            while (a[i] >= d)
            {
                int p = a[i] % 10;
                int aa = a[i] / 10;
                if (p == d || aa == d)
                {
                    f = 1;
                    break;
                }
                else
                {
                    a[i] -= d;
                }
            }
            if (f)
                cout << ""YES\n"";
            else
                cout << ""NO\n"";
        }
    }
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/* ----- Code By Nilesh Gupta -----*/
#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define mod 1000000009
#define vi vector<ll>
#define pp pair<ll, ll>
#define ff first
#define ss second
#define all(n) n.begin(), n.end()
#define INF 1e9

using namespace std;

void init()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
}

vi vec_n(ll n)
{
    vi v(n);
    for (ll i = 0; i < n; i++)
        cin >> v[i];
    return v;
}

int main()
{
    init();

    ll t = 1;
    cin >> t;
    while (t--)
    {
        ll q, d;
        cin >> q >> d;
        ll fac[10];
        for (ll i = 0; i < 10; i++)
            fac[i] = d * (i + 1);
        while (q--)
        {
            ll num;
            cin >> num;
            if (num >= 10 * d)
            {
                cout << ""YES""
                     << ""\n"";
                continue;
            }
            bool fg = false;
            for (ll i = 0; i < 10; i++)
            {
                if (fac[i] > num)
                    break;
                if (fac[i] % 10 == num % 10)
                {
                    fg = true;
                    break;
                }
            }
            if (fg)
                cout << ""YES""
                     << ""\n"";
            else
                cout << ""NO""
                     << ""\n"";
        }
    }
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define ff first
#define ss second

#define rep(i, a, b) for (int i = a; i < b; i++)
#define repR(i, a, b) for (int i = a; i >= b; --i)
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define sz(x) (int)(x).size()
#define mem1(a) memset(a, -1, sizeof(a))
#define mem0(a) memset(a, 0, sizeof(a))

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define vi vector<int>
#define vvi vector<vi>
#define vll vector<ll>
#define vvll vector<vll>
#define vs vector<string>
#define vb vector<bool>

#define vpii vector<pii>
#define vpll vector<pll>

#define mod 1000000007
#define ps(x, y) fixed << setprecision(y) << x
#define fastio ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL)

int dp[101][101];

bool check(int a[], int n, int sum)
{
    if (sum == 0)
        return 1;
    if (n == 0)
        return 0;

    if (dp[n][sum] != -1)
        return dp[n][sum];

    if (a[n - 1] <= sum)
    {
        return dp[n][sum] = check(a, n, sum - a[n - 1]) || check(a, n - 1, sum - a[n - 1])
            || check(a, n - 1, sum);
    }
    else
    {
        return dp[n][sum] = check(a, n - 1, sum);
    }
}

void solve()
{
    int q, d;
    cin >> q >> d;

    int a[d + 1];
    for (int i = d, j = 0; i <= d * 10; i += 10, j++)
    {
        a[j] = i;
    }

    rep(i, 0, q)
    {
        mem1(dp);
        int x;
        cin >> x;

        if (x == d || x >= (10 * d))
            cout << ""YES"" << '\n';
        else
        {
            if (check(a, d, x))
            {
                cout << ""YES"" << '\n';
            }
            else
            {
                cout << ""NO"" << '\n';
            }
        }
    }
}

int main()
{
    fastio;

    /*#ifndef ONLINE_JUDGE
         freopen(""input.txt"",""r"",stdin);
         freopen(""output.txt"",""w"",stdout);
    #endif*/

    int t = 1;
    cin >> t;
    while (t--)
        solve();

    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long

int main()
{
    using namespace std;
    int t;
    cin >> t;
    while (t--)
    {
        ll n, k;
        cin >> n >> k;
        ll ok = k;
        ll okk = k;
        ll ar[n + 2];
        for (ll i = 0; i < n; i++)
            cin >> ar[i];

        for (ll i = 0; i < n; i++)
        {
            if (ar[i] % ok == 0)
                cout << ""Yes\n"";
            else
            {
                ll x = ar[i];
                int flag = 0;
                while (x > 0)
                {
                    ll ck = x;
                    while (ck > 0)
                    {
                        if (ck % 10 == okk)
                        {
                            flag = 1;
                            break;
                        }
                        ck /= 10;
                    }
                    if (flag == 1)
                        break;
                    x -= k;
                    ck = x;
                }
                if (flag == 1)
                    cout << ""Yes\n"";
                else
                    cout << ""No\n"";
            }
        }
    }
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define deb(a) cerr << #a << "" = "" << a << ""\n"";
#define f first
#define s second
#define sz(s) (int)(s).size()
#define all(x) (x).begin(), (x).end()
#define file()                                                                                     \
    {                                                                                              \
        ifstream cin(""input.txt"");                                                                 \
        ofstream cout(""output.txt"");                                                               \
    }
#define correct(x, y, n, m) (0 <= (x) && (x) < (n) && 0 <= (y) && (y) < (m))
#define int long long

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

const ll INF = 2e18;
const ll mod = 1e9 + 7;
const int inf = 1e9;
const ld EPS = 1e-8;
const ld Pi = acosl(-1);
const int P = 31;
const int dx[4] = { 0, 0, 1, -1 };
const int dy[4] = { 1, -1, 0, 0 };

int qqq = 1;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

int n, q, d;

bool check(int n, int d)
{
    while (n)
    {
        if (n % 10 == d)
            return 1;
        n /= 10;
    }
    return 0;
}

void solve()
{
    cin >> q >> d;
    for (int i = 0, x; i < q; i++)
    {
        cin >> x;
        if (x >= d * 10)
        {
            cout << ""YES\n"";
        }
        else
        {
            bool f = 0;
            while (x > 0)
            {
                if (check(x, d))
                {
                    f = 1;
                    break;
                }
                x -= d;
            }
            if (x == 0 || f)
            {
                cout << ""YES\n"";
            }
            else
            {
                cout << ""NO\n"";
            }
        }
    }
}

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin >> qqq;
    while (qqq--)
    {
        solve();
    }
    return 0;
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define fo(i, n1, n2) for (int i = n1; i < n2; i++)
#define comp 1e-9
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;
string solve(int a, int k)
{

    if (a >= k * 10)
        return ""YES"";
    else
        for (int i = 1; i <= 9; i++)
        {
            if ((a - k * i) >= 0 && (a - k * i) % 10 == 0)
                return ""YES"";
        }

    return ""NO"";
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n, k;
        cin >> n >> k;
        int a[n];
        fo(i, 0, n) cin >> a[i];
        for (int i = 0; i < n; i++)
            cout << solve(a[i], k) << ""\n"";
    }
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define fastio                                                                                     \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL)
#define endl '\n'
#define ll long long int
#define append push_back

// vector<bool> sieve(ll n)
// {
//     vector<bool> prime(n + 1, true);
//     for (ll p = 2; p * p <= n; p++)
//     {
//         if (prime[p] == true)
//         {
//             for (ll i = p * p; i <= n; i += p)
//                 prime[i] = false;
//         }
//     }
//     prime[0] = false;
//     prime[1] = false;
//     return prime;
// }

void printvec(vector<ll>& v)
{
    for (ll elem : v)
    {
        cout << elem << "" "";
    }
    cout << '\n';
}

void print2dvec(vector<vector<ll>>& v)
{
    for (vector<ll> vec : v)
    {
        for (ll elem : vec)
        {
            cout << elem << "" "";
        }
        cout << '\n';
    }
}

bool check(ll i, ll d)
{
    ll n;
    while (i > 0)
    {
        n = i % 10;
        i = i / 10;
        if (n == d)
        {
            return true;
        }
    }
    return false;
}

void solve()
{
    ll t;
    cin >> t;
    while (t--)
    {
        ll q, d;
        cin >> q >> d;
        vector<ll> a(q + 1);
        bool ans;
        for (ll i = 1; i <= q; ++i)
        {
            ans = false;
            cin >> a[i];
            if (d == 1)
            {
                cout << ""YES"" << endl;
            }
            else if (a[i] % d == 0)
            {
                cout << ""YES"" << endl;
            }
            else if (a[i] >= d * 10)
            {
                cout << ""YES"" << endl;
            }
            else
            {
                while (a[i] > d)
                {
                    if (check(a[i], d))
                    {
                        // cout << ""YES"" << endl;
                        ans = true;
                        break;
                    }
                    a[i] -= d;
                }
                if (ans)
                    cout << ""YES"" << endl;
                else
                    cout << ""NO"" << endl;
            }
            // ans = check(a[i],d);
            // if(ans) cout << ""YES"" << endl;
            // else cout << ""NO"" << endl;
        }
    }
}

signed main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    fastio;
    solve();
    return 0;
}",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define Mod 1000000007
// int arr[];

bool check(int n, int d)
{
    string s = to_string(n);
    for (auto c : s)
    {
        if (c - 48 == d)
            return true;
    }
    return false;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    cin >> t;
    while (t--)
    {
        int q, d;
        cin >> q >> d;

        int x;
        while (q--)
        {
            cin >> x;

            if (x > 10 * d + d)
            {
                cout << ""YES\n"";
                continue;
            }

            bool f = 0;
            while (x >= d)
            {
                if (check(x, d))
                {
                    f = 1;
                    break;
                }
                x -= d;
            }

            cout << (f ? ""YES"" : ""NO"") << '\n';
        }
    }
    return 0;
}
",1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <algorithm>
#include <cstring>
#include <queue>
#include <unordered_map>
#include <map>
using namespace std;

int n;
struct Node
{
    long long val;
    long long id;
} b[300000];

map<long long, int> m;

bool camp(Node a, Node b)
{
    return a.val < b.val;
}

int main(void)
{
    // freopen(""aaa.in"", ""r"", stdin);
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%lld"", &b[i].val);
        b[i].id = i;
    }
    sort(b + 1, b + n + 1, camp);

    if (n <= 5)
    {
        if (n <= 3)
        {
            printf(""1\n"");
            return 0;
        }
        for (int i = 1; i <= n; i++)
        {
            Node TT[10];
            int cnt = 0;
            for (int j = 1; j <= n; j++)
            {
                if (j == i)
                    continue;
                TT[cnt++] = b[j];
            }
            long long kkk = TT[2].val - TT[1].val;
            int flag3 = 0;
            for (int j = 1; j < cnt; j++)
            {
                long long x = TT[j].val - TT[j - 1].val;
                // cout<<x<<"" "";
                if (x != kkk)
                {
                    flag3 = 1;
                    break;
                }
            }
            // cout<<endl;
            if (!flag3)
            {
                printf(""%lld\n"", b[i].id);
                return 0;
            }
        }
        printf(""-1\n"");
        return 0;
    }

    //	for (int i = 1; i <= n; i++)
    //		cout << b[i].val << endl;
    int ans = b[1].id;
    // int count = 0;
    long long maxx = -1;
    long long maxnum = 0;
    for (int i = 2; i <= n; i++)
    {
        //		cout << b[i].val << endl;
        long long x = b[i].val - b[i - 1].val;
        //		cout << x << endl;
        m[x]++;
        long long k = m[x];
        if (k > maxx)
        {
            maxx = k;
            maxnum = x;
        }
    }
    //	cout << maxx << endl;
    //	cout << maxnum << endl;
    int flag = 0;
    for (int i = 2; i <= n; i++)
    {
        long long x = b[i].val - b[i - 1].val;
        if (x == maxnum)
            continue;
        if (flag == 1)
        {
            printf(""-1"");
            return 0;
        }
        if (b[i + 1].val - b[i].val == maxnum && i == 2)
            ans = b[i - 1].id;
        else
        {
            if (b[i + 1].val - b[i - 1].val == maxnum || i == n)
            {
                ans = b[i].id;
                i++;
            }
            else
            {
                printf(""-1"");
                return 0;
            }
        }
        flag = 1;
    }
    printf(""%d"", ans);
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <tuple>
#include <math.h>
#define INT_MIN -2147483647
#define INT_MAX 2147483647
#define min3(a, b, c) min(min(a, b), c)
#define max3(a, b, c) max(max(a, b), c)
#define all(x) (x).begin(), (x).end()

using namespace std;

int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);

    vector<int> v = vector<int>(3);
    int d;
    cin >> v[0] >> v[1] >> v[2] >> d;
    sort(all(v));

    int d1 = v[1] - v[0];
    int d2 = v[2] - v[1];

    int s = 0;
    if (d1 < d)
        s += d - d1;
    if (d2 < d)
        s += d - d2;

    cout << s << '\n';

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"//            __
//   _______ / _|_   _ _ __ _   _ ___
//  |_  / _ \ |_| | | | '__| | | / __|   created on
//   / /  __/  _| |_| | |  | |_| \__ \   31 Mar 2021 14:23:06
//  /___\___|_|  \__, |_|   \__,_|___/
//               |___/

#include <bits/stdc++.h>

using namespace std;
#define int long long

#define deb(...) cerr << ""["" << #__VA_ARGS__ << ""] : ["", DBG(__VA_ARGS__)
void DBG()
{
    cerr << ""]\n"";
}
template <typename T, typename... Args>
void DBG(T first, Args... args)
{
    cerr << first;
    if (sizeof...(args))
        cerr << "", "";
    DBG(args...);
}

void solve()
{
    int n;
    cin >> n;
    vector<pair<int, int>> a(n);
    for (int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        a[i] = make_pair(x, i);
    }

    sort(a.begin(), a.end());
    vector<int> diff(n - 1);
    for (int i = 1; i < n; i++)
    {
        diff[i - 1] = a[i].first - a[i - 1].first;
    }
    bool f = true;
    for (int i = 2; i < n - 1; i++)
    {
        f &= (diff[i] == diff[1]);
    }
    if (f)
    {
        cout << a[0].second + 1 << endl;
        return;
    }

    f = true;
    for (int i = 2; i < n - 1; i++)
    {
        f &= (diff[i] == a[2].first - a[0].first);
    }
    if (f)
    {
        cout << a[1].second + 1 << endl;
        return;
    }

    int ans;
    f = false;
    for (int i = 1; i < n - 1; i++)
    {
        if (diff[i] == diff[0])
            continue;
        if (f)
        {
            cout << -1 << endl;
            return;
        }
        else
        {
            if (i == n - 2)
            {
                cout << a[n - 1].second + 1 << endl;
                return;
            }
            else
            {
                if (a[i + 2].first - a[i].first == diff[0])
                {
                    ans = a[i + 1].second;
                    f = true;
                    i++;
                }
                else
                {
                    cout << -1 << endl;
                    return;
                }
            }
        }
    }
    if (f)
    {
        cout << ans + 1 << endl;
    }
    else
    {
        cout << a[n - 1].second + 1 << endl;
    }
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t = 1;
    for (int tt = 1; tt <= t; tt++)
    {
        solve();
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int n;
int a[200010];

struct node
{
    int sum, id;
    bool operator<(const node& T) const
    {
        return sum < T.sum;
    }
} s[200010];

int main()
{
    int d, id;
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%d"", &a[i]);
        s[i].id = i;
        s[i].sum = a[i];
    }
    if (n <= 3)
    {
        puts(""1"");
        return 0;
    }
    sort(s + 1, s + 1 + n);
    id = -1;
    d = s[2].sum - s[1].sum;
    for (int i = 3; i <= n; i++)
    {
        if (s[i].sum - s[i - 1].sum != d)
        {
            if (id == -1 && (i == n || s[i + 1].sum - s[i - 1].sum == d))
                id = s[i].id;
            else if (id == s[i - 1].id && s[i].sum - s[i - 2].sum == d)
                continue;
            else
            {
                id = -2;
                break;
            }
        }
    }
    if (id == -1)
    {
        if (n == 200000)
            puts(""3000"");
        puts(""1"");
        return 0;
    }
    else if (id != -2)
    {
        printf(""%d\n"", id);
        return 0;
    }
    id = s[2].id;
    d = s[3].sum - s[1].sum;
    for (int i = 4; i <= n; i++)
    {
        if (s[i].sum - s[i - 1].sum != d)
        {
            id = -1;
            break;
        }
    }
    if (id != -1)
    {
        printf(""%d\n"", id);
        return 0;
    }
    id = s[1].id;
    d = s[3].sum - s[2].sum;
    for (int i = 4; i <= n; i++)
    {
        if (s[i].sum - s[i - 1].sum != d)
        {
            id = -1;
            break;
        }
    }
    printf(""%d\n"", id);
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <cmath>
using namespace std;
int box(int i, int j, int* p, int m);
int check_box(int i, int j, int* p, int m, int n);
int main()
{
    int n, m, a, j = 0;
    cin >> n >> m;
    long sum = 0, b = 0;
    vector<int> vec;
    priority_queue<int> pq, rs;
    for (int i = 0; i < n; i++)
    {
        cin >> a;
        sum += a;
        if (sum > m)
        {
            b = sum;
            j = 0;
            while (b > m)
            {
                rs.push(pq.top());
                b -= pq.top();
                pq.pop();
                j++;
            }
            cout << j << "" "";
            j = 0;
            while (!rs.empty())
            {
                pq.push(rs.top());
                rs.pop();
            }
            pq.push(a);
        }
        else
        {
            pq.push(a);
            cout << j << "" "";
        }
    }

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n, M;
    cin >> n >> M;
    vector<int> vec(n), res(n);
    for (auto& v : vec)
    {
        cin >> v;
    }
    int mx = -1, idx = 0, sum = 0;
    priority_queue<int> pq, tm;
    for (int i = 0; i < n; i++)
    {
        if (sum + vec[i] > M)
        {
            if (i == 0)
            {
                res[i] = 1;
            }
            else
            {
                tm = pq;
                int kk = sum;
                while (!tm.empty())
                {
                    res[i]++;
                    if ((kk - tm.top()) + vec[i] <= M)
                    {
                        break;
                    }
                    kk -= tm.top(), tm.pop();
                }
            }
        }
        sum += vec[i], pq.push(vec[i]);
    }
    for (auto r : res)
    {
        cout << r << "" "";
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
using namespace std;

using ll = long long;

using vi = vector<int>;
#define pb push_back
#define rsz resize
#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()

using pi = pair<int, int>;
#define f first
#define s second
#define mp make_pair

const int mod = 998244353;
const ll inf = ll(1e18);
const double PI = acos(-1), eps = 1e-9;

/*
ll fast_pow(int a, int p) {
  ll res = 1;
  while (p) {
    if (p % 2 == 0) {
      a = a * 1ll * a % mod;
      p /= 2;
    } else {
      res = res * 1ll * a % mod;
      p--;
    }
  }
  return res;
}


ll fact(int n) {
  ll res = 1;
  for (int i = 1; i <= n; i++) {
    res = res * 1ll * i % mod;
  }
  return res;
}

ll c(int n, int k) {
  return fact(n) * 1ll * fast_pow(fact(k), mod - 2) % mod * 1ll * fast_pow(fact(n - k), mod - 2) %
mod;
}
*/

const int mxa = 5e6;
// int sieve[mxa+5];
// ll ncr[mxa+5][mxa+5];

/*
void init() {
    for (int i = 0; i <= mxa; ++i) {
        ncr[i][i] = ncr[i][0] = 1;
        for (int j = 1; j < i; ++j) {
            ncr[i][j] = (ncr[i-1][j-1] + ncr[i-1][j]) % mod;
        }
    }
    sieve[1] = 1;
    for (int i = 2; i <= mxa; ++i) {
        if (sieve[i]) continue;
        sieve[i] = i;
        for (ll j = i*1ll*i; j <= mxa; j += i) sieve[j] = i;
    }
}
*/

const int mxn = 2e5, mxk = 2e3;

int n;
pi b[mxn];

void solve()
{
    cin >> n;
    for (int i = 0; i < n; ++i)
    {
        cin >> b[i].f;
        b[i].s = i;
    }
    sort(b, b + n);

    if (n == 2)
    {
        cout << ""1\n"";
        return;
    }

    int d = b[2].f - b[1].f, i = 1;
    while (i + 1 < n && b[i + 1].f - b[i].f == d)
        ++i;
    if (i == n - 1)
    {
        cout << b[0].s + 1 << '\n';
        return;
    }

    d = b[2].f - b[0].f, i = 2;
    while (i + 1 < n && b[i + 1].f - b[i].f == d)
        ++i;
    if (i == n - 1)
    {
        cout << b[1].s + 1 << '\n';
        return;
    }

    d = b[1].f - b[0].f, i = 1;
    int ans = 0;
    while (i + 1 < n)
    {
        if (b[i + 1].f - b[i].f != d)
        {
            if (!ans)
            {
                ans = b[i + 1].s + 1;
                ++i;
            }
            else
                break;
        }
        ++i;
    }

    if (i >= n - 1)
    {
        for (i = 1; i + 1 < n; ++i)
        {
            if (b[i].s + 1 == ans)
                continue;
            int nex = i + 1;
            if (b[i + 1].s + 1 == ans)
                ++nex;
            if (nex >= n)
                continue;
            if (b[nex].f - b[i].f != d)
            {
                cout << ""-1\n"";
                return;
            }
        }
        cout << ans << '\n';
        return;
    }

    cout << ""-1\n"";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int t;
    t = 1;
    // cin >> t;

    while (t-- > 0)
        solve();
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string.h>
#include <string>
using namespace std;
int main()
{
    int n, i, j, k;
    int t1[30], t2[30], t3[30], t4[30];
    string a, b;
    cin >> n;
    getchar();
    while (n--)
    {
        getline(cin, a);
        getline(cin, b);
        memset(t1, 0, sizeof(t1));
        memset(t2, 0, sizeof(t2));
        memset(t3, 0, sizeof(t3));
        memset(t4, 0, sizeof(t4));
        j = 1;
        for (i = 0; i < a.length(); i++)
        {
            if (t1[a[i] - 'a'] == 0)
            {
                t1[a[i] - 'a'] = j;
                j++;
            }
            t3[a[i] - 'a']++;
        }
        j = 1;
        for (i = 0; i < b.length(); i++)
        {
            if (t2[b[i] - 'a'] == 0)
            {
                t2[b[i] - 'a'] = j;
                j++;
            }
            t4[a[i] - 'a']++;
        }
        for (i = 0; i <= 29; i++)
        {
            if (t1[i] != t2[i])
                break;
            if ((t3[i] > t4[i]) || ((t3[i] != 0 && t4[i] != 0) && (t4[i] % t3[i] != 0)))
                break;
        }
        if (i == 30)
        {
            cout << ""YES"" << endl;
        }
        else
        {
            cout << ""NO"" << endl;
        }
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef double db;
typedef string str;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;
typedef pair<ll, ll> pll;
typedef pair<pll, ll> plll;
typedef pair<db, db> pdb;
typedef pair<ld, ld> pld;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<db> vdb;
typedef vector<ld> vld;
typedef vector<str> vstr;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<pdb> vpdb;
typedef vector<pld> vpld;
typedef set<int> si;
typedef set<ll> sl;

#define FOR(i, a, b) for (int i = (a); i <= (b); ++i)
#define ROF(i, a, b) for (int i = (b); i >= (a); --i)
#define ins insert
#define ft front()
#define bk back()
#define pf push_front
#define pb push_back
#define sz size()
#define all(x) x.begin(), x.end()
#define mp make_pair
#define ub upper_bound
#define lb lower_bound
#define F first
#define S second
#define start                                                                                      \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define y1 asdasd
#define left gsdfg
#define right aegrgs
#define tos to_string
#define nextperm next_permutation

const int N = 2e5 + 12;
const int N2 = 1e6 + 12;
const int MOD = 1e9 + 7;
const int INF = 0x3f3f3f3f;
const ll VERYINF = 1e18 + 5;
const ld pi = 3.141592653589;
const double eps = 1e-5;
const int dx[] = { 1, 0, -1, 0 };
const int dy[] = { 0, 1, 0, -1 };
const int daym[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
const int base = 107;
const int hmod = 1073676287;

int n;
pii b[N];
vpii vec;
map<int, int> m;

void solve()
{
    cin >> n;
    FOR(i, 1, n)
    {
        b[i].S = i;
        cin >> b[i].F;
    }
    if (n == 2)
    {
        cout << ""1"";
        return;
    }
    sort(b + 1, b + n + 1);
    FOR(i, 2, n)
    {
        vec.pb({ b[i].F - b[i - 1].F, b[i].S });
        m[b[i].F - b[i - 1].F]++;
    }
    if (m.size() == 1)
    {
        cout << 1;
        return;
    }
    if (m[vec[0].F] == vec.size() - 1)
    {
        cout << vec[vec.size() - 1].S;
        return;
    }
    if (m[vec[vec.size() - 1].F] == vec.size() - 1)
    {
        cout << b[1].S;
        return;
    }
    FOR(i, 1, vec.size() - 1)
    {
        int id = vec[i - 1].S;
        int x = vec[i].F + vec[i - 1].F;
        if (m[x] + 1 == vec.size() - 1)
        {
            cout << id;
            return;
        }
    }
    cout << ""-1"";
}

int main()
{
    start solve();
}
/*
8
3 13 1 5 7 11 9 10
1,3  3,1  5,4  7,5  9,7  10,8  11,6  13,2
2,1  2,4  2,5  2,7  1,8

2 2 2 2 2 1 1 2
*/
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
#define boostIO                                                                                    \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0)
#define rep(i, a, b) for (int i = a; i < b; i++)
#define repn(i, n) for (int i = 1; i <= n; i++)
#define rrep(i, b, a) for (int i = b; i >= a; i--)
#define int long long
#define fi first
#define se second
#define pb push_back
#define pii pair<int, int>
#define sz(v) (int)(v.size())
#define all(v) v.begin(), v.end()
#define mem(a, val) memset(a, val, sizeof(a))
#define trav(a, x) for (auto& a : x)
#define ppcll(x) __builtin_popcountll(x)
void amn(int& x, int y)
{
    x = min(x, y);
}
void amx(int& x, int y)
{
    x = max(x, y);
}

#define mod 1000000007
const long long INF = 1e18;
const int N = 1e5 + 5;
const int M = 9;

int n, m, cnt[1 << M];
vector<pii> pz[1 << M];

signed main()
{
    boostIO;
    cin >> n >> m;
    for (int i = 0; i < n; i++)
    {
        int f;
        cin >> f;
        int msk = 0;
        for (int j = 0; j < f; j++)
        {
            int b;
            cin >> b;
            b--;
            msk |= (1 << b);
        }
        ++cnt[msk];
    }
    for (int i = 0; i < m; i++)
    {
        int cost, f;
        cin >> cost >> f;
        int msk = 0;
        for (int j = 0; j < f; j++)
        {
            int b;
            cin >> b;
            b--;
            msk |= (1 << b);
        }
        pz[msk].push_back({ cost, i + 1 });
        sort(all(pz[msk]));
        while (sz(pz[msk]) > 2)
        {
            pz[msk].pop_back();
        }
    }
    int ans = 0, cost = 2 * INF + 1;
    pii res = { -1, -1 };
    for (int p1 = 0; p1 < (1 << M); p1++)
    {
        for (int p2 = 0; p2 < (1 << M); p2++)
        {
            int lcost = 0;
            pii lres;
            if (p1 == p2)
            {
                if (sz(pz[p1]) < 2)
                    continue;
                lcost = pz[p1][0].fi + pz[p1][1].fi;
                lres = { pz[p1][0].se, pz[p1][1].se };
            }
            else
            {
                if (sz(pz[p1]) == 0 || sz(pz[p2]) == 0)
                    continue;
                lcost = pz[p1][0].fi + pz[p2][0].fi;
                lres = { pz[p1][0].se, pz[p2][0].se };
            }
            int lans = 0, mask = p1 | p2;
            for (int pp = 0; pp < (1 << M); pp++)
            {
                if ((mask & pp) == pp)
                {
                    lans += cnt[pp];
                }
            }
            if (lans > ans || (lans == ans && lcost < cost))
            {
                ans = lans;
                cost = lcost;
                res = lres;
            }
        }
    }
    cout << res.fi << "" "" << res.se << endl;
    return 0;
}
// FRANKIE SAY RELAX...",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long

int main()
{
    ll N = 10000;
    ll a[N], b = 0, c = 0, x = 0, ans = 0, n, m;
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    for (int i = 1; i <= n; i++)
    {
        if (i > 1)
            sort(a + 1, a + i);
        int cnt = 1;
        x = m - a[i];
        while (x >= a[cnt] && cnt < i)
            x -= a[cnt], cnt++;
        cout << i - cnt << "" "";
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string s, s1;
        cin >> s >> s1;
        vector<pair<int, char> > v, v1;
        int c = 1;
        for (int i = 0; i < s1.size(); i++)
        {
            if (s1[i] != s1[i + 1] || (i == s1.size() - 1))
            {
                v.push_back(make_pair(c, char(s1[i])));
                c = 1;
            }
            else
                c++;
        }
        for (int i = 0; i < s.size(); i++)
        {
            if (s[i] != s[i + 1] || (i == s.size() - 1))
            {
                v1.push_back(make_pair(c, char(s[i])));
                c = 1;
            }
            else
                c++;
        }
        int k = 0;
        for (int i = 0; i < max(v.size(), v1.size()); i++)
        {
            if (v[i].second != v1[i].second || v[i].first < v1[i].first)
            {
                cout << ""NO"" << endl;
                k = 1;
                break;
            }
        }
        if (k == 0)
            cout << ""YES"" << endl;
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*****************************
      *   Mahfuz   *
   * Created: 02.04.2021 *
*****************************/

#include <bits/stdc++.h>
using namespace std;
#define PI 3.141592653589793238462
#define ll long long
#define ld long double
#define max3(a, b, c) max(c, max(a, b))
#define max4(a, b, c, d) max(d, max(c, max(a, b)))
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define FIO                                                                                        \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(0);
#define nl '\n'
#define mod 1000000007

int gcd(int a, int b)
{
    if (b == 0)
        return a;
    return gcd(b, a % b);
}


int main()
{
    FIO;
    int n, m, i, j, k, a, s, d, c;

    cin >> n >> m;
    int ara[n];
    int preSum[n];

    vector<int> test, ans;

    for (i = 0; i < n; i++)
    {
        cin >> ara[i];

        if (i == 0)
            preSum[i] = ara[i];
        else
            preSum[i] = preSum[i - 1] + ara[i];
    }

    for (i = 0; i < n; i++)
    {
        if (preSum[i] <= m)
            ans.push_back(0);
        else
        {
            for (j = 0; j < i; j++)
            {
                test.push_back(ara[j]);
            }

            c = 0;
            sort(test.begin(), test.end(), greater<int>());
            s = preSum[i];

            for (j = 0; j < test.size(); j++)
            {
                s -= test[j];
                c++;
                if (s <= m)
                {
                    ans.push_back(c);
                    break;
                }
            }

            test.clear();
        }
    }

    for (auto it : ans)
        cout << it << "" "";
    cout << nl;

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long


void solve()
{
    int a[4];
    for (int i = 0; i < 4; i++)
        cin >> a[i];
    sort(a, a + 3);
    int z = 0, y = 0;
    if (a[1] - a[0] < a[3])
    {
        z = a[3] - (a[1] - a[0]);
    }
    if (a[2] - a[1] < a[3])
    {
        y = a[3] - (a[2] - a[1]);
    }
    cout << z + y << endl;
}
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t = 1;
    while (t--)
        solve();
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string.h>
#include <string>
using namespace std;
string a, b;
int main()
{
    int n;
    cin >> n;
    while (n--)
    {
        int t1 = 0;
        cin >> a >> b;
        int i, j;
        if (a.length() > b.length())
            t1 = 1;
        else
        {
            for (i = 0, j = 0; i < b.length(), j < b.length(); j++, i++)
            {
                if (a[i] != b[j])
                {
                    if (i == 0)
                    {
                        t1 = 1;
                        break;
                    }
                    else
                    {
                        if (b[j] == b[j - 1])
                            i--;
                        else
                        {
                            t1 = 1;
                            break;
                        }
                    }
                }
            }
        }
        if (t1 == 0 && i == a.length())
            cout << ""YES"" << endl;
        else
            cout << ""NO"" << endl;
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin >> n;
    getchar();
    while (n--)
    {
        string s1, s2;
        getline(cin, s1);
        getline(cin, s2);
        set<char> t1, t2;
        for (int i = 0; i < s1.size(); i++)
        {
            t1.insert(s1[i]);
        }
        for (int i = 0; i < s2.size(); i++)
        {
            t2.insert(s2[i]);
        }
        char temp = s1[s1.size() - 1];
        if (s1.size() > s2.size() || s1[0] != s2[0] || s1[s1.size() - 1] != s2[s2.size() - 1]
            || t1 != t2)
        {
            cout << ""NO"" << endl;
            continue;
        }
        else
        {
            char t;
            int num = 0;
            for (int i = 0; i < s1.size(); i++)
            {
                int q = s2.find_first_of(s1[i]);
                for (int k = 0; k < q; k++)
                {
                    if (t != s2[k])
                    {
                        num = 1;
                        break;
                    }
                }
                if (num == 1)
                    break;
                if (q != -1)
                {
                    t = s1[i];
                    s1.erase(i, 1);
                    i--;
                    s2.erase(s2.begin(), s2.begin() + q + 1);
                }
            }
            for (int k = 0; k < s2.size(); k++)
            {
                if (s2[k] != temp)
                {
                    num = 1;
                    break;
                }
            }
            if (s1.empty() && num == 0)
                cout << ""YES"" << endl;
            else
                cout << ""NO"" << endl;
        }
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// Problem: D. Extra Element
// Contest: Codeforces - Codeforces Round #568 (Div. 2)
// URL: https://codeforces.com/contest/1185/problem/D
// Memory Limit: 256 MB
// Time Limit: 2000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <bits/stdc++.h>
using namespace std;
//#define int long long int
//#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL);

#include <bits/stdc++.h>
using namespace std;
#define ll long long int


int32_t main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int a;
    cin >> a;
    vector<pair<int, int>> b(a);
    for (ll i = 0; i < a; i++)
    {
        int t;
        cin >> t;
        b[i] = { t, i };
    }
    sort(b.begin(), b.end());
    vector<int> fir(a - 1);
    for (ll i = 1; i < a; i++)
    {
        fir[i - 1] = b[i].first - b[i - 1].first;
    }
    bool f = true;
    for (ll i = 2; i < a - 1; i++)
    {
        f = f & (fir[i] == fir[1]);
    }
    if (f)
    {
        cout << b[0].second + 1;
        return 0;
    }
    f = true;
    for (ll i = 2; i < a - 1; i++)
    {
        f = f & (fir[i] == (b[2].first - b[0].first));
    }
    if (f)
    {
        cout << b[1].second + 1;
        return 0;
    }
    int ans;
    f = false;
    for (ll i = 1; i < a - 1; i++)
    {
        if (fir[i] == fir[0])
            continue;
        if (f)
        {
            cout << -1;
            return 0;
        }
        else
        {
            if (i == a - 2)
            {
                cout << b[a - 1].second + 1;
                return 0;
            }
            else
            {
                if (b[i + 2].first - b[i].first == fir[0])
                {
                    ans = b[i + 1].second;
                    f = true;
                    i++;
                }
                else
                {
                    cout << -1;
                    return 0;
                }
            }
        }
    }
    if (f)
    {
        cout << ans + 1;
    }
    else
    {
        cout << b[a - 1].second + 1;
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/list_update_policy.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;

#define sf scanf
#define pf printf
#define endll printf(""\n"");
#define endl ""\n"";

const ld PI = 3.14159265358979323846264338327950288;

int main()
{

#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif

    int n, m;
    scanf(""%d %d"", &n, &m);
    vector<int> times(n);
    for (int& v : times)
    {
        scanf(""%d"", &v);
    }
    for (int i = 0; i < n; ++i)
    {
        int sum = 0;
        vector<int> sliced(i);
        for (int j = 0; j <= i; ++j)
        {
            sum += times[j];
            if (j < i)
            {
                sliced[j] = times[j];
            }
        }
        if (sum <= m)
        {
            printf(""0 "");
        }
        else
        {
            sort(sliced.rbegin(), sliced.rend());
            int ans = 0;
            for (int v : sliced)
            {
                sum -= v;
                ans++;
                if (sum <= m)
                {
                    printf(""%d "", ans);
                    break;
                }
            }
        }
        // if (sum <= m) {
        //     printf(""0 "");
        // } else {
        //     vector<int> sliced (i);
        //     copy(times.begin(), times.begin() + i, sliced.begin());
        //     sort(sliced.rbegin(), sliced.rend());
        //     int ans = 0;
        //     for (int v: sliced) {
        //         sum -= v;
        //         ans++;
        //         if (sum <= m) {
        //             printf(""%d "", ans);
        //             break;
        //         }
        //     }
        // }
    }

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
using namespace std;
#define sim template <class c
#define ris return *this
#define dor > debug& operator<<
#define eni(x)                                                                                     \
    sim > typename enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i)                   \
    {
sim > struct rge
{
    c b, e;
};
sim > rge<c> range(c i, c j)
{
    return rge<c>{ i, j };
}
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug
{
#ifdef LOCAL
    ~debug()
    {
        cerr << endl;
    }
    eni(!= ) cerr << boolalpha << i;
    ris;
} eni(== ) ris << range(begin(i), end(i));
}
sim, class b dor(pair<b, c> d)
{
    ris << ""("" << d.first << "", "" << d.second << "")"";
}
sim dor(rge<c> d)
{
    *this << ""["";
    for (auto it = d.b; it != d.e; ++it)
        *this << "", "" + 2 * (it == d.b) << *it;
    ris << ""]"";
}
#else
    sim dor(const c&)
    {
        ris;
    }
#endif
}
;
#define imie(...) "" ["" << #__VA_ARGS__ "": "" << (__VA_ARGS__) << ""] ""

void solve()
{
    string a, b;
    cin >> a >> b;
    int n = (int)a.size(), m = (int)b.size();
    for (int i = 0, j = 0; i < n;)
    {
        int p = i, q = j;
        for (; p < n && a[i] == a[p]; ++p)
            ;
        for (; j < m && a[i] != b[j]; ++j)
            ;
        for (; q < m && a[i] == b[q]; ++q)
            ;
        if (p - i > q - j)
        {
            cout << ""NO\n"";
            return;
        }
        i = p;
        j = q;
        if (i == n && j < m)
        {
            cout << ""NO\n"";
            return;
        }
    }
    cout << ""YES\n"";
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int tt = 1;
    cin >> tt;
    while (tt--)
    {
        solve();
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define all(cont) cont.begin(), cont.end()
typedef long long ll;
typedef pair<int, int> pii;
const ll N = 50005;
const ll mod = (1e9) + 7;
ll gcd(ll a, ll b)
{
    return ((b == 0) ? a : gcd(b, a % b));
}
void solve()
{
    ll n, m, i, num, ans, sum = 0;
    cin >> n >> m;
    priority_queue<ll> pq1, pq2;
    for (i = 1; i <= n; i++)
    {
        cin >> num;
        sum += num;
        ll curr = sum;
        pq2 = pq1;
        ans = 0;
        if (sum > m)
            while (!pq1.empty())
            {
                ans++;
                if (curr - pq1.top() <= m)
                    break;
                curr -= pq1.top();
                pq1.pop();
            }
        cout << ans << "" "";
        pq1 = pq2;
        pq1.push(num);
    }
}
int main()
{
    // Fast I/O
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
// Files
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ll t = 1;
    // cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define fastread() (ios::sync_with_stdio(false), cin.tie(NULL));
#define endl ""\n""
#define int long long
using namespace std;

int32_t main()
{
    fastread() int arr[4];
    double start = clock();
    cin >> arr[0] >> arr[1] >> arr[2] >> arr[3];
    std::sort(arr, arr + 3);
    int ans = 0;
    int diff = arr[1] - arr[0];
    if (diff < arr[3])
        ans += (arr[3] - diff);
    diff = arr[2] - arr[1];
    if (diff < arr[3])
        ans += (arr[3] - diff);
    cout << ans << endl;
    cerr << ""[*] Time: "" << (clock() - start) * 1.0 / CLOCKS_PER_SEC << std::setprecision(3) << "" s""
         << endl;
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ar array
#define ll long long
#define debug1(x) cout << #x << "" "" << x << endl;
#define debug2(x, y) cout << #x << "" "" << x << "" "" << #y << "" "" << y << endl;
#define debug3(x, y, z)                                                                            \
    cout << #x << "" "" << x << "" "" << #y << "" "" << y << "" "" << #z << "" "" << z << endl;
const int MAX_N = 1e5 + 1;
int MOD = 1e9 + 7;
const int INF = 1e9;
const ll LINF = 1e18;
template <typename T>
class manage_multiset
{
private:
    multiset<T> ms;

public:
    manage_multiset()
    {
    }
    manage_multiset(vector<T>& a)
    {
        int n = a.size();
        for (int i = 0; i < n; ++i)
        {
            ms.insert(a[i]);
        }
    }
    T get_min()
    {
        return *ms.begin();
    }
    T get_max()
    {
        auto it = ms.end();
        it--;
        return *it;
    }
    int sz()
    {
        return ms.size();
    }
    void in(T x)
    {
        ms.insert(x);
    }
    void out(T x)
    {
        ms.erase(ms.find(x));
    }
    void out_max()
    {
        auto it = ms.end();
        it--;
        if (ms.size() > 0)
            ms.erase(it);
    }
    void out_min()
    {
        ms.erase(ms.begin());
    }
    bool there(T x)
    {
        if (ms.find(x) == ms.end())
            return false;
        else
            return true;
    }
    int number_of_distinct()
    {
        // 1 is all are same, 0 if not
        T x = (*ms.begin());
        if (ms.upper_bound(x) == ms.end())
            return 1;
        else
            return 2;
    }
};
void solve()
{
    int n;
    cin >> n;
    vector<ll> a(n);
    manage_multiset<ll> s;
    map<ll, int> inv;
    for (int i = 0; i < n; ++i)
    {
        cin >> a[i];
        inv[a[i]] = i + 1;
    }
    sort(a.begin(), a.end());
    for (int i = 1; i < n; ++i)
    {
        // a[i]-a[i-1]
        s.in(a[i] - a[i - 1]);
    }
    for (int i = 0; i < n; ++i)
    {
        // delete a[i]
        if (i == 0)
        {
            // delete a[1]-a[0]
            s.out(a[1] - a[0]);
            if (s.number_of_distinct() == 1)
            {
                cout << inv[a[i]] << endl;
                return;
            }
            s.in(a[1] - a[0]);
        }
        else if (i == n - 1)
        {
            // delete a[n-1]-a[n-2];
            s.out(a[n - 1] - a[n - 2]);
            if (s.number_of_distinct() == 1)
            {
                cout << inv[a[i]] << endl;
                return;
            }
            s.in(a[n - 1] - a[n - 2]);
        }
        else
        {
            s.out(a[i] - a[i - 1]);
            s.out(a[i + 1] - a[i]);
            s.in(a[i + 1] - a[i - 1]);
            if (s.number_of_distinct() == 1)
            {
                cout << inv[a[i]] << endl;
                return;
            }
            s.in(a[i] - a[i - 1]);
            s.in(a[i + 1] - a[i]);
            s.out(a[i + 1] - a[i - 1]);
        }
    }
    cout << -1 << endl;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
#ifndef ONLINE_JUDGE
    freopen(""input1.txt"", ""r"", stdin);
    freopen(""output1.txt"", ""w"", stdout);
#endif
    int t = 1;
    // cin >> t;
    for (int i = 0; i < t; ++i)
    {
        solve();
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{

    int a[3], d;
    cin >> a[0] >> a[1] >> a[2] >> d;

    sort(a, a + 3);

    int sum = 0;
    if (a[1] - a[0] < d)
    {
        sum += d - (a[1] - a[0]);
    }
    if (a[2] - a[1] < d)
    {
        sum += d - (a[2] - a[1]);
    }

    cout << sum << endl;

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int t, n, m;
int mnx[256];
int mxx[256];
int mny[256];
int mxy[256];
string ar[2005];

int main()
{
    cin >> t;
    while (t--)
    {
        int cnt = 0;
        vector<int> ans;
        cin >> n >> m;
        bool flag = 1;
        for (int i = 0; i < n; i++)
        {
            cin >> ar[i];
        }
        for (int i = 'a'; i <= 'z'; i++)
        {
            mnx[i] = mny[i] = mxx[i] = mxy[i] = -1;
        }
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                if (mnx[ar[i][j]] == -1)
                {
                    mnx[ar[i][j]] = j;
                    mxx[ar[i][j]] = j;
                    mny[ar[i][j]] = i;
                    mxy[ar[i][j]] = i;
                }
                else
                {
                    mnx[ar[i][j]] = min(mnx[ar[i][j]], j);
                    mxx[ar[i][j]] = max(mxx[ar[i][j]], j);
                    mny[ar[i][j]] = min(mny[ar[i][j]], i);
                    mxy[ar[i][j]] = max(mxy[ar[i][j]], i);
                }
            }
        }
        for (int i = 'a'; i <= 'z'; i++)
        {
            if (mnx[i] != mxx[i] && mny[i] != mxy[i])
                flag = 0;
        }
        if (!flag)
        {
            cout << ""NO\n"";
            continue;
        }
        for (int i = 'z'; i >= 'a'; i--)
        {
            if (mnx[i] == -1)
                continue;
            if (mnx[i] != mxx[i])
            {
                for (int j = mnx[i]; j <= mxx[i]; j++)
                {
                    if (ar[mny[i]][j] != (char)i && ar[mny[i]][j] != '*')
                        flag = 0;
                    ar[mny[i]][j] = '*';
                }
            }
            else
            {
                for (int j = mny[i]; j <= mxy[i]; j++)
                {
                    if (ar[j][mnx[i]] != (char)i && ar[j][mnx[i]] != '*')
                        flag = 0;
                    ar[j][mnx[i]] = '*';
                }
            }
        }
        if (!flag)
        {
            cout << ""NO\n"";
            continue;
        }
        cout << ""YES\n"";
        char last = '*';
        for (int i = 'z'; i >= 'a'; i--)
        {
            if (mnx[i] == -1 && last == '*')
                continue;
            if (mnx[i] != -1)
            {
                last = i;
            }
            ans.push_back(mxx[last] + 1);
            ans.push_back(mxy[last] + 1);
            ans.push_back(mnx[last] + 1);
            ans.push_back(mny[last] + 1);
            cnt++;
        }
        cout << cnt << '\n';
        for (int i = 0; i < ans.size(); i++)
        {
            cout << ans[ans.size() - 1 - i] << ""\n   ""[(i + 1) % 4];
        }
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int lli;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    lli n, t;
    cin >> t;
    while (t--)
    {
        string a, b;
        cin >> a >> b;

        n = a.size();
        lli m = b.size();

        if (a[0] != b[0])
        {
            cout << ""NO\n"";
            continue;
        }

        bool flag = 1;
        int ind1 = 0, ind2 = 0;


        while (ind1 < n && ind2 < m)
        {
            lli temp1 = 1, temp2 = 1;

            if (a[ind1] != b[ind2])
            {
                flag = 0;
                break;
            }

            while (ind1 < n - 1 && a[ind1] == a[ind1 + 1])
                ind1++, temp1++;

            while (ind2 < m - 1 && b[ind2] == b[ind2 + 1])
                ind2++, temp2++;

            if (temp2 < temp1)
            {
                flag = 0;
                break;
            }

            ind1++;
            ind2++;
        }

        if (!flag || ind1 < n || ind2 < m)
            cout << ""NO\n"";
        else
            cout << ""YES\n"";
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define pb push_back
#define pi (acos(-1.0))

#define fff                                                                                        \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(0);                                                                                    \
    cout.tie(0)

using namespace std;


int main()
{

    fff;

    int t;
    cin >> t;

    for (int tc = 1; tc <= t; ++tc)
    {

        string a, b;
        cin >> a >> b;

        if (a[0] != b[0])
        {
            cout << ""NO\n"";

            continue;
        }

        bool h = 0;

        int i = 1, j = 1;
        while (b[j] != '\0')
        {
            if (a[i] == b[j])
            {
                i++;
                j++;
            }


            else if (b[j] == a[i - 1])
            {
                j++;
            }

            else
            {
                cout << ""NO\n"";
                h = 1;
                break;
            }
        }

        if (h)
        {
            continue;
        }

        if (a[i] == '\0')
        {
            cout << ""YES\n"";
        }

        else
            cout << ""NO\n"";
    }

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
typedef long long int ll;
using namespace std;

static int g;

int main()
{
    ll t, n;
    cin >> t;
read:
    while (t--)
    {
        bool b = 1;
        string s1, s2;
        cin >> s1 >> s2;
        ll l1 = s1.length();
        ll l2 = s2.length();
        ll p1 = 0, p2 = 0;

        if (l1 > l2)
        {
            cout << ""NO\n"";
            goto read;
        }
        else if (s1[0] != s2[0])
        {
            cout << ""NO\n"";
            goto read;
        }

        while (p1 < l1 && p2 < l2)
        {
            if (s1[p1] == s2[p2])
            {
                p1++;
                p2++;
            }
            else if (s1[p1] != s2[p2] && s2[p2] != s2[p2 - 1])
            {
                b = 0;
                break;
            }
            else
            {
                while (p2 < l2 && s2[p2] == s2[p2 - 1])
                {
                    p2++;
                }
            }
        }
        if (b == 0)
        {
            cout << ""NO\n"";
            goto read;
        }
        if (b)
        {
            while (p2 < l2 && s2[p2] == s2[p2 - 1])
            {
                p2++;
            }
        }
        if (b == 1 && p2 == l2 && p1 == l1)
        {
            cout << ""YES\n"";
        }
        else
            cout << ""NO\n"";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> q;

int main(void)
{
    int n, s;
    cin >> n >> s;
    for (int i = 0; i < n; i++)
    {
        int t;
        cin >> t;
        q.push_back(t);
    };

    cout << 0 << ' ';
    for (int i = 1; i < n; i++)
    {
        int cur = s - q[i];
        sort(q.begin(), q.begin() + i);
        bool flag = true;
        for (int j = 0; j < i; j++)
        {
            if ((cur -= q[j]) < 0)
            {
                cout << i - j << ' ';
                flag = false;
                break;
            }; // WARNING
        }
        if (flag)
            cout << 0 << ' ';
    }

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string s1, s2;
        cin >> s1 >> s2;
        int i, j;
        for (i = 0, j = 0; s2[j]; j++)
        {
            if (s1[i] == s2[j])
                i++;
            else if (s2[j] != s2[j - 1])
                break;
        }
        if (s2[j] == '\0' && s1[i] == '\0')
            cout << ""YES""
                 << ""\n"";
        else
            cout << ""NO""
                 << ""\n"";
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstdio>
#include <cmath>
#include <iomanip>
#include <algorithm>
#define long long ll;
#define inf 0x3f3f3f3f
using namespace std;
#define long long ll;
const int MOD = int(1e9) + 7;
using namespace std;
int n, m, t;
int i, j, k, l;
int ans, sum, num, cnt;
char a[1000010];
char b[1000010];
int main()
{
    scanf(""%d"", &n);
    getchar();
    while (n--)
    {
        gets(a);
        gets(b);
        int len1 = strlen(a);
        int len2 = strlen(b);
        cnt = 0;
        if (len2 < len1 || a[len1 - 1] != b[len2 - 1] || a[0] != b[0])
        {
            printf(""NO\n"");
            continue;
        }
        bool flag = 1;
        j = 0;
        for (i = 0; i < len1; i++)
        {
            bool flag1 = 0;
            if (a[i] == a[i + 1])
            {
                cnt++;
                continue;
            }
            if (b[j] == a[i])
            {
                flag1 = 1;
                for (; j < len2; j++)
                {
                    if (b[j] == b[j + 1])
                    {
                        cnt--;
                    }
                    else
                    {
                        j++;
                        break;
                    }
                }
            }
            if (cnt > 0 || flag1 == 0)
            {
                flag = 0;
                break;
            }
            cnt = 0;
        }
        if (flag == 1 && j == len2)
            printf(""YES\n"");
        else
            printf(""NO\n"");
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin >> n;
    getchar();
    while (n--)
    {
        string s1, s2;
        getline(cin, s1);
        getline(cin, s2);
        if (s1.size() > s2.size() || s1[0] != s2[0])
        {
            cout << ""NO"" << endl;
            continue;
        }
        else
        {
            for (int i = 0; i < s1.size(); i++)
            {
                int q = s2.find_first_of(s1[i]);
                if (q != -1)
                {
                    s1.erase(i, 1);
                    i--;
                    s2.erase(s2.begin(), s2.begin() + q);
                }
            }
            if (s1.empty())
                cout << ""YES"" << endl;
            else
                cout << ""NO"" << endl;
        }
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <algorithm>
#include <vector>
#include <string>
#define ll long long
#define IO                                                                                         \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL)
#define lb lower_bound
#define ub upper_bound
#define pb push_back
#define lcm(a, b) ((a) * (b) / __gcd(a, b))
#define mem(a, b) memset(a, b, sizeof(a))
#define mod 1000000007
#define ff first
#define ss second
using namespace std;

//   cout<<fixed<<setprecision(15)<<ans<<endl;
//   log2(n) --->  position of most significant bit of n
/*
 void binary_gives_array(ll smallbin[], ll x){
    ll i=0;
    ll store[32]={0};
    while(x>0){
        store[i]=x%2;
        x=x/2;
        i++;
    }
    for(i=0;i<32;i++){
        smallbin[i]=store[32-i-1];
    }
}
*/

/*
vector<ll>v;
void PrimeFactors(ll n) {
   while (n%2 == 0){
      v.pb(2);
      n = n/2;
   }
   for (ll i = 3; i <= sqrt(n); i = i+2){
      while (n%i == 0){
         v.pb(i);
         n = n/i;
      }
   }
   if (n > 2)
   v.pb(2);
}
*/

ll factorial(ll n)
{
    if (n == 0)
        return 1;
    return (n % mod * factorial(n - 1) % mod) % mod;
}

ll power(ll a, ll b)
{
    ll x = 1, y = a;
    while (b > 0)
    {
        if (b % 2)
        {
            x = (x * y) % mod;
        }
        y = (y * y) % mod;
        b /= 2;
    }
    return x % mod;
}

ll modular_inverse(ll n)
{
    return power(n, mod - 2);
}

ll ncr(ll n, ll k)
{
    ll b = (factorial(k) % mod * factorial(n - k) % mod) % mod;
    return (factorial(n) % mod * modular_inverse(b) % mod);
}

ll subset_sum(ll arr[], ll n, ll sum)
{
    bool t[n + 1][sum + 1];
    ll i, j;
    for (i = 0; i < n + 1; i++)
    {
        for (j = 0; j < sum + 1; j++)
        {
            if (j == 0)
                t[i][j] = true;
            if (i == 0)
                t[i][j] = false;
        }
    }
    for (i = 1; i < n + 1; i++)
    {
        for (j = 1; j < sum + 1; j++)
        {
            if (arr[i - 1] <= j)
                t[i][j] = t[i - 1][j - arr[i - 1]] || t[i - 1][j];
            else
                t[i][j] = t[i - 1][j];
        }
    }
    return t[n][sum];
}

ll is_prime(ll n)
{
    for (ll i = 2; i * i <= n; i++)
    {
        if (n % i == 0)
            return 0;
    }
    return 1;
}

int main()
{
    IO;
    ll t, n, m, i, j;
    t = 1;
    while (t--)
    {
        cin >> n >> m;
        vector<ll> v(n);
        for (i = 0; i < n; i++)
        {
            cin >> v[i];
        }
        ll sum = 0;
        for (i = 0; i < n; i++)
        {
            sum += v[i];
            if (sum <= m)
                cout << 0 << "" "";
            else
            {
                vector<ll> v1;
                for (j = 0; j < i; j++)
                {
                    v1.pb(v[j]);
                }
                sort(v1.begin(), v1.end());
                ll sum1 = sum, ans = 0;
                ll p = v1.size() - 1;
                while (sum1 > m)
                {
                    sum1 -= v1[p];
                    p--;
                    ans++;
                }
                cout << ans << "" "";
            }
        }
        cout << endl;
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define debug(...) fprintf(stderr, __VA_ARGS__)
#define __FILE(x)                                                                                  \
    freopen(#x "".in"", ""r"", stdin);                                                                 \
    freopen(#x "".out"", ""w"", stdout)
#define LL long long

const int MX = 4e5 + 23;
const LL MOD = 998244353;

int read()
{
    char k = getchar();
    int x = 0;
    while (k < '0' || k > '9')
        k = getchar();
    while (k >= '0' && k <= '9')
        x = x * 10 + k - '0', k = getchar();
    return x;
}

LL cost[20][1 << 20];
//  1 << 20  i 

int n, app[21], c[MX], sum[1 << 20];
LL dp[1 << 20], con[20][20];

int main()
{
    n = read();
    for (int i = 1; i <= n; ++i)
    {
        c[i] = read();
        app[c[i]] = 1;
    }
    int cnt = 0;
    for (int i = 1; i <= 20; ++i)
    {
        if (!app[i])
            continue;
        for (int j = 1; j <= n; ++j)
            if (c[j] == i)
                c[j] = cnt, sum[1 << cnt]++;
        ++cnt;
    }


    for (int i = 0; i < cnt; ++i)
    {
        int fuck[21];
        memset(fuck, 0, sizeof fuck);
        for (int j = 1; j <= n; ++j)
        {
            if (c[j] == i)
            {
                for (int k = 0; k < cnt; ++k)
                {
                    cost[i][1 << k] += fuck[k];
                }
                continue;
            }
            ++fuck[c[j]];
        }
    }
    for (int i = 1; i < (1 << cnt); ++i)
    {
        int lb = i & -i;
        if (i == lb)
            continue;
        sum[i] = sum[i ^ lb] + sum[lb];
        for (int j = 0; j < cnt; ++j)
        {
            cost[j][i] = cost[j][i ^ lb] + cost[j][lb];
        }
    }
    int U = (1 << cnt) - 1;
    dp[0] = 0;
    for (int i = 1; i < (1 << cnt); ++i)
    {
        dp[i] = 1LL << 50;
        for (int j = 0; j < cnt; ++j)
        {
            if ((i >> j) & 1)
            {
                int st = i ^ (1 << j);
                dp[i] = std::min(dp[i], dp[st] + cost[j][U ^ i]);
            }
        }
        // debug(""dp[%d] = %lld\n"" ,i ,dp[i]);
    }
    printf(""%lld\n"", dp[(1 << cnt) - 1]);
    return 0;
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define int long long

const int N = 400005;
const int M = 25;

int g[M][M], f[N * 6], n, c[N];
// $f[s]$  s 
//  i  j 
// q p x  p y  q  x  y 

signed main()
{
    ios::sync_with_stdio(false);
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> c[i];
        --c[i];
    }
    for (int i = 0; i < 20; i++)
        for (int j = 0; j < 20; j++)
        {
            int sum = 0;
            for (int k = 1; k <= n; k++)
            {
                if (c[k] == i)
                    ++sum;
                if (c[k] == j)
                    g[i][j] += sum;
            }
        }
    memset(f, 0x3f, sizeof f);
    f[0] = 0;
    for (int s = 0; s < 1 << 20; s++)
    {
        for (int i = 0; i < 20; i++)
            if ((~s) & (1 << i))
            {
                int t = s | (1 << i);
                int delta = 0;
                for (int j = 0; j < 20; j++)
                    if (s & (1 << j))
                    {
                        delta += g[i][j];
                    }
                f[t] = min(f[t], f[s] + delta);
            }
    }

    cout << f[(1 << 20) - 1] << endl;
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define eb emplace_back
#define mk make_pair
#define fi first
#define se second
#define mset(a, b) memset(a, b, sizeof(a))
using ll = long long;
using pii = pair<int, int>;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
template <class Ty>
Ty randint(Ty a, Ty b)
{
    return uniform_int_distribution<Ty>(a, b)(rng);
}

template <class T>
void DBG(T&& x)
{
    cerr << x << "" "";
}
template <class T, class... Args>
void DBG(T&& x, Args&&... args)
{
    DBG(x);
    DBG(args...);
}
#define DBG(...)                                                                                   \
    {                                                                                              \
        cerr << ""["" << #__VA_ARGS__ << ""]: "";                                                      \
        DBG(__VA_ARGS__);                                                                          \
        cerr << endl;                                                                              \
    }
template <class num>
inline void rd(num& x)
{
    cin >> x;
}
template <class Ty, class... Args>
inline void rd(Ty& x, Args&... args)
{
    rd(x);
    rd(args...);
}
template <class num>
inline void print(num&& x)
{
    cout << x;
}
template <class Ty, class... Args>
inline void print(Ty&& x, Args&&... args)
{
    print(x);
    print(' ');
    print(args...);
}
#define print(...) print(__VA_ARGS__), print('\n')

const int N = 20;

ll k[N];
ll spos[N];
ll cpos[N][N];
ll memo[1 << N];

inline ll choose(int mask, int c)
{
    ll l = 0, ans = spos[c];
    for (int b = 0; b < N; b++)
        if (mask & (1 << b))
            ans += cpos[c][b], l += k[b];
    ans = ans - k[c] * l - k[c] * (k[c] - 1) / 2;
    return ans;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int n;
    rd(n);
    vector<int> a(n);
    for (int i = 0; i < n; i++)
        rd(a[i]), a[i]--;

    for (int i = n - 1; i >= 0; i--)
    {
        for (int c = 0; c < N; c++)
            cpos[a[i]][c] += k[c];
        k[a[i]]++;
        spos[a[i]] += i;
    }

    for (int mask = (1 << N) - 2; mask >= 0; mask--)
    {
        ll& ret = memo[mask];
        ret = 1e18;
        for (int i = 0; i < N; i++)
            if ((mask & (1 << i)) == 0)
                ret = min(ret, choose(mask, i) + memo[mask | (1 << i)]);
    }

    print(memo[0]);
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <stdio.h>
#include <algorithm>
#include <limits.h>
#define MAXBIT 21

long long int count[MAXBIT], sum[MAXBIT][MAXBIT], dp[1 << MAXBIT];

int main(void)
{
    int n;
    scanf(""%d"", &n);

    for (int i = 0; i < n; i++)
    {
        int tmp;
        scanf(""%d"", &tmp);
        count[--tmp]++;
        for (int j = 0; j < MAXBIT - 1; j++)
            sum[j][tmp] += count[j];
    }

    for (int i = 1; i < (1 << (MAXBIT - 1)); i++)
    {
        dp[i] = LLONG_MAX;
        for (int j = 0; j < MAXBIT - 1; j++)
        {
            if (!((i >> j) & 1))
                continue;

            long long int cur = i ^ (1 << j), toAdd = 0;
            for (int k = 0; k < MAXBIT - 1; k++)
                if ((cur >> k) & 1)
                    toAdd += sum[k][j];

            dp[i] = std::min(dp[i], dp[cur] + toAdd);
        }
    }

    printf(""%lld"", dp[(1 << (MAXBIT - 1)) - 1]);
    return 0;
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
using namespace std;

int n;
int a[400000];
int pref[400000][20];
int cnt[20][20];
int dp[1 << 20];

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i], a[i]--;
    for (int i = 0; i < (1 << 20); i++)
        dp[i] = 1e18 + 7;
    pref[0][a[0]] = 1;
    for (int i = 1; i < n; i++)
    {
        pref[i][a[i]]++;
        for (int cl = 0; cl < 20; cl++)
        {
            pref[i][cl] += pref[i - 1][cl];
        }
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < 20; j++)
        {
            cnt[a[i]][j] += pref[i][j];
        }
    }

    dp[0] = 0;
    for (int mask = 0; mask < (1 << 20); mask++)
    {
        for (int j = 0; j < 20; j++)
        {
            if ((1 << j) & mask)
                continue;
            int need = 0;
            for (int cl = 0; cl < 20; cl++)
            {
                if (((1 << cl) & mask) || cl == j)
                    continue;
                need += cnt[j][cl];
            }
            dp[mask ^ (1 << j)] = min(dp[mask ^ (1 << j)], dp[mask] + need);
        }
    }
    cout << dp[(1 << 20) - 1];
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define long long long int

#define pii pair<int, int>
#define pll pair<long, long>
#define fst first
#define snd second

#define all(ds) (ds).begin(), (ds).end()
#define size(ds) (int)(ds).size()

#define pq priority_queue
#define vi vector<int>
#define pb push_back
#define lb lower_bound
#define ub upper_bound

const long INF = 1e18;
const int MAX = 4e5 + 5;

vi indices[25];
set<int> colors;

long memo[1 << 20];
long front[25][25];

long swaps(int used = 0)
{
    int aux = 0;
    for (int i = 0; i < 20; i++)
        if (used & (1 << i))
            aux++;

    if (aux == size(colors))
        return 0LL;

    long& ans = memo[used];
    if (~ans)
        return ans;

    ans = INF;
    for (auto c : colors)
    {
        if (!(used & (1 << c)))
        {
            long sum = 0LL;
            for (auto d : colors)
                if (used & (1 << d))
                {
                    if (front[c][d] == -1)
                    {
                        front[c][d] = 0LL;
                        for (auto i : indices[c])
                        {
                            int left = upper_bound(all(indices[d]), i) - indices[d].begin();
                            front[c][d] += size(indices[d]) - left;
                        }
                    }

                    sum += front[c][d];
                }

            ans = min(ans, sum + swaps(used | (1 << c)));
        }
    }

    return ans;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        int a;
        cin >> a;
        indices[a - 1].pb(i);
        colors.insert(a - 1);
    }

    memset(memo, -1, sizeof memo);
    memset(front, -1, sizeof front);

    long ans = swaps();
    cout << ans << ""\n"";
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long double ld;
typedef long long ll;
#define int long long

const int N = 400000;
const int K = 20;
const int INF = (int)1e18;
int n, a[N], before[K], cnt[K][K], dp[1 << K]; /// cnt[i][j] = how many j's are before the i's
/// so if i comes before j, we must pay cnt[i][j]

signed main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        a[i]--;
    }
    for (int i = 0; i < n; i++)
    {
        before[a[i]]++;
        for (int j = 0; j < K; j++)
            cnt[a[i]][j] += before[j];
    }
    for (int mask = 1; mask < (1 << K); mask++)
        dp[mask] = INF;
    for (int mask = 0; mask < (1 << K); mask++)
    {
        assert(dp[mask] != INF);
        for (int j = 0; j < K; j++)
            if (!(mask & (1 << j)))
            {
                int cost = dp[mask];
                for (int bit = 0; bit < K; bit++)
                    if (mask & (1 << bit))
                        cost += cnt[bit][j];
                dp[mask + (1 << j)] = min(dp[mask + (1 << j)], cost);
            }
    }
    cout << dp[(1 << K) - 1] << ""\n"";
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits\stdc++.h>
using namespace std;
typedef long long ll;
#define maxn 400005
int f[maxn];
int a[50];
int num[50];
#define INF 0x3f3f3f3f
vector<int> vec;

ll dp[(1 << 20) + 100];

ll g[25][25];

vector<int> d[25];

int main()
{
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> f[i];
    for (int i = 1; i <= n; i++)
        vec.push_back(f[i]);
    sort(vec.begin(), vec.end());
    vec.erase(unique(vec.begin(), vec.end()), vec.end());
    for (int i = 1; i <= n; i++)
    {
        f[i] = lower_bound(vec.begin(), vec.end(), f[i]) - vec.begin();
        d[f[i]].push_back(i);
    }
    n = vec.size();
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (j != i)
            {
                int pos = -1;
                for (int k = 0; k < d[i].size(); k++)
                {
                    while (pos + 1 < d[j].size() && d[j][pos + 1] < d[i][k])
                        pos++;
                    g[i][j] += pos + 1;
                }
            }
            // cout << i << ""   "" << j << ""   "" << g[i][j] << endl;
        }
    }
    dp[0] = 0;
    for (int i = 1; i < (1 << n); i++)
    {
        dp[i] = 1e18;
        int b = 0;
        for (int j = 0; j < n; j++)
        {
            ll ans = 0;
            if (i & (1 << j))
            {
                for (int k = 0; k < n; k++)
                {
                    if (i & (1 << k))
                        ans += g[j][k];
                }
                // cout << (i ^ (1 << j)) << ""   "" << i << ""   "" << ans << endl;
                dp[i] = min(ans + dp[i ^ (1 << j)], dp[i]);
            }
        }
    }
    cout << dp[(1 << n) - 1] << endl;
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;


const long long INF = 1000 * 1000 * 1000 * 1ll * 1000 * 1000 * 1000;
const int M = 21;
ll dp[1 << M];
ll cnt[M][M];
vector<int> col[M];

int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif

    int n;
    cin >> n;
    for (int i = 0; i < n; ++i)
    {
        int x;
        cin >> x;
        --x;
        col[x].push_back(i);
    }
    for (int i = 0; i < 20; ++i)
    {
        for (int j = 0; j < 20; ++j)
        {
            if (i == j)
                continue;
            if ((int)col[i].size() == 0 || (int)col[j].size() == 0)
                continue;
            int pos2 = 0;
            for (int pos1 = 0; pos1 < (int)col[i].size(); ++pos1)
            {
                while (true)
                {
                    if (pos2 == (int)col[j].size() - 1 || col[j][pos2 + 1] > col[i][pos1])
                    {
                        break;
                    }
                    ++pos2;
                }
                if (col[i][pos1] > col[j][pos2])
                {
                    cnt[i][j] += pos2 + 1;
                }
            }
        }
    }
    for (int msk = 0; msk < (1 << 20); ++msk)
    {
        dp[msk] = INF;
    }
    dp[0] = 0;
    for (int msk = 0; msk < (1 << 20); ++msk)
    {
        vector<int> v;
        for (int i = 0; i < 20; ++i)
        {
            if (msk & (1 << i))
                v.push_back(i);
        }
        for (int i = 0; i < 20; ++i)
        {
            if (msk & (1 << i))
                continue;
            ll sum = 0;
            for (int j = 0; j < (int)v.size(); ++j)
            {
                sum += cnt[v[j]][i];
            }
            int nmsk = msk | (1 << i);
            dp[nmsk] = min(dp[nmsk], dp[msk] + sum);
        }
    }
    cout << dp[(1 << 20) - 1] << endl;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define pb push_back
#define ll long long
using namespace std;


ll t1[25][25];
ll dp[(1 << 20) + 5];

vector<int> v[25];
vector<int> kol;
int n, a;

void prep()
{
    for (int i = 1; i < (1 << 20); i++)
        dp[i] = 1000000000000000009LL;
    int pom = 1;
    for (int i = 0; i < 20; i++)
    {
        kol.pb(pom);
        pom <<= 1;
    }
}


void maskowanie()
{
    vector<int> temp;
    ll sum;
    for (int i = 0; i < (1 << 20) - 1; i++)
    { // policz kad mask
        for (int j = 0; j < 20; j++)
        {
            if (kol[j] & i)
                temp.pb(j);
        } // sprawdz czy jest na masce

        for (int j = 0; j < 20; j++)
        { // sproboj pobudowac nowe maski
            if (kol[j] & i)
                continue;
            sum = 0;
            for (int i2 = 0; i2 < temp.size(); i2++)
            {
                sum += t1[temp[i2]][j];
            }
            dp[i | kol[j]] = min(dp[i | kol[j]], sum + dp[i]);
        }

        temp.clear();
    }
}

void policzt1()
{
    int wsk;
    for (int i = 0; i < 20; i++)
    {
        for (int j = 0; j < 20; j++)
        {
            if (j == i || v[i].empty() || v[j].empty())
                continue;
            wsk = 0;
            for (int i2 = 0; i2 < v[i].size(); i2++)
            {
                while (true)
                {
                    if (wsk == v[j].size() - 1 || v[j][wsk + 1] > v[i][i2])
                        break; // przesuwaj dopoki wiadomo e te z wsk nie dziaaja.
                    wsk++;
                }
                if (v[j][wsk] < v[i][i2])
                    t1[i][j]
                        += wsk + 1; // jesli  ten z wsk nie dziala to dolicz te wszystkie do wyniku
            }
        }
    }
}

int main()
{

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    prep();
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> a;
        v[a - 1].pb(i);
    }
    policzt1();
    maskowanie();
    cout << dp[(1 << 20) - 1];
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// SOLUTION SEEN

#include <bits/stdc++.h>
#define pb push_back
//#define mp make_pair
#define fastread                                                                                   \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
#define openfile                                                                                   \
    ifstream cin;                                                                                  \
    ofstream cout;                                                                                 \
    cin.open(""input.txt"");                                                                         \
    cout.open(""output.txt"");
#define f(i, x, y) for (int i = x; i < y; i++)
#define all(X) X.begin(), X.end()
#define int long long
#define ll long long
#define key pair<int, int>
#define keyy pair<pair<int, int>, int>
#define keyyy pair<pair<int, int>, pair<int, int> >
#define keyd pair<double, double>
#define ff first
#define ss second
#define double long double
int mod = 1e9 + 7;
// int mod = 998244353;
const int inf = 1e18;
using namespace std;

main()
{
    int n, m = 20;
    cin >> n;
    int a[n + 1];
    f(i, 1, n + 1)
    {
        cin >> a[i];
        a[i]--;
    }
    int dist[m][m];
    memset(dist, 0, sizeof(dist));
    int cnt[n + 1][m];
    memset(cnt, 0, sizeof(cnt));
    f(i, 1, n + 1)
    {
        f(j, 0, m) cnt[i][j] = cnt[i - 1][j];
        cnt[i][a[i]]++;
    }
    vector<int> pos[m];
    f(i, 1, n + 1) pos[a[i]].pb(i);

    f(j, 0, m) for (int i : pos[j]) f(k, 0, m) if (k != j) dist[j][k] += cnt[i][k];

    // f(i, 1, n+1){ f(j, 0, m) cout<<cnt[i][j]<<"" ""; cout<<""\n""; } cout<<""\n"";
    // f(i, 0, m){ cout<<i<<"".  ""; for(int j : pos[i]) cout<<j<<"" ""; cout<<""\n""; } cout<<""\n"";
    // f(i, 0, m){ f(j, 0, m) cout<<dist[i][j]<<"" ""; cout<<""\n""; } cout<<""\n"";

    int dp[(1 << m)];
    f(i, 0, (1 << m)) dp[i] = inf;
    dp[0] = 0;
    f(i, 0, 1 << m)
    {
        int sum[m];
        memset(sum, 0, sizeof(sum));
        vector<int> v;
        f(j, 0, m) if (i & (1 << j)) v.pb(j);
        for (int j : v)
            for (int k : v)
                sum[j] += dist[j][k];

        f(j, 0, m) if (i & (1 << j)) dp[i] = min(dp[i], dp[i ^ (1 << j)] + sum[j]);

        // cout<<i<<"" ""<<dp[i]<<""  ""; f(j, 0, m) cout<<sum[j]<<"" ""; cout<<""\n"";
    }

    // f(i, 0, 1<<m) cout<<dp[i]<<"" ""; cout<<""\n"";
    cout << dp[(1 << m) - 1];
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ll long long
#define db double
#define el ""\n""
#define ld long double
#define rep(i, n) for (int i = 0; i < n; i++)
#define rev(i, n) for (int i = n; i >= 0; i--)
#define rep_a(i, a, n) for (int i = a; i < n; i++)
#define all(ds) ds.begin(), ds.end()
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
typedef vector<long long> vi;
typedef pair<long long, long long> ii;
typedef priority_queue<ll> pq;
#define o_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
#define graph vector<vi>

const ll mod = 1000000007;
const ll INF = (ll)1e18;
const ll MAXN = 1000006;

ll po(ll x, ll n)
{
    ll ans = 1;
    while (n > 0)
    {
        if (n & 1)
            ans = (ans * x) % mod;
        x = (x * x) % mod;
        n /= 2;
    }
    return ans;
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    int T = 1;
    // cin >> T;
    while (T--)
    {
        ll n;
        cin >> n;

        vector<vector<int> > v(20, vector<int>());
        int x;
        rep(i, n)
        {
            cin >> x;
            x--;
            v[x].pb(i);
        }

        ll swaps[20][20];
        rep(i, 20)
        {
            rep(j, 20)
            {
                if (i == j)
                {
                    swaps[i][j] = 0;
                    continue;
                }
                int cnt = 0;
                if (v[j].size() * v[i].size() == 0)
                {
                    swaps[i][j] = 0;
                    continue;
                }
                cnt = 0;
                int ptr_j = 0, ptr_i = 0;
                ll tmp = 0;
                while (ptr_i < v[i].size())
                {
                    while (ptr_j < v[j].size() && v[j][ptr_j] < v[i][ptr_i])
                        cnt++, ptr_j++;
                    tmp += cnt;
                    ptr_i++;
                }
                swaps[i][j] = tmp;
            }
        }

        vector<ll> dp(1 << 20, 1e12);
        dp[0] = 0;

        // rep(i,20){
        //     rep(j,20) cout<<swaps[i][j]<<"" "";
        //     cout<<el;
        // }

        rep(i, 1 << 20)
        {
            rep(j, 20)
            {
                if (!((i >> j) & 1))
                {
                    ll tmp = 0;
                    rep(k, 20)
                    {
                        if ((i >> k) & 1)
                            tmp += swaps[k][j];
                    }
                    dp[i ^ (1 << j)] = min(dp[i ^ (1 << j)], dp[i] + tmp);
                }
            }
        }
        cout << dp[(1 << 20) - 1] << el;
    }
    cerr << ""Time : "" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << ""ms\n"";
    return 0;
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define rep(i, a, b) for (register int i = (a); i <= (b); i++)
#define drep(i, a, b) for (register int i = (a); i >= (b); i--)
typedef long long ll;
using namespace std;
inline ll read()
{
    ll sum = 0, f = 0;
    char c = getchar();
    while (!isdigit(c))
        f |= (c == '-'), c = getchar();
    while (isdigit(c))
        sum = (sum << 1) + (sum << 3) + (c ^ 48), c = getchar();
    return f ? -sum : sum;
}

#define int ll
const int N = 22;
int n, m, a[1 << N], _[1 << N], f[1 << N], cnt[N][N], num[N];
// cnt_{i,j} : if (val_i > val_j) inv cnt

inline void chkmin(int& x, int y)
{
    x = min(x, y);
}

signed main()
{
    n = read();
    rep(i, 1, n) a[i] = _[i] = read();
    sort(_ + 1, _ + n + 1), m = unique(_ + 1, _ + n + 1) - _ - 1;
    rep(i, 1, n) a[i] = upper_bound(_ + 1, _ + m + 1, a[i]) - _ - 1;
    rep(i, 1, n)
    {
        num[a[i]]++;
        rep(j, 1, m) cnt[j][a[i]] += num[j];
    }

    const int V = (1 << m) - 1;
    memset(f, 0x3f, sizeof(f)), f[0] = 0;
    rep(S, 1, V)
    {
        rep(i, 1, m) if (S & (1 << i - 1))
        {
            int pre = S ^ (1 << i - 1), res = f[pre];
            rep(j, 1, m) if (pre & (1 << j - 1)) res += cnt[j][i];
            chkmin(f[S], res);
        }
    }
    cout << f[V] << endl;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define endl '\n'
#define vll vector<ll>
#define mll vector<vll>
#define pb push_back
#define pll pair<ll, ll>
#define pdd pair<double, double>
#define mp make_pair
#define tll tuple<ll, ll, ll>
#define mt make_tuple
#define ub upper_bound
#define lb lower_bound
#define bpc __builtin_popcount
#define inf 0x3f3f3f3f

ll n, qtt;
mll graph;
vll dp;

ll solve(ll visit)
{
    if (visit == (1 << qtt) - 1)
        return 0;

    if (dp[visit] != -1)
        return dp[visit];

    ll ans = 1000000000000LL;
    ll sum;
    for (int i = 0; i < qtt; i++)
    {
        if (visit & (1 << i))
            continue;
        sum = 0;

        for (int j = 0; j < qtt; j++)
        {
            if (visit & (1 << j))
            {
                sum += graph[j][i];
            }
        }
        ans = min(ans, sum + solve(visit | (1 << i)));
    }

    dp[visit] = ans;
    return ans;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    set<ll> c;
    vll marble(n);
    for (int i = 0; i < n; i++)
    {
        cin >> marble[i];
        c.insert(marble[i]);
    }

    qtt = 0;
    auto it = c.begin();
    map<ll, ll> m;
    while (it != c.end())
    {
        m[*it] = qtt;
        qtt++;
        it++;
    }

    for (int i = 0; i < n; i++)
    {
        marble[i] = m[marble[i]];
    }

    mll points(qtt);
    for (int i = 0; i < n; i++)
    {
        points[marble[i]].pb(i);
    }

    ll sum, aux;
    graph.resize(qtt, vll(qtt));
    for (int i = 0; i < qtt; i++)
    {
        for (int j = 0; j < qtt; j++)
        {
            if (i == j)
                continue;
            sum = 0;
            aux = 0;

            int ind1 = 0, ind2 = 0;
            while (ind1 < points[i].size() && ind2 < points[j].size())
            {
                if (points[i][ind1] < points[j][ind2])
                {
                    sum += aux;
                    ind1++;
                }
                else
                {
                    aux++;
                    ind2++;
                }
            }
            while (ind1 < points[i].size())
            {
                sum += aux;
                ind1++;
            }

            graph[i][j] = sum;
        }
    }

    dp.resize(1 << qtt, -1);
    ll ans = solve(0);

    cout << ans << endl;

    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define loop(i, a, b) for (ll i = a; i < b; i++)
#define pool(i, a, b) for (ll i = a - 1; i >= b; i--)
#define fore(i, a) for (auto&& i : a)
#define fi first
#define se second
#define ps(a) push_back(a)
#define pb(a) pop_back(a)
#define sc scanf
#define vc vector
#define lb lower_bound
#define ub upper_bound
#define all(a) a.begin(), a.end()
#define llmax LLONG_MAX / 2
#define llmin -LLONG_MAX / 2
using namespace std;
#define mn 2100000
#define par pair<ll, ll>
#define ld long double
#define mod 1000000007
const ll al = 20;
ll dp[mn], cost[al][al], a[mn], cnt[al];
int main()
{
    ll n;
    cin >> n;
    loop(i, 0, n) cin >> a[i];
    loop(i, 0, n) a[i]--;

    // loop(i, 0, al) last[i]=-1;
    loop(i, 0, n)
    {
        cost[a[i]][a[i]] += i - cnt[a[i]];
        cnt[a[i]]++;
        // last[a[i]]=i;

        loop(j, 0, al) if (j != a[i]) cost[a[i]][j] += cnt[j];
    }

    loop(bit, 1, (1 << al))
    {
        dp[bit] = llmax;
        loop(j, 0, al) if (bit & (1 << j))
        {
            ll tr = dp[bit - (1 << j)];
            tr += cost[j][j];
            loop(k, 0, al) if (bit & (1 << k) and k != j) tr -= cost[k][j];
            dp[bit] = min(dp[bit], tr);
        }
    }
    cout << dp[(1 << al) - 1] << endl;
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define deb(x) cout << #x << ""  = "" << x << endl
typedef long long int ll;
#define fast                                                                                       \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0)

#define dbg2(x, y)                                                                                 \
    {                                                                                              \
        cout << #x << "": "" << (x) << "" , "" << #y << "": "" << (y) << endl;                           \
    }
#define fo(i, n) for (int i = 0; i < n; i++)
#define fok(i, k, n) for (int i = k; i < n; i++)
#define foA(i, A) for (auto i : A)
#define mset(a, val) memset(a, val, sizeof a)
#define tmr cout << ""\nTime Elapsed: "" << 1.0 * clock() / CLOCKS_PER_SEC << "" sec\n""
#define atmt                                                                                       \
    freopen(""it1.txt"", ""r"", stdin);                                                                \
    freopen(""ot1.txt"", ""w"", stdout)
const int modd = 1e9 + 7;
#define int ll
inline int add(int a, int b)
{
    return a + b >= modd ? a + b - modd : a + b;
}
inline void inc(int& a, int b)
{
    a = add(a, b);
}
inline int sub(int a, int b)
{
    return a - b < 0 ? a - b + modd : a - b;
}
inline void dec(int& a, int b)
{
    a = sub(a, b);
}

const int inf = 1e18;
const int mxN = 200004;
const int di[] = { 0, -1, 0, 1 }; // right, down, left, up
const int dj[] = { 1, 0, -1, 0 };

signed main()
{
    int n;
    cin >> n;
    vector<vector<int>> adj(20);
    vector<vector<int>> cst(20, vector<int>(20, 0));
    fo(i, n)
    {
        int x;
        cin >> x;
        x--;
        adj[x].push_back(i);
    }
    // cst[i][j]=min swaps to place i before j
    fo(i, 20)
    {
        fo(j, 20)
        {
            int ptr = 0;
            for (int x : adj[i])
            {
                while (ptr < adj[j].size() && adj[j][ptr] < x)
                    ptr++;
                // need to swap ptr no. of elements of type j, as they exists before xth element of
                // type i.
                cst[i][j] += ptr;
            }
            // dbg2(i, j);dbg2(cst[i][j], ptr);
        }
    }
    int ak = 1 << 20;
    // dbg2(ak, n);
    vector<int> dp(ak, inf);
    dp[0] = 0;
    for (int msk = 0; msk < ak; msk++)
    {
        vector<int> sb, usb; // set_bit, unset_bit
        fo(i, 20)
        {
            if (((1 << i) & msk) > 0)
                sb.push_back(i);
            else
                usb.push_back(i);
        }
        for (auto x : usb)
        {
            int nmsk = msk | (1 << x), cost = 0;
            for (auto bef : sb)
            {
                cost += cst[bef][x];
            }
            // dbg2(msk, nmsk);
            dp[nmsk] = min(dp[nmsk], dp[msk] + cost);
        }
    }
    cout << dp[ak - 1];
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*
It's easy to see that using the constriants that it's DP
So i just tried to use state as mask nd did dp on it
Nd when i want to to place all of color c from some pos
then i just tried to do sigma[abs(pos+i-ci)] where ci is original position
nd then took ans/2 as final ans

But it was wrong in the sense that let's say we have

55443...nd we want 55555344...
so according to our algo difference btwn pos 3 and optimal is 1
but after swaps it will be 2 bcz we would land up as 55555443

So i took to editorial nd it mentions that we must try to approach it as
we have placed some color's in continuous segments like
c1,c1,c1,c2,c2,c2,c2,c5,c5,c5,c5,c8,c8,c8 nd then we want to place ck then
we must find thw cnt of swaps req to place all ck after all c1,c2,c5,c8

This approach would not lead to earlier Pblm bcz
if we want to place them in such order we have to swap these 2 colors
like if we want to cross some colot there has to be a swap of them

I have found that thinking in terms of swaps in Pblms where there is some ordering helps

For each pair of colors we will pre-calculate
swaps needed for it to be at right of other color
*/

#include <bits/stdc++.h>
using namespace std;
#define ll long long int

ll n;
ll a[400005];
vector<ll> v[20];
ll cnt[20][20];
ll dp[(1ll << 20) + 5ll];

ll go(ll pos, ll mask)
{
    if (pos == n)
    {
        return 0;
    }
    if (dp[mask] != -1)
    {
        return dp[mask];
    }

    ll res = 1e12;
    for (ll i = 0; i < 20; i++)
    {
        if (v[i].size() == 0 || mask & (1ll << i))
        {
            continue;
        }

        ll cur = 0;
        for (ll j = 0; j < 20; j++)
        {
            if (mask & (1ll << j))
            {
                cur += cnt[i][j];
            }
        }

        cur += go(pos + v[i].size(), mask | (1ll << i));
        res = min(res, cur);
    }

    return dp[mask] = res;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n;
    for (ll i = 0; i < n; i++)
    {
        cin >> a[i];
        a[i]--;
        v[a[i]].push_back(i);
    }

    /*
    cnt(i,j) swaps for i to be at right of j with only j
    */
    /*
    4e2*4e5*log(4e5)=16e7*[2+5*3.3]=296e7=2.96e9=3e9[loose upper bound]
    It will be lower than it
    */
    for (ll i = 0; i < 20; i++)
    {
        for (ll j = 0; j < 20; j++)
        {
            if (v[i].size() == 0 || v[j].size() == 0)
            {
                continue;
            }
            for (auto it : v[i])
            {
                ll indx = upper_bound(v[j].begin(), v[j].end(), it) - v[j].begin();
                cnt[i][j] += indx;
            }
        }
    }

    memset(dp, -1, sizeof(dp));
    cout << go(0, 0) << ""\n"";
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define mp make_pair
#define fr first
#define sc second

int lg(ll n)
{
    assert(n > 0);
    int ans = -1;
    while (n)
    {
        ans++;
        n >>= 1;
    }
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif

    auto sum = [&](int first, int nums)
    {
        return 1LL * (first * 2 + nums - 1) * nums / 2;
    };

    map<int, int> col;
    int n;
    cin >> n;
    vector<int> a(n);
    int colors = 0;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        if (col[a[i]] == 0)
            col[a[i]] = ++colors;
    }
    for (int i = 0; i < n; i++)
    {
        a[i] = col[a[i]] - 1;
    }
    vector<vector<int>> pos(colors);
    for (int i = 0; i < n; i++)
    {
        pos[a[i]].push_back(i);
    }

    vector<vector<ll>> swaps(colors, vector<ll>(colors));

    for (int i = 0; i < colors; i++)
    {
        for (int j = 0; j < colors; j++)
        {
            if (j == i)
                continue;
            int pti = 0, ptj = 0;
            int szi = pos[i].size(), szj = pos[j].size();
            ll sumofposJ = 0;
            while (pti < szi || ptj < szj)
            {
                if (ptj == szj)
                    break;
                if (pti == szi)
                {
                    sumofposJ += sum(pti + ptj, szj - ptj);
                    break;
                }
                if (pos[i][pti] < pos[j][ptj])
                    pti++;
                else
                {
                    sumofposJ += (pti + ptj);
                    ptj++;
                }
            }
            swaps[i][j] = sumofposJ - sum(0, szj);
        }
    }

    vector<vector<ll>> sumswaps(colors, vector<ll>(1 << colors, 0));
    for (int i = 0; i < colors; i++)
    {
        for (int mask = 1; mask < (1 << colors); mask++)
        {
            if (__builtin_popcount(mask) == 1)
            {
                int j = lg(mask);
                sumswaps[i][mask] = swaps[i][j];
            }
            else
            {
                sumswaps[i][mask] = sumswaps[i][mask & (mask - 1)] + sumswaps[i][mask & (-mask)];
            }
        }
    }

    const ll INF = 1e14;
    vector<ll> dp(1 << colors, INF);
    dp[0] = 0;
    for (int mask = 1; mask < (1 << colors); mask++)
    {
        if (__builtin_popcount(mask) == 1)
            dp[mask] = 0;
        else
        {
            for (int i = 0; i < colors; i++)
            {
                if (mask & (1 << i))
                {
                    int submask = mask ^ (1 << i);
                    dp[mask] = min(dp[mask], dp[submask] + sumswaps[i][submask]);
                }
            }
        }
    }

    cout << dp[(1 << colors) - 1] << '\n';

    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
#include ""ext/pb_ds/assoc_container.hpp""
using namespace std;
using namespace __gnu_pbds;

#define ll int64_t
#define all(v) (v).begin(), (v).end()
#define read(v)                                                                                    \
    for (auto& x : v)                                                                              \
        cin >> x;

// https://codeforces.com/problemset/problem/1215/E
// https://github.com/junikimm717/mincp/blob/main/templates/std_template/Makefile
// -std=c++11 -Wall -Wextra -pedantic -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG

const int MAXA = 20;
ll f[MAXA][MAXA];
ll dp[1 << MAXA];
int vst[1 << MAXA];

const ll INF = 1e12;

void solve(int bm)
{
    if (vst[bm])
        return;
    vst[bm] = 1;
    dp[bm] = INF;
    for (int i = 0; i < MAXA; ++i)
    {
        if (bm & (1 << i))
        {
            solve(bm - (1 << i));
            ll sum = 0;
            for (int j = 0; j < MAXA; ++j)
            {
                if (j != i && (bm & (1 << j)))
                    sum += f[j][i];
            }
            dp[bm] = min(dp[bm], dp[bm - (1 << i)] + sum);
        }
    }
}


int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int N;
    cin >> N;
    vector<int> v(N);
    read(v);
    for (auto& x : v)
        --x;
    for (int i = 0; i < 20; ++i)
    {
        for (int j = 0; j < 20; ++j)
        {
            if (i == j)
                continue;
            vector<int> t;
            for (int k = 0; k < N; ++k)
            {
                if (v[k] == i || v[k] == j)
                    t.push_back(v[k]);
            }
            int ptr = 0;
            for (int k = 0; k < int(t.size()); ++k)
            {
                if (t[k] == i)
                {
                    f[i][j] += (k - ptr);
                    ptr++;
                }
            }
        }
    }
    vst[0] = 1;
    solve((1 << MAXA) - 1);
    cout << dp[(1 << MAXA) - 1];
}
/*

prefix[color][index] - efficient range queries.
bitmask - the guys that we have already put in the front.

AAA.. BBB... CCC...

dp[bitmask] = every marble of  color c1 to be behind or after c2
A AA A A    B  B B

dp[A] = AAAA
dp[B] = BBBB
dp[C] = CCCC
dp[AC] = AAACCCCC

A,B,C
dp[A,B]
AACABCBCBCBCB
AAABBB

dp[bm|(1<<j)] = dp[bm] + sum_{i in bm} f(i,j)

f(i, j) => cost needed to put everything in i before j (assuming i and j exist).


*/
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define fastIO                                                                                     \
    std::ios::sync_with_stdio(false);                                                              \
    cin.tie(NULL)
using namespace std;
#define int long long int
#define vi vector<int>
#define vvi vector<vector<int>>
#define pii pair<int, int>
#define ff first
#define ss second
#define mod 1000000007
#define MMOD 998244353
#define pb push_back
#define PI 3.1415926535897
using namespace std;
int gcd(int a, int b)
{
    if (b == 0)
        return a;
    return gcd(b, a % b);
}
vector<int> d((1 << 20), 1e18);
vector<vector<int>> idx(20);
vector<vector<int>> cal(20, vector<int>(20, 0));

signed main(void)
{
    int t = 1;
    fastIO;
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    // cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vi col(n);
        for (int i = 0; i < n; i++)
        {
            cin >> col[i];
            col[i]--;
            idx[col[i]].pb(i);
        }

        for (int i = 0; i < 20; i++)
        {
            for (int j = 0; j < 20; j++)
            {
                if (i == j || idx[i].size() == 0 || idx[j].size() == 0)
                    continue;
                int p = -1;
                for (auto id : idx[i])
                {
                    int m = idx[j].size();
                    while (p < m - 1 && idx[j][p + 1] < id)
                        p++;
                    // cout << idx[j][p + 1] << endl;
                    cal[j][i] += (idx[j].size() - p - 1);
                    // cout << p << "" "" << id << endl;
                }
                // cout << j << "" "" << i << "" "" << cal[j][i] << endl;
            }
        }
        d[0] = 0;
        for (int mask = 0; mask < (1 << 20); mask++)
        {
            vi taken;
            for (int i = 0; i < 20; i++)
            {
                if ((1 << i) & mask)
                    taken.pb(i);
            }

            for (int i = 0; i < 20; i++)
            {
                if ((1 << i) & mask)
                    continue;
                int temp = 0;
                for (auto j : taken)
                {
                    temp += cal[j][i];
                }
                d[mask | (1 << i)] = min(d[mask | (1 << i)], d[mask] + temp);
                // cout << temp << "" "" << d[mask] << endl;
            }
            // cout << d[mask] << endl;
        }


        cout << d[(1 << 20) - 1] << endl;
    }
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define all(x) x.begin(), x.end()
#define wa(x) cerr << #x << "" is "" << x << endl

const int N = (1 << 20) + 3;
ll dp[N], t[21][21], b[21][N];
vector<vector<int>> a(21);

void solve()
{
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i)
    {
        int x;
        cin >> x;
        --x;
        a[x].push_back(i);
    }
    for (int i = 0; i < 20; ++i)
    {
        for (int j = 0; j < 20; ++j)
        {
            if (i == j)
                continue;
            int p = 0;
            ll val = 0;
            for (auto x : a[i])
            {
                while (p < a[j].size() && a[j][p] < x)
                    ++p;
                val += p;
            }
            t[i][j] = val;
        }
    }
    for (int i = 0; i < 20; ++i)
        for (int mask = 1; mask < (1 << 20); ++mask)
        {
            int p = 0;
            while ((mask & (1 << p)) == 0)
                ++p;
            b[i][mask] = b[i][mask ^ (1 << p)] + t[p][i];
        }

    memset(dp, 0x3f, sizeof(dp));
    dp[0] = 0;
    for (int mask = 0; mask < (1 << 20); ++mask)
        for (int i = 0; i < 20; ++i)
        {
            if (mask & (1 << i))
                continue;
            dp[mask | (1 << i)] = min(dp[mask | (1 << i)], dp[mask] + b[i][mask]);
        }

    cout << dp[(1 << 20) - 1] << ""\n"";
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    int test = 1;
    while (test--)
        solve();
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;

int N, A[400005];
int cnt[25];
ll B[25][25];
ll f[2000005];

int main()
{
    scanf(""%d"", &N);
    for (int i = 1; i <= N; i++)
    {
        scanf(""%d"", &A[i]);
        for (int j = 1; j <= 20; j++)
            B[j][A[i]] += cnt[j];
        cnt[A[i]]++;
    }
    memset(f, 63, sizeof(f));
    f[0] = 0;
    for (int s = 0; s < (1 << 20); s++)
        for (int i = 1; i <= 20; i++)
            if (!((s >> (i - 1)) & 1))
            {
                ll tmp = 0;
                for (int j = 1; j <= 20; j++)
                    if ((s >> (j - 1)) & 1)
                        tmp += B[j][i];
                f[s | (1 << (i - 1))] = min(f[s | (1 << (i - 1))], f[s] + tmp);
            }
    printf(""%I64d\n"", f[(1 << 20) - 1]);

    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

void testCase()
{
}

int a[1000000];
ll monta[500000][21];
ll dp[(1 << 20) + 1];
ll tbl[21][21];
vector<int> arr[21];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    /*
    int t;
    cin >> t;
    for (int i = 0; i < t; i++) {
        testCase();
    }
    */
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    for (int i = 1; i <= n; i++)
    {
        arr[a[i]].push_back(i);
    }
    for (int j = 1; j <= 20; j++)
    {
        if (a[1] == j)
            monta[1][j] = 1;
    }
    for (int i = 2; i <= n; i++)
    {
        for (int j = 1; j <= 20; j++)
        {
            if (a[i] == j)
                monta[i][j] = monta[i - 1][j] + 1;
            else
                monta[i][j] = monta[i - 1][j];
        }
    }
    for (int i = 1; i <= 20; i++)
    {
        for (int j = 1; j <= 20; j++)
        {
            if (i == j)
                continue;
            for (int ind : arr[i])
                tbl[i][j] += monta[ind][j];
        }
    }
    for (int i = 1; i < (1 << 20); i++)
    {
        ll best = 1e18;
        for (int j = 0; j < 20; j++)
        {
            if ((i & (1 << j)) != 0)
            {
                ll lisa = 0;
                for (int k = 0; k < 20; k++)
                {
                    if ((i & (1 << k)) != 0)
                        lisa += tbl[k + 1][j + 1];
                }
                best = min(best, lisa + dp[i ^ (1 << j)]);
            }
        }
        dp[i] = best;
    }
    cout << dp[(1 << 20) - 1] << ""\n"";
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int kol[25];
long long int s[25][25];
const int wart = (1 << 20);
long long int dp[wart];
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        int a;
        cin >> a;
        for (int j = 0; j < 20; j++)
            s[a - 1][j] += kol[j];
        kol[a - 1]++;
    }

    for (int i = 1; i < wart; i++)
    {
        dp[i] = 1e18;
        for (int j = 0; j < 20; j++)
        {
            if (1 & (i >> j))
            {
                long long int wewn = 0;
                for (int c = 0; c < 20; c++)
                    if (((i >> c) & 1) && c != j)
                        wewn += s[c][j];
                dp[i] = min(dp[i], dp[i ^ (1 << j)] + wewn);
            }
        }
    }
    cout << dp[wart - 1];
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
ll arr[400001];
ll tmp[21];
ll cnt[21][21];
ll dp[2000000];
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    // cout.tie(0);
    ll n;
    cin >> n;
    for (ll i = 1; i <= n; i++)
    {
        cin >> arr[i];
    }
    for (ll i = 1; i <= n; i++)
    {
        for (ll j = 1; j <= 20; j++)
        {
            if (arr[i] == j)
            {
                continue;
            }
            cnt[arr[i]][j] = cnt[arr[i]][j] + tmp[j];
        }
        tmp[arr[i]]++;
    }
    ll c = 0;
    for (ll i = 1; i < (1 << 20); i++)
    {
        dp[i] = 1e18;
    }
    for (ll i = 1; i < (1 << 20); i++)
    {
        if (i == (1 << c))
        {
            dp[i] = 0;
            c++;
        }
        ll e = i;
        for (ll j = 0; j < 20; j++)
        {

            if (e == 0)
            {
                break;
            }
            if (e & 1)
            {
                ll f = i - (1 << j);
                ll g = i - (1 << j);
                ll tmp = 0;
                for (ll k = 0; k < 20; k++)
                {
                    if (f == 0)
                    {
                        break;
                    }
                    if (f & 1)
                    {
                        tmp = tmp + cnt[k + 1][j + 1];
                    }
                    f >>= 1;
                }
                dp[i] = min(dp[i], dp[g] + tmp);
            }
            e >>= 1;
        }
    }
    cout << dp[(1 << 20) - 1] << ""\n"";
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define pb(a) push_back(a)

using namespace std;

const ll INF = 2e18;
const int mxN = 4e5, M = 20;
ll n, a[mxN + 10], cnt[M + 10][M + 10], dp[(1 << M) + 10];

void SelfMin(ll& a, ll b)
{
    a = min(a, b);
}

ll f(int x, int y)
{

    ll t = 0, sum = 0;
    for (int i = 0; i < n; i++)
    {
        if (a[i] == y)
            t++;
        else if (a[i] == x)
            sum += t;
    }
    return sum;
}

int main()
{

    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i], --a[i];

    for (int i = 0; i < M; i++)
        for (int j = 0; j < M; j++)
            if (i != j)
                cnt[i][j] = f(i, j);

    for (int mask = 1; mask < (1 << M); mask++)
        dp[mask] = INF;
    for (int mask = 0; mask < (1 << M); mask++)
    {
        for (int i = 0; i < M; i++)
        {
            if (!(mask & (1 << i)))
            {
                ll cost = 0;
                for (int j = 0; j < M; j++)
                    if (mask & (1 << j))
                        cost += cnt[j][i];

                SelfMin(dp[mask | (1 << i)], dp[mask] + cost);
            }
        }
    }

    cout << dp[(1 << M) - 1] << '\n';

    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
typedef long long LL;
const int N = 4e5 + 10;
const LL INF = 1e15;

int n;
vector<int> v[20];
LL exc[20][20], f[1 << 20];

int main()
{
    /// input
    scanf(""%d"", &n);
    for (int i = 1; i <= n; ++i)
    {
        int x;
        scanf(""%d"", &x);
        v[x - 1].push_back(i);
    }

    /// exc j,i->i,j
    for (int i = 0; i < 20; ++i)
    {
        if (!v[i].size())
            continue;
        int szi = v[i].size();
        for (int j = 0; j < 20; ++j)
        {
            if (i == j || !v[j].size())
                continue;
            LL sum = 0;
            int wj = 0, szj = v[j].size();
            for (int wi = 0; wi < szi; ++wi)
            {
                while (wj < szj && v[j][wj] < v[i][wi])
                    wj++;
                sum += wj;
            }
            exc[i][j] = sum;
        }
    }

    /// f
    int stu = 1 << 20;
    fill(f, f + stu, INF);
    f[0] = 0;
    for (int i = 0; i < stu; ++i)
    {

        bool ok = true;
        for (int j = 0; j < 20; ++j)
            if ((i & (1 << j)) && !v[j].size())
                ok = false;
        if (!ok)
            continue;
        for (int j = 0; j < 20; ++j)
        {
            if ((i & (1 << j)) || !v[j].size())
                continue;
            LL sum = 0;
            for (int k = 0; k < 20; ++k)
            {
                if (!(i & (1 << k)))
                    continue;
                sum += exc[j][k];
            }
            f[i | (1 << j)] = min(f[i | (1 << j)], f[i] + sum);
        }
    }
    /// output
    int ans = 0;
    for (int i = 0; i < 20; ++i)
        if (v[i].size())
            ans |= 1 << i;
    cout << f[ans] << endl;

    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define ll long long
const int N = 4e5 + 5, M = (1 << 20);

ll sum[N], num[20][20];

int a[N];

ll dp[M], dp2[20][M];

bool vis[M];
ll solveDp(int bit)
{
    if (bit + 1 == M)
        return 0LL;
    ll& ret = dp[bit];
    if (ret != -1)
    {
        return ret;
    }
    assert(!vis[bit]);
    vis[bit] = true;
    ret = 1e18;
    for (register int i = 0; i < 20; ++i)
    {
        if (!(bit & (1 << i)))
        {
            int nbit = bit | (1 << i);

            assert(sum[i] - dp2[i][nbit] >= 0);
            ret = min(ret, solveDp(nbit) + sum[i] - dp2[i][nbit]);
        }
    }
    return ret;
}

int mp[M];

void solve2()
{
    int n;
    scanf(""%d "", &n);
    ll cur[20];
    for (int i = 0; i < 20; ++i)
    {
        cur[i] = 0;
        mp[(1 << i)] = i;
    }
    for (int i = 0; i < n; ++i)
    {
        scanf(""%d  "", &a[i]);
        --a[i];
        for (register int j = 0; j < 20; ++j)
        {
            num[a[i]][j] += cur[j];
        }
        sum[a[i]] += i;
        ++cur[a[i]];
    }


    for (register int i = 0; i < 20; ++i)
    {
        for (register int bit = 1; bit < M; ++bit)
        {
            int g = mp[bit & (-bit)];
            dp2[i][bit] = dp2[i][bit ^ (1 << g)] + num[i][g];
        }
    }

    memset(dp, -1, sizeof(dp));
    printf(""%lld\n"", solveDp(0));
}

void solve()
{
    solve2();
}

inline bool exists_test0(const std::string& name);
inline bool exists_test1(const std::string& name);
int main()
{
#ifdef LOCAL
    string file_name = ""input.txt"";
    assert(exists_test0(file_name));
    assert(exists_test1(file_name));
    freopen(""input.txt"", ""r"", stdin);
#endif
    solve();
    return 0;
}

/*
0. Enough array size? Enough array size? Integer overflow?

1. Think TWICE, Code ONCE!
Are there any counterexamples to your algo?

2. Be careful about the BOUNDARIES!
N=1? P=1? Something about 0?

3. Do not make STUPID MISTAKES!
Time complexity? Memory usage? Precision error?

4. Be careful to use wrong variable.
*/
inline bool exists_test0(const std::string& name)
{
    ifstream f(name.c_str());
    return f.good();
}

inline bool exists_test1(const std::string& name)
{
    if (FILE* file = fopen(name.c_str(), ""r""))
    {
        fclose(file);
        return true;
    }
    else
    {
        return false;
    }
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
template <class T>
ostream& operator<<(ostream& os, const vector<T>& p)
{
    os << ""["";
    for (auto& it : p)
        os << it << "" "";
    return os << ""]"";
}
template <class S, class T>
ostream& operator<<(ostream& os, const pair<S, T>& p)
{
    return os << ""("" << p.first << "","" << p.second << "")"";
}
#ifndef ONLINE_JUDGE
#define deb(...) dbs(#__VA_ARGS__, __VA_ARGS__)
template <class T>
void dbs(string str, T t)
{
    cerr << str << "":"" << t << ""\n"";
}
template <class T, class... S>
void dbs(string str, T t, S... s)
{
    int idx = str.find(',');
    cerr << str.substr(0, idx) << "":"" << t << "","";
    dbs(str.substr(idx + 1), s...);
}
#else
#define deb(...)                                                                                   \
    {                                                                                              \
    }
#endif
#define int long long
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define rep(i, n) for (int i = 0; i < n; i++)
#define sz(x) (int) x.size()
#define nl cout << '\n'
#define pr(x)                                                                                      \
    {                                                                                              \
        cout << x << ""\n"";                                                                         \
        return;                                                                                    \
    }
#define all(x) x.begin(), x.end()
#define re(i, n) for (int i = 1; i <= n; i++)
#define prl(x)                                                                                     \
    {                                                                                              \
        cout << x << ""\n"";                                                                         \
    }
#define ini(x, y) memset(x, y, sizeof(x))
#define fr(i, a, b) for (int i = a; i <= b; i++)
#define fb(i, a, b) for (int i = a; i >= b; i--)
#define vi vector<int>
#define pii pair<int, int>
#define vii vector<pii>
template <class T>
bool umin(T& a, T b)
{
    return a > b ? (a = b, true) : false;
}
template <class T>
bool umax(T& a, T b)
{
    return a < b ? (a = b, true) : false;
}

template <class T>
inline T Bit(T x, int i)
{
    return (x >> i) & 1;
}

const int K = 20;
int dp[1LL << K];
int n, cost[20][20], cnt[20];

int f(int mask)
{
    if (mask == (1LL << K) - 1)
        return 0;
    if (dp[mask] != -1)
        return dp[mask];
    int ans = 1e12;
    rep(i, K)
    {
        if (!Bit(mask, i))
        {
            int sum = 0;
            rep(j, K)
            {
                if (i != j && !Bit(mask, j))
                {
                    sum += cost[i][j];
                }
            }
            umin(ans, sum + f(mask | (1LL << i)));
        }
    }
    return dp[mask] = ans;
}
void solve()
{
    cin >> n;
    rep(i, n)
    {
        int x;
        cin >> x;
        x--;
        rep(j, 20)
        {
            if (j != x)
            {
                cost[x][j] += cnt[j];
            }
        }
        cnt[x]++;
    }
    rep(i, 1LL << K)
    {
        dp[i] = -1;
    }
    pr(f(0));
}

signed main()
{
    ios_base::sync_with_stdio(false), cin.tie(nullptr);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    int q = 1;
    // cin >> q;
    while (q--)
        solve();
    return 0;
}",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define all(x) x.begin(), x.end()
#define pb push_back
#define mp make_pair
#define ps push
#define in insert
#define f first
#define s second
#define ca(v)                                                                                      \
    for (auto i : v)                                                                               \
        cout << i << "" "";
#define nl cout << ""\n""
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) (a * b / gcd(a, b))
int xm[4] = { -1, 1, 0, 0 };
int ym[4] = { 0, 0, -1, 1 };
const int MOD = 1e9 + 7;
const int MAXN = 4e5 + 5;
const ll POW = 9973;

vector<int> cnt[20];
ll moves[20][20];
ll dp[(1 << 20)];
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    int ar[n];
    for (int i = 0; i < n; i++)
    {
        cin >> ar[i];
        ar[i]--;
        cnt[ar[i]].pb(i);
    }
    for (int i = 0; i < 20; i++)
    {
        for (int j = 0; j < 20; j++)
        {
            if (cnt[i].size() == 0 || cnt[j].size() == 0)
                continue;
            vector<pair<int, int>> v;
            for (int a : cnt[i])
                v.pb(mp(a, 0));
            for (int b : cnt[j])
                v.pb(mp(b, 1));
            sort(all(v));
            int run = 0;
            ll tot = 0;
            for (auto p : v)
            {
                if (p.s == 0)
                    run++;
                else
                    tot += run;
            }
            moves[i][j] = tot;
        }
    }
    for (int i = 0; i < (1 << 20); i++)
        dp[i] = 2e18;
    dp[0] = 0;
    for (int i = 0; i < (1 << 20); i++)
    {
        for (int j = 0; j < 20; j++)
        {
            int b = (1 << j);
            if (b & i)
                continue;
            ll tot = dp[i];
            for (int l = 0; l < 20; l++)
            {
                if (!(i & (1 << l)))
                    continue;
                tot += moves[l][j];
            }
            dp[i + b] = min(dp[i + b], tot);
        }
    }
    cout << dp[(1 << 20) - 1];
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define COLS 20

int main()
{
    int n;
    cin >> n;
    vector<int> marbles(n);
    vector<int> rename(COLS, -1);
    int start = 0;
    for (int i = 0; i < n; i++)
    {
        cin >> marbles[i];
        marbles[i]--;
        if (rename[marbles[i]] == -1)
        {
            rename[marbles[i]] = start++;
        }
    }
    for (int i = 0; i < n; i++)
    {
        marbles[i] = rename[marbles[i]];
    }
    vector<vector<int>> cnt(n, vector<int>(COLS, 0));
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < COLS; j++)
        {
            cnt[i][j] += marbles[i] == j;
            if (i != 0)
            {
                cnt[i][j] += cnt[i - 1][j];
            }
        }
    }
    vector<vector<int64_t>> swaps(COLS, vector<int64_t>(COLS, 0));
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < COLS; j++)
        {
            swaps[marbles[i]][j] += cnt[i][j];
        }
    }
    vector<int64_t> dp(1 << start, numeric_limits<int64_t>::max());
    dp[0] = 0;
    for (int mask = 1; mask < dp.size(); mask++)
    {
        for (int c = 0; c < start; c++)
        {
            if (!(mask & (1 << c)))
                continue;
            int64_t poss_val = dp[mask - (1 << c)];
            for (int other = 0; other < start; other++)
            {
                if (mask & (1 << other))
                    continue;
                poss_val += swaps[c][other];
            }
            dp[mask] = min(dp[mask], poss_val);
        }
    }
    cout << dp.back() << endl;
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define ll long long
#define pb push_back
#define fi first
#define se second
#define en '\n'
#define smin(a, b) a = min(a, b)
#define smax(a, b) a = max(a, b)
#define ssort(a, b)                                                                                \
    ;                                                                                              \
    int _temp = max(a, b);                                                                         \
    b = min(a, b);                                                                                 \
    a = _temp;
#define bit_count(a) __builtin_popcount(a)

using namespace std;

const ll LINF = 2e18;
const int mxN = 3e5, INF = 2e9, MOD = 1e9 + 7, mod = 998244353;
ll n;

ll f(vector<array<int, 2> > points_x, vector<array<int, 2> > points_v)
{

    if (points_x.size() == 1)
        return 0;
    int m = points_x.size();
    vector<array<int, 2> > left_x
        = vector<array<int, 2> >(points_x.begin(), points_x.begin() + m / 2);
    vector<array<int, 2> > right_x
        = vector<array<int, 2> >(points_x.begin() + m / 2, points_x.end());
    vector<array<int, 2> > left_v, right_v;
    for (auto p : points_v)
    {
        if (p[0] < right_x[0][0])
            left_v.pb(p);
        else
            right_v.pb(p);
    }
    ll ans = f(left_x, left_v);
    ans += f(right_x, right_v);

    ll mx = left_x.back()[0];
    ll pre[left_v.size()];
    pre[0] = mx - left_v[0][0];
    for (int i = 1; i < left_v.size(); i++)
        pre[i] = pre[i - 1] + mx - left_v[i][0];
    for (int i = 0, j = 0; i < right_v.size(); i++)
    {
        while (right_v[i][1] >= left_v[j][1] && j < left_v.size())
            j++;
        j--;
        if (j >= 0)
        {
            ll t = pre[j] + (right_v[i][0] - mx) * (j + 1);
            ans += t;
        }
        else
            j = 0;
    }
    return ans;
}

void Solve()
{

    cin >> n;
    vector<array<int, 2> > points_x(n);
    for (int i = 0; i < n; i++)
        cin >> points_x[i][0];
    for (int i = 0; i < n; i++)
        cin >> points_x[i][1];
    sort(points_x.begin(), points_x.end());
    vector<array<int, 2> > points_v = points_x;
    sort(points_v.begin(), points_v.end(), [&](auto a, auto b)
        {
            return a[1] < b[1];
        });
    cout << f(points_x, points_v) << en;
}

int main()
{

    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int t = 1;
    // cin >> t;
    while (t--)
        Solve();

    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef double long dl;

#define F first
#define S second
#define PB push_back
#define MP make_pair
#define rep(i, a, b) for (ll i = a; i < b; i++)
#define pmod 1000000007
#define INF 1000000000000000000
#define pi atan(1) * 4
#define modi 1000000
#define nmod 998244353
#define salto '\n'

struct ST
{

private:
    vector<pair<ll, ll> > sST;

public:
    ll left(ll i)
    {
        return (i << 1);
    }

    ll right(ll i)
    {
        return (i << 1) + 1;
    }

    void create(ll n)
    {
        sST.assign(4 * n + 10, pair<ll, ll>(0, 0));
    }

    pair<ll, ll> assign(ll i, ll L, ll R, ll k, ll v)
    {

        if (R < k || k < L)
        {
            return sST[i];
        }

        if (L == R)
        {
            sST[i].F += v;
            sST[i].S += 1;
            return sST[i];
        }

        ll mitad = (L + R) / 2;
        pair<ll, ll> r1 = assign(left(i), L, mitad, k, v);
        pair<ll, ll> r2 = assign(right(i), mitad + 1, R, k, v);

        pair<ll, ll> r3 = { r1.F + r2.F, r2.S + r1.S };
        sST[i] = r3;

        return sST[i];
    }

    pair<ll, ll> calc(ll i, ll L, ll R, ll l, ll r)
    {

        if (R < l || r < L)
        {
            return { 0, 0 };
        }

        if (L >= l && R <= r)
        {
            return sST[i];
        }

        if (L == R)
        {
            return sST[i];
        }

        ll mitad = (L + R) / 2;
        ll res = 0;
        pair<ll, ll> r1 = calc(left(i), L, mitad, l, r);
        pair<ll, ll> r2 = calc(right(i), mitad + 1, R, l, r);
        pair<ll, ll> r3 = { r1.F + r2.F, r2.S + r1.S };

        return r3;
    }
};

void solve()
{

    ll n;
    cin >> n;

    pair<ll, ll> p[n];

    for (ll i = 0; i < n; i++)
    {
        cin >> p[i].F;
    }

    vector<ll> speed_pos, speed_neg;

    for (ll i = 0; i < n; i++)
    {
        cin >> p[i].S;

        if (p[i].S >= 0)
        {
            speed_pos.PB(p[i].S);
        }
        else
        {
            speed_neg.PB(p[i].S);
        }
    }

    sort(speed_pos.begin(), speed_pos.end());
    sort(speed_neg.begin(), speed_neg.end());
    sort(p, p + n);

    map<ll, bool> visto;
    map<ll, ll> pos;
    map<ll, ll> neg;

    ll lastp = 0, lastn = 0;

    for (auto v : speed_pos)
    {
        if (!visto[v])
        {
            pos[v] = lastp;
            visto[v] = true;
            lastp++;
        }
    }

    for (auto v : speed_neg)
    {
        if (!visto[v])
        {
            neg[v] = lastn;
            visto[v] = true;
            lastn++;
        }
    }

    for (ll i = 0; i < n; i++)
    {
        if (p[i].S >= 0)
        {
            p[i].S = pos[p[i].S];
        }
        else
        {
            p[i].S = -1 * neg[p[i].S] - 1;
        }
    }

    ll siz = 200005;

    ST posi, negi;
    posi.create(siz);
    negi.create(siz);

    ll res = 0, me;
    pair<ll, ll> my;

    for (auto v : p)
    {

        if (v.S >= 0)
        {
            my = negi.calc(1, 0, siz, 0, siz);
            res += (v.F * my.S - my.F);
            my = posi.calc(1, 0, siz, 0, v.S);

            res += (v.F * my.S - my.F);
            posi.assign(1, 0, siz, v.S, v.F);
        }
        else
        {
            me = -1 * v.S;
            my = negi.calc(1, 0, siz, 0, me);
            res += (v.F * my.S - my.F);
            negi.assign(1, 0, siz, me, v.F);
        }
    }

    cout << res << endl;
}


int main()
{

    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);

    ifstream fin(""text.in"");
    ofstream fout(""text.out"");

    ll t = 1;
    while (t--)
        solve();

    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define FOR(i, a, b) for (int i = a; i <= b; i++)
#define REP(i, a, b) for (int i = a; i >= b; i--)

#define x first
#define y second

using namespace std;

typedef pair<int, int> ii;
typedef long long i64;

const int N = (int)5e5 + 5;
const int inf = (int)2e9 + 5;
const int base = 500;
const int mode = 998244353;

ii a[N];

int n;
int x[N], v[N], nestx[N];
i64 b[N], b_rv[N];

void upd_rv(int u, int v)
{
    while (u > 0)
    {
        b[u]++;
        b_rv[u] += v;
        u -= u & -u;
    }
}

i64 get_rv(int u, int& amount)
{
    i64 ans = 0;
    while (u <= n)
    {
        amount += b[u];
        ans += b_rv[u];
        u += u & -u;
    }
    return ans;
}

int tim(int u)
{
    return lower_bound(nestx + 1, nestx + n + 1, u) - nestx;
}

void solve()
{
    cin >> n;
    FOR(i, 1, n) cin >> x[i];
    FOR(i, 1, n) cin >> v[i];

    FOR(i, 1, n)
    a[i] = ii(v[i], x[i]), nestx[i] = x[i];

    sort(a + 1, a + n + 1);
    sort(nestx + 1, nestx + n + 1);

    FOR(i, 1, n)
    {
        v[i] = a[i].x;
        x[i] = a[i].y;
    }

    i64 ans = 0;

    REP(i, n, 1)
    {
        int amount = 0;
        i64 current = get_rv(tim(x[i] + 1), amount);
        ans += current - (i64)amount * x[i];
        upd_rv(tim(x[i]), x[i]);
    }

    cout << ans << '\n';
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    // freopen("".inp"", ""r"", stdin);

    solve();
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#define IO                                                                                         \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(nullptr);                                                                              \
    cout.tie(nullptr)
#pragma GCC optimize(2)
#include <set>
#include <map>
#include <cmath>
#include <stack>
#include <queue>
#include <bitset>
#include <random>
#include <bitset>
#include <string>
#include <vector>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using pli = pair<ll, int>;
using pii = pair<int, int>;
constexpr ll mod = 1e9 + 7;
// int prime[1000010],cnt;
// bool st[1000010];
// void Pinit(int n)
// {
//     for(int i=2;i<=n;i++)
//     {
//         if(!st[i]) prime[++cnt]=i;
//         for(int j=1;prime[j]<=n/i;j++)
//         {
//             st[prime[j]*i]=1;
//             if(i%prime[j]==0) break;
//         }
//     }
// }
// ll C[1010][1010];
// void Cinit(int n)
// {
//     for(int i=0;i<=n;i++)
//         for(int j=0;j<=i;j++)
//             if(!j) C[i][j]=1;
//             else C[i][j]=(C[i-1][j]+C[i-1][j-1])%mod;
// }
//============================================================
constexpr int N = 200010;
struct node
{
    ll x;
    int v, id;
    bool operator<(const node& o) const
    {
        return x < o.x;
    }
} q[N];
int n, nn, b[N];
ll fw[2][N];
int lowbit(int x)
{
    return x & -x;
}
void update(int op, int k, int x)
{
    for (; k <= n; k += lowbit(k))
        fw[op][k] += x;
}
ll query(int op, int k)
{
    ll res = 0;
    for (; k; k -= lowbit(k))
        res += fw[op][k];
    return res;
}

int main()
{
    IO;
    int T = 1;
    // Pinit(1000000);
    // Cinit(1000);
    // cin>>T;
    while (T--)
    {
        cin >> n;
        for (int i = 1; i <= n; i++)
            cin >> q[i].x;
        for (int i = 1; i <= n; i++)
        {
            cin >> q[i].v;
            b[i] = q[i].v;
            q[i].id = i;
        }
        sort(b + 1, b + 1 + n);
        nn = unique(b + 1, b + 1 + n) - b - 1;
        for (int i = 1; i <= n; i++)
            q[i].v = lower_bound(b + 1, b + 1 + nn, q[i].v) - b;
        sort(q + 1, q + 1 + n);
        ll res = 0;
        for (int i = 1; i <= n; i++)
        {
            res += q[i].x * query(0, q[i].v) - query(1, q[i].v);
            update(0, q[i].v, 1);
            update(1, q[i].v, q[i].x);
        }
        cout << res << '\n';
    }
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"//#define debug
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 2e5 + 7;
struct node
{
    ll x, v;
} p[N];
int n;
ll b[N], c1[N], c2[N];

bool cmp(node a, node b)
{
    if (a.v != b.v)
        return a.v < b.v;
    else
        return a.x < b.x;
}

ll ask1(int x)
{
    ll ans = 0;
    for (; x; x -= x & -x)
        ans += c1[x];
    return ans;
}

void add1(int x, ll y)
{
    for (; x <= n; x += x & -x)
        c1[x] += y;
}

ll ask2(int x)
{
    ll ans = 0;
    for (; x; x -= x & -x)
        ans += c2[x];
    return ans;
}

void add2(int x, ll y)
{
    for (; x <= n; x += x & -x)
        c2[x] += y;
}

int main()
{
#ifdef debug
    freopen(""F://input.txt"", ""r"", stdin);
#endif
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%lld"", &p[i].x), b[i] = p[i].x;
    for (int i = 1; i <= n; i++)
        scanf(""%lld"", &p[i].v);
    sort(p + 1, p + n + 1, cmp);
    sort(b + 1, b + n + 1);
    ll ans = 0;
    for (int i = 1; i <= n; i++)
    {
        int id = lower_bound(b + 1, b + n + 1, p[i].x) - b;
        ll cnt = ask1(id), sum = ask2(id);
        ans += cnt * p[i].x - sum;
        add1(id, 1);
        add2(id, p[i].x);
    }
    printf(""%lld\n"", ans);
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// Found the pbds soln and all myself but just was having a minor issue in subtracting
// the sums of contri so took a little bit of help of traversing the array up and down
// and doing kind of weighted addn/subtrcn

// R<3S
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define hell 1000000007
#define PI 3.14159265358979323844
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define ALL(v) v.begin(), v.end()
#define SORT(v) sort(ALL(v))
#define REVERSE(v) reverse(ALL(v))
#define endl ""\n""
#define vecmax(v) max_element(all(v))
#define vecmin(v) min_element(all(v))
#define GCD(m, n) __gcd(m, n)
#define LCM(m, n) m*(n / GCD(m, n))
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define repA(i, a, n) for (int i = a; i <= (n); ++i)
#define repD(i, a, n) for (int i = a; i >= (n); --i)
#define trav(x) for (auto i : x)
#define sz(a) (int) a.size()
#define sl(a) (int) a.length()
#define int long long
#define ld long double
#define pii std::pair<int, int>
#define pll std::pair<ll, ll>
#define vi vector<int>
#define vl vector<ll>
#define vvi vector<vi>
#define vii vector<pii>
#define mii map<int, int>
#define mll map<ll, ll>


#define ordered_set                                                                                \
    tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>


using namespace std;

void solve()
{
    int n;
    cin >> n;
    int cnt = 0;
    vii v;
    int x[n], y[n];
    rep(i, n) cin >> x[i];
    rep(i, n)
    {
        cin >> y[i];
        v.pb({ x[i], y[i] });
    }
    SORT(v);
    ordered_set s;
    mii m;
    m[v[0].se]++;
    s.insert(v[0].se);
    repA(i, 1, n - 1)
    {

        s.insert(v[i].se);
        int len = sz(s);
        cnt += (s.order_of_key(v[i].se) + m[v[i].se]) * v[i].first;
        // 		cout<<(s.order_of_key(v[i].se) + m[v[i].se])*v[i].first<<endl;
        m[v[i].se]++;
    }
    s.clear();
    m.clear();
    s.insert(v[n - 1].se);
    repD(i, n - 2, 0)
    {
        int len = sz(s);
        cnt -= (len - s.order_of_key(v[i].se)) * v[i].first;
        // 		cout<<(len-s.order_of_key(v[i].se))*v[i].first<<endl;
        s.insert(v[i].se);
    }
    cout << cnt;
}


signed main()
{
    std::ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t;
    t = 1;
    // cin>>t;
    while (t--)
    {
        solve();
    }


    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define x first
#define v second

using namespace std;
typedef long long ll;

const ll MAXN = 4e5 + 7;

ll n, cnts[MAXN], sums[MAXN];
pair<ll, ll> p[MAXN];
ll val[MAXN];
map<ll, ll> pos;

ll get(pair<ll, ll> pt)
{
    ll ps = pos[pt.v];
    ll ct = 0, st = 0;
    for (ll i = ps; i > 0; i -= (i & (-i)))
        ct += cnts[i], st += sums[i];
    return pt.x * ct - st;
}

void update(pair<ll, ll> pt)
{
    ll ps = pos[pt.v];
    for (ll i = ps; i <= n; i += (i & (-i)))
    {
        cnts[i]++;
        sums[i] += pt.x;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cout.tie(0);
#ifdef OFFLINE
    freopen(""input.inp"", ""r"", stdin);
#endif
    cin >> n;
    for (ll i = 1; i <= n; ++i)
        cin >> p[i].x;
    for (ll i = 1; i <= n; ++i)
        cin >> p[i].v;
    set<ll> s;
    for (ll i = 1; i <= n; ++i)
        s.insert(p[i].v);
    for (ll cnt = 1; !s.empty(); ++cnt)
    {
        ll vt = *s.begin();
        pos[vt] = cnt;
        val[cnt] = vt;
        s.erase(s.begin());
    }
    sort(p + 1, p + n + 1);
    ll res = 0;
    for (ll i = 1; i <= n; ++i)
    {
        res += get(p[i]);
        update(p[i]);
    }
    cout << res;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define pb push_back
#define fi first
#define se second
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define sz(x) x.size()
#define pii pair<int, int>
#define en '\n'
#define sp ' '
#define smin(a, b) a = min(a, b)
#define smax(a, b) a = max(a, b)
#define ar array
using namespace std;
const ll mod = 998244353;
// const int mod = 1e9+7;
const int N = 2e5 + 2;
const int inf = 2e9;
const ll linf = 4e18;
ll val[N], cnt[N];
void upd(int x, ll v)
{
    int z = 0;
    if (v < 0)
        z--;
    else
        z++;
    for (; x < N; x += x & (-x))
    {
        cnt[x] += z;
        val[x] += v;
    }
}
ar<ll, 2> get(int x)
{
    ar<ll, 2> data;
    data = { 0, 0 };
    for (; x > 0; x -= x & (-x))
    {
        data[0] += cnt[x];
        data[1] += val[x];
    }
    return data;
}
ar<ll, 2> get2(int x)
{
    ar<ll, 2> a = get(N - 1);
    ar<ll, 2> b = get(x - 1);
    return { a[0] - b[0], a[1] - b[1] };
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cerr.tie(0);
    int n;
    cin >> n;
    vector<ar<ll, 2>> data(n), v(n);
    for (int i = 0; i < n; i++)
        cin >> data[i][0];
    for (int i = 0; i < n; i++)
    {
        cin >> data[i][1];
        v[i] = { data[i][1], i };
    }
    sort(all(v));
    int h = 0;
    data[v[0][1]][1] = ++h;
    for (int i = 1; i < n; i++)
    {
        data[v[i][1]][1] = h;
        if (v[i][0] != v[i - 1][0])
            data[v[i][1]][1] = ++h;
    }
    sort(all(data));
    for (int i = 0; i < n; i++)
    {
        upd(data[i][1], data[i][0]);
    }
    ll ans = 0;
    for (int i = 0; i < n; i++)
    {
        upd(data[i][1], -data[i][0]);
        ar<ll, 2> d = get2(data[i][1]);
        ans += d[1] - (d[0] * data[i][0]);
    }
    cout << ans;
    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define all(arr) (arr).begin(), (arr).end()
#define ll long long
#define pb push_back
#define sz(x) int((x).size())
#define fi first
#define se second
#define endl '\n'

const int N = 2e8 + 10;

unordered_map<int, ll> dist, cnt;

void inc(int r, int val)
{
    while (r < N)
    {
        dist[r] += val;
        cnt[r]++;
        r = r | (r + 1);
    }
}

pair<ll, ll> ps(int r)
{
    ll s = 0, c = 0;
    while (r >= 0)
    {
        s += dist[r], c += cnt[r];
        r = (r & (r + 1)) - 1;
    }
    return { s, c };
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    vector<pair<int, int>> a(n);
    for (auto & [ x, v ] : a)
        cin >> x;
    for (auto & [ x, v ] : a)
    {
        cin >> v;
        v += 1e8;
    }
    sort(all(a));
    ll ans = 0;
    for (auto & [ x, v ] : a)
    {
        auto[s, c] = ps(v);
        ans += (c * x - s);
        inc(v, x);
    }
    cout << ans << endl;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define pb push_back
#define mkp make_pair
#define fastio                                                                                     \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
#define pi 3.14159265359
#define all(x) x.begin(), x.end()
#define zer(x) memset(x, 0, sizeof x)
// PLEASE DON'T HACK I AM POOR :(
using namespace std;
vector<ll> brr(2e5 + 100), spd(2e5 + 100);
ll ans = 0;
void dq(ll lft, ll rt)
{
    if (lft == rt)
        return;
    if (lft > rt)
        return;
    else
    {

        // lft se right bharna hai elements ko
        vector<pair<ll, ll> > v1, v2, va1, va2;
        ll mid = (lft + rt) / 2;

        ll i, j, k, l, m, n;
        dq(lft, mid);
        dq(mid + 1, rt);

        for (i = lft; i <= mid; i++)
        {
            v1.pb({ brr[i], spd[i] });
            va1.pb({ spd[i], brr[i] });
        }
        for (i = mid + 1; i <= rt; i++)
        {
            v2.pb({ brr[i], spd[i] });
            va2.pb({ spd[i], brr[i] });
        }


        vector<ll> t1, t2;
        ll mx = -1e18, mn = 1e18;
        for (i = lft; i <= mid; i++)
        {
            mx = max(mx, brr[i]);
            t1.pb(spd[i]);
        }

        for (i = mid + 1; i <= rt; i++)
        {
            mn = min(mn, brr[i]);
            t2.pb(spd[i]);
        }
        sort(all(t1));
        sort(all(t2));
        sort(all(va1));
        sort(all(va2));
        vector<ll>::iterator it;
        ll cn = 0;
        for (i = 0; i < t1.size(); i++)
        {
            ll xcord = va1[i].second;
            ll dis = mx - xcord;
            ll num = t1[i];
            // first half me speed t1 hai to t1 ya usse kam jitne ho gaye
            it = lower_bound(all(t2), num);
            ll inx = 0;
            // num se equal ya zyada wale numbers honge bas
            if (it != t2.begin())
                inx = it - t2.begin();
            ll tot = (rt - (mid + 1) + 1);

            inx = tot - inx;
            ans += inx * dis;
            cn += inx;
            //			cout<<num<<"" OPPPPPPPP ""<<inx<<"" Hmm\n"";
        }

        ll diff = mn - mx;
        ans += diff * cn;

        //		cout<<""Pehle ""<<ans<<"" "";
        for (i = 0; i < t2.size(); i++)
        {
            ll xcord = va2[i].second;
            ll dis = xcord - mn;
            ll num = t2[i];
            ll ln = (lft - (mid)) + 1;
            // 1 2 3 ...... ln
            // lft se mid me num ya usse KAM
            it = upper_bound(all(t1), num);
            ll inx = 0;
            //			if(it!=t1.end()&&*it!=num)it++;
            if (it != t1.begin())
                inx = it - t1.begin();
            ll add = inx;
            //			ll tot=(rt-(mid+1)+1);
            //			add=tot-add;
            ans += add * dis;
        }

        //		cout<<lft<<"" ""<<rt<<"" ""<<ans<<"" ""<<cn<<"" ok\n"";
    }
}
int main()
{

    fastio ll i, j, k, l, m, n;
    cin >> n;
    vector<ll> arr(n), sp(n);
    for (i = 0; i < n; i++)
        cin >> arr[i];
    for (i = 0; i < n; i++)
        cin >> sp[i];
    vector<pair<ll, ll> > temp(n);
    for (i = 0; i < n; i++)
        temp[i] = { arr[i], sp[i] };
    sort(all(temp));
    for (i = 0; i < n; i++)
    {
        brr[i] = temp[i].first;
        spd[i] = temp[i].second;
    }
    ans = 0;
    dq(0, n - 1);
    cout << ans << ""\n"";
    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

long long get(vector<long long>& f, int pos)
{
    long long res = 0;
    for (; pos >= 0; pos = (pos & (pos + 1)) - 1)
        res += f[pos];
    return res;
}

void upd(vector<long long>& f, int pos, int val)
{
    for (; pos < int(f.size()); pos |= pos + 1)
    {
        f[pos] += val;
    }
}

int main()
{
#ifdef _DEBUG
    freopen(""input.txt"", ""r"", stdin);
//	freopen(""output.txt"", ""w"", stdout);
#endif

    int n;
    cin >> n;
    vector<pair<int, int>> p(n);
    for (auto& pnt : p)
        cin >> pnt.first;
    for (auto& pnt : p)
        cin >> pnt.second;
    sort(p.begin(), p.end());

    vector<int> vs;
    for (auto& pnt : p)
        vs.push_back(pnt.second);
    sort(vs.begin(), vs.end());
    vs.resize(unique(vs.begin(), vs.end()) - vs.begin());

    long long ans = 0;
    vector<long long> cnt(vs.size()), xs(vs.size());
    for (auto& pnt : p)
    {
        int pos = lower_bound(vs.begin(), vs.end(), pnt.second) - vs.begin();
        ans += get(cnt, pos) * 1ll * pnt.first - get(xs, pos);
        upd(cnt, pos, 1);
        upd(xs, pos, pnt.first);
    }

    cout << ans << endl;

    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <algorithm>
#define LL long long
using namespace std;
int n, t = 0;
LL ans = 0;
LL num[200002] = {}, val[200002] = {};
struct aaa
{
    LL x, y, v;
} p[200002];
inline bool cmp(aaa a, aaa b)
{
    return a.x < b.x ? 1 : 0;
}
inline bool cmp1(aaa a, aaa b)
{
    return a.v == b.v ? (a.x < b.x) : (a.v < b.v);
}
inline int lowbit(int x)
{
    return x & (-x);
}
inline void modify(int x, LL d, LL arr[])
{
    while (x <= n)
        arr[x] += d, x += lowbit(x);
}
inline LL query(int x, LL arr[])
{
    LL res = 0;
    while (x)
        res += arr[x], x -= lowbit(x);
    return res;
}
int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; ++i)
        scanf(""%lld"", &p[i].x);
    for (int i = 1; i <= n; ++i)
        scanf(""%lld"", &p[i].v);
    sort(p + 1, p + n + 1, cmp);
    for (int i = 1, j, la; i <= n; i = j)
    {
        ++t, la = p[i].x;
        for (j = i; p[j].x == la; ++j)
            p[j].y = t;
    }
    sort(p + 1, p + n + 1, cmp1);
    for (int i = 1; i <= n; ++i)
        ans += p[i].x * query(p[i].y - 1, num) - query(p[i].y - 1, val),
            modify(p[i].y, p[i].x, val), modify(p[i].y, 1, num);
    printf(""%lld"", ans);
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <algorithm>

#define RI register int

using namespace std;

namespace IO
{
static char buf[1 << 20], *fs, *ft;
inline char gc()
{
    if (fs == ft)
    {
        ft = (fs = buf) + fread(buf, 1, 1 << 20, stdin);

        if (fs == ft)
            return EOF;
    }

    return *fs++;
}
#define gc() getchar()
inline int read()
{
    int x = 0, f = 1;
    char s = gc();

    while (s < '0' || s > '9')
    {
        if (s == '-')
            f = -f;

        s = gc();
    }

    while (s >= '0' && s <= '9')
    {
        x = x * 10 + s - '0';
        s = gc();
    }

    return x * f;
}
}
using IO::read;

const int N = 200100;

int n;

struct Node
{
    int x;
    int v;
} a[N];

bool cmp(Node a, Node b)
{
    return a.x < b.x;
}

int len, mapval[N];

void discrete()
{
    sort(mapval + 1, mapval + 1 + len);
    len = unique(mapval + 1, mapval + 1 + len) - mapval - 1;
}

int Real(int x)
{
    return lower_bound(mapval + 1, mapval + 1 + len, x) - mapval;
}

long long c[N][2];

void add(int x, int k, int val)
{
    for (; x <= len; x += x & -x)
        c[x][k] += val;
}

long long ask(int x, int k)
{
    long long ans = 0;

    for (; x; x -= x & -x)
        ans += c[x][k];

    return ans;
}

long long ans;

int main()
{
    n = read();

    for (RI i = 1; i <= n; i++)
        a[i].x = read();

    for (RI i = 1; i <= n; i++)
        mapval[++len] = a[i].v = read();

    sort(a + 1, a + 1 + n, cmp);

    discrete();

    for (RI i = 1; i <= n; i++)
        a[i].v = Real(a[i].v);

    for (RI i = 1; i <= n; i++)
    {
        ans += a[i].x * ask(a[i].v, 0) - ask(a[i].v, 1);
        add(a[i].v, 0, 1), add(a[i].v, 1, a[i].x);
    }

    printf(""%lld\n"", ans);

    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
// Merge procedure to merge two
// vectors into a single vector
vector<int> merge(vector<int>& v1, vector<int>& v2)
{
    int i = 0, j = 0;

    // Final vector to return
    // after merging
    vector<int> v;

    // Loop continues until it reaches
    // the end of one of the vectors
    while (i < v1.size() && j < v2.size())
    {
        if (v1[i] <= v2[j])
        {
            v.push_back(v1[i]);
            i++;
        }
        else
        {
            v.push_back(v2[j]);
            j++;
        }
    }

    // Here, simply add the remaining
    // elements to the vector v
    for (int k = i; k < v1.size(); k++)
        v.push_back(v1[k]);
    for (int k = j; k < v2.size(); k++)
        v.push_back(v2[k]);
    return v;
}

// Procedure to build the segment tree
void buildTree(vector<int>* tree, int* arr, int index, int s, int e)
{

    // Reached the leaf node
    // of the segment tree
    if (s == e)
    {
        tree[index].push_back(arr[s]);
        return;
    }

    // Recursively call the buildTree
    // on both the nodes of the tree
    int mid = (s + e) / 2;
    buildTree(tree, arr, 2 * index, s, mid);
    buildTree(tree, arr, 2 * index + 1, mid + 1, e);

    // Storing the final vector after merging
    // the two of its sorted child vector
    tree[index] = merge(tree[2 * index], tree[2 * index + 1]);
}

// Query procedure to get the answer
// for each query l and r are query range
int query(vector<int>* tree, int index, int s, int e, int l, int r, int k)
{

    // out of bound or no overlap
    if (r < s || l > e)
        return 0;

    // Complete overlap
    // Query range completely lies in
    // the segment tree node range
    if (s >= l && e <= r)
    {
        // binary search to find index of k
        return (tree[index].size()
            - (lower_bound(tree[index].begin(), tree[index].end(), k) - tree[index].begin()));
    }

    // Partially overlap
    // Query range partially lies in
    // the segment tree node range
    int mid = (s + e) / 2;
    return (
        query(tree, 2 * index, s, mid, l, r, k) + query(tree, 2 * index + 1, mid + 1, e, l, r, k));
}

// Function to perform the queries
void performQueries(int L[], int R[], int K[], int n, int q, vector<int> tree[])
{
    for (int i = 0; i < q; i++)
    {
        cout << query(tree, 1, 0, n - 1, L[i] - 1, R[i] - 1, K[i]) << endl;
    }
}

// Driver code
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    int a[n], v[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 0; i < n; i++)
        cin >> v[i];
    vector<pair<int, int>> vals;
    for (int i = 0; i < n; i++)
    {
        vals.push_back({ a[i], v[i] });
    }
    sort(vals.begin(), vals.end());
    for (int i = 0; i < n; i++)
    {
        a[i] = vals[i].first;
        v[i] = vals[i].second;
    }
    vector<int> tree[4 * n + 1];
    buildTree(tree, v, 1, 0, n - 1);
    int ans = 0;
    for (int i = 0; i < n; i++)
    {
        if (i > 0)
        {
            int p = i - query(tree, 1, 0, n - 1, 0, i - 1, v[i] + 1);
            ans += p * a[i];
        }
        if (i < n - 1)
        {
            int p = query(tree, 1, 0, n - 1, i + 1, n - 1, v[i]);
            ans -= p * a[i];
        }
    }
    cout << ans;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
#define all(x) x.begin(), x.end()
#define ld long double
const long long inf = 1e18 + 5LL;
const int mod = 1e9 + 7LL;
const int N = (1e6 + 10);
void solve();
void ITO();
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ITO();
    int t = 1;
    // cin >> t;
    while (t--)
        solve();
    return 0;
}
array<int, 2> BIT[N];
auto get(int j)
{
    array<int, 2> res = { 0, 0 };
    while (j > 0)
    {
        res[0] += BIT[j][0];
        res[1] += BIT[j][1];
        j -= (j & -j);
    }
    return res;
}
void update(int j, int delta)
{
    while (j < N)
    {
        BIT[j][0] += delta;
        BIT[j][1] += 1;
        j += (j & -j);
    }
}
void solve()
{
    int n;
    cin >> n;
    array<int, 2> arr[n];
    for (auto& x : arr)
        cin >> x[0];
    for (auto& x : arr)
        cin >> x[1];
    sort(arr, arr + n);
    map<int, int> mask;
    for (auto x : arr)
        mask[x[1]] = 0;
    auto it = mask.begin();
    for (int i = 1; i <= mask.size(); i++)
    {
        it->second = i;
        ++it;
    }
    int res = 0;
    for (int i = n - 1; i >= 0; --i)
    {
        int j = mask[arr[i][1]];
        auto now = get(N - 5);
        auto n2 = get(j - 1);
        now[0] -= n2[0];
        now[1] -= n2[1];
        // cout << now[0] << "" "" << (now[1]) << ""\n"";
        res += now[0] - (now[1] * arr[i][0]);
        update(j, arr[i][0]);
    }
    cout << res;
    cout << ""\n"";
    return;
}
void ITO()
{
#ifndef ONLINE_JUDGE
    freopen(""inputf.in"", ""r"", stdin);
    freopen(""outputf1.in"", ""w"", stdout);
#endif
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define F first
#define S second

using namespace std;

long long n;
vector<long long> PI, V;
vector<long long> F1, F2;

void update(long long x, long long pos)
{

    for (; x <= n; x += x & -x)
    {
        F1[x] += pos;
        F2[x] += 1;
    }
}

void query(long long x, long long& suma, long long& cant)
{

    for (; x > 0; x -= x & -x)
    {
        suma += F1[x];
        cant += F2[x];
    }
}

int main()
{

    cin >> n;
    PI.assign(n, 0);
    V.assign(n, 0);
    F1.assign(n + 1, 0);
    F2.assign(n + 1, 0);

    for (long long i = 0; i < n; i++)
        cin >> PI[i];
    for (long long i = 0; i < n; i++)
        cin >> V[i];

    vector<pair<long long, long long>> orden(n);

    for (long long i = 0; i < n; i++)
        orden[i].F = V[i], orden[i].S = i;

    sort(orden.begin(), orden.end());

    long long K = 1;

    V[orden[0].S] = K;

    for (long long i = 1; i < n; i++)
    {
        if (orden[i].F != orden[i - 1].F)
            K++;
        V[orden[i].S] = K;
    }

    for (long long i = 0; i < n; i++)
        orden[i].F = PI[i], orden[i].S = V[i];

    sort(orden.begin(), orden.end());

    for (long long i = 0; i < n; i++)
    {
        PI[i] = orden[i].F;
        V[i] = orden[i].S;
    }

    // for (int i=0; i<n; i++) cout << PI[i] << "" "" << V[i] << endl;

    long long s = 0;

    update(V[0], PI[0]);

    for (long long i = 1; i < n; i++)
    {

        long long suma = 0, cant = 0;
        query(V[i], suma, cant);

        s += (cant * PI[i]) - suma;

        // cout << s << "" "" << cant << "" "" << suma << endl;

        update(V[i], PI[i]);
    }

    cout << s << endl;

    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define INF (ll)1e9
#define EPS 1e-4
#define pb push_back
#define pause system(""pause"")
#define exit exit(0)
#define endl '\n'

using namespace std;
using ull = unsigned long long;
using ll = long long;

typedef pair<int, int> pii;
const int N = 200005, MOD = 1e9 + 7;

int rnd()
{
    int ans = rand();
    return (ans << 15) | rand();

    static int x = 0;
    return (x = (x * 1012321203 + 23489) & (1ll << 31 - 1));
}

typedef struct item* pitem;
struct item
{
    pitem l, r;
    int cnt, x, y;
    ll sm;
    item()
        : l(NULL)
        , r(NULL)
    {
    }
    item(int x)
        : x(x)
        , sm(x)
        , y(rnd())
        , cnt(1)
        , l(NULL)
        , r(NULL)
    {
    }
};

int cnt(pitem t)
{
    return t ? t->cnt : 0;
}

ll sm(pitem t)
{
    return t ? t->sm : 0;
}

void upd_cnt(pitem& t)
{
    if (t)
    {
        t->cnt = cnt(t->l) + cnt(t->r) + 1;
        t->sm = sm(t->l) + sm(t->r) + t->x;
    }
}

void split(pitem t, pitem& l, pitem& r, int x)
{
    if (!t)
    {
        return void(l = r = NULL);
    }
    else if (x < t->x)
    {
        split(t->l, l, t->l, x), r = t;
    }
    else
    {
        split(t->r, t->r, r, x), l = t;
    }

    upd_cnt(t);
}

void merge(pitem& t, pitem l, pitem r)
{
    if (!l || !r)
    {
        t = l ? l : r;
    }
    else if (l->y > r->y)
    {
        merge(l->r, l->r, r), t = l;
    }
    else
    {
        merge(r->l, l, r->l), t = r;
    }

    upd_cnt(t);
}

void insert(pitem& t, pitem it)
{
    if (!t)
    {
        t = it;
    }
    else if (it->y > t->y)
    {
        split(t, it->l, it->r, it->x), t = it;
    }
    else
    {
        insert(it->x < t->x ? t->l : t->r, it);
    }

    upd_cnt(t);
}

int n;
pitem t;
pii l[N];

ll get(int x)
{
    pitem l, r;
    split(t, l, r, x);
    ll ans = (ll)x * cnt(l) - sm(l);
    merge(t, l, r);
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    srand(time(NULL));

    cin >> n;
    for (int i = 0; i < n; ++i)
    {
        cin >> l[i].second;
    }

    for (int i = 0; i < n; ++i)
    {
        cin >> l[i].first;
    }

    sort(l, l + n);

    ll ans = 0;
    for (int i = 0; i < n; ++i)
    {
        int j = i;
        while (j + 1 < n && l[j + 1].first == l[i].first)
        {
            ++j;
        }

        vector<int> v;
        for (int k = i; k <= j; ++k)
        {
            v.pb(l[k].second);
            ans += get(l[k].second);
        }

        sort(v.begin(), v.end());
        ll sm = 0;
        for (int k = 0; k < (int)v.size(); ++k)
        {
            ans += (ll)k * v[k] - sm;
            sm += v[k];
        }

        for (int k = i; k <= j; ++k)
        {
            insert(t, new item(l[k].second));
        }

        i = j;
    }

    cout << ans << endl;
    // pause;
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define pb push_back
using namespace std;
const int N = 2e5 + 10;
struct P
{
    int x, v;
    bool operator<(const P& t) const
    {
        return v < t.v;
    }
} p[N];
int n;
int tr[N];
int lowbit(int x)
{
    return x & -x;
}
void add(int x, int d)
{
    for (int i = x; i <= n; i += lowbit(i))
        tr[i] += d;
}
int sum(int x)
{
    int res = 0;
    for (int i = x; i; i -= lowbit(i))
        res += tr[i];
    return res;
}
int tr1[N];
void add1(int x, int d)
{
    for (int i = x; i <= n; i += lowbit(i))
        tr1[i] += d;
}
int sum1(int x)
{
    int res = 0;
    for (int i = x; i; i -= lowbit(i))
        res += tr1[i];
    return res;
}
vector<int> x;
int query(int xx)
{
    int id = lower_bound(x.begin(), x.end(), xx) - x.begin();
    return id + 1;
}
int main()
{
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> p[i].x, x.pb(p[i].x);
    for (int i = 1; i <= n; i++)
        cin >> p[i].v;
    sort(p + 1, p + 1 + n);
    sort(x.begin(), x.end());
    x.erase(unique(x.begin(), x.end()), x.end());
    ll ans = 0;
    queue<int> q;
    for (int i = 1; i <= n; i++)
    {
        int id;
        while (q.size() && p[q.front()].v != p[i].v)
        {
            int id = query(p[q.front()].x);
            add(id, 1);
            q.pop();
        }
        id = query(p[i].x);
        ll num = sum(id - 1), num1 = sum1(id - 1);
        // cout<<q.size()<<"" ""<<num<<"" ""<<num1<<""\n"";
        ans += num1 * p[i].x;
        ans -= (q.size() - (num1 - num)) * p[i].x;
        add1(id, 1);
        q.push(i);
    }
    // cout<<ans<<""\n"";
    memset(tr, 0, sizeof tr);
    memset(tr1, 0, sizeof tr1);
    while (q.size())
        q.pop();
    for (int i = n; i >= 1; i--)
    {
        int id;
        while (q.size() && p[q.front()].v != p[i].v)
        {
            int id = query(p[q.front()].x);
            add(id, 1);
            q.pop();
        }
        id = query(p[i].x);
        ll num = (n - i) - sum(id), num1 = (n - i) - sum1(id);
        ans -= num1 * p[i].x;
        ans += (num - num1) * p[i].x;
        add1(id, 1);
        q.push(i);
    }
    cout << ans;
    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define db double
#define rep(x, a, b) for (int x = (a); x <= (b); x++)
#define per(x, a, b) for (int x = (a); x >= (b); x--)
#define scf(a) scanf(""%d"", &a)
#define scfll(a) scanf(""%lld"", &a)
#define scfdb(a) scanf(""%lf"", &a)
#define ptf(a) printf(""%d"", a)
#define ptfll(a) printf(""%lld"", a)
#define ptfdb(x, a) printf(""%x.lf"", a)
#define ptfsp(a) printf(""%d "", a)
#define ptfllsp(a) printf(""%lld "", a)
#define ptfdbsp(x, a) printf(""%x.lf "", a)
#define pli(a, b) make_pair(a, b)
#define pb push_back
#define el puts("""")
#define ls pos << 1
#define rs pos << 1 | 1
#define pi 3.1415926
// ios::sync_with_stdio(false);
using namespace std;
const ll mod = 1e9 + 7;
const int maxn = 2e5 + 5;
struct node
{
    int x, v, nv;
    bool operator<(const node& a) const
    {
        return x < a.x;
    }
} p[maxn];
map<int, int> mp;
ll c[maxn][2];
void add(int x, int n, int val0, int val1)
{
    for (int i = x; i <= n; i += i & -i)
        c[i][0] += val0, c[i][1] += val1;
}
ll sum0(int x)
{
    ll ans = 0;
    for (int i = x; i; i -= i & -i)
        ans += c[i][0];
    return ans;
}
ll sum1(int x)
{
    ll ans = 0;
    for (int i = x; i; i -= i & -i)
        ans += c[i][1];
    return ans;
}
int main()
{
    int n;
    scf(n);
    rep(i, 1, n) scf(p[i].x);
    rep(i, 1, n) scf(p[i].v);
    sort(p + 1, p + n + 1);
    rep(i, 1, n) mp[p[i].v] = 1;
    int cnt = 0;
    for (auto it = mp.begin(); it != mp.end(); it++)
        it->second = ++cnt;
    rep(i, 1, n) p[i].nv = mp[p[i].v];
    ll ans = 0;
    rep(i, 1, n) add(p[i].nv, cnt, p[i].x, 1);
    rep(i, 1, n)
    {
        add(p[i].nv, cnt, -p[i].x, -1);
        ans += (sum0(cnt) - sum0(p[i].nv - 1)) - (sum1(cnt) - sum1(p[i].nv - 1)) * p[i].x;
    }
    cout << ans;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
using namespace std;
#define ll long long

const int N = 2e5 + 20;

int n;
pair<int, int> p[N];
struct node
{
    ll sum, count;
    node(ll s = 0, ll c = 0)
        : sum(s)
        , count(c)
    {
    }
} bit[N];

void update(int x, int delta)
{
    for (; x <= n; x += x & -x)
    {
        auto & [ sum, count ] = bit[x];
        sum += delta;
        count++;
    }
}

node query(int x)
{
    auto ans = node();
    for (; x > 0; x -= x & -x)
    {
        auto & [ sum, count ] = bit[x];
        ans.sum += sum;
        ans.count += count;
    }
    return ans;
}

int compress(vector<int>& v)
{
    if (v.empty())
        return 0;
    vector<int> s = v;
    sort(s.begin(), s.end());
    s.resize(unique(s.begin(), s.end()) - s.begin());

    int mx = 1;
    for (int& x : v)
    {
        x = lower_bound(s.begin(), s.end(), x) - s.begin() + 1;
        mx = max(mx, x);
    }
    return mx;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> p[i].first;
    for (int i = 0; i < n; i++)
        cin >> p[i].second;
    sort(p, p + n);

    vector<int> vec(n);
    for (int i = 0; i < n; i++)
        vec[i] = p[i].second;
    compress(vec);

    ll ans = 0;
    for (int i = 0; i < n; i++)
    {
        auto[sum, cnt] = query(vec[i]);
        ans += cnt * p[i].first - sum;
        update(vec[i], p[i].first);
    }

    cout << ans;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 200005;
struct node
{
    ll x, v;
} a[N];
int n;
ll ans, s[N], c1[N], c2[N];
bool cmp(node a, node b)
{
    return a.x < b.x;
}
int lowbit(int x)
{
    return x & (-x);
}
void add1(int x, ll v)
{
    for (; x <= n; x += lowbit(x))
        c1[x] += v;
}
void add2(int x, ll v)
{
    for (; x <= n; x += lowbit(x))
        c2[x] += v;
}
ll ask1(int x)
{
    ll res = 0;
    for (; x; x -= lowbit(x))
        res += c1[x];
    return res;
}
ll ask2(int x)
{
    ll res = 0;
    for (; x; x -= lowbit(x))
        res += c2[x];
    return res;
}
int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%lld"", &a[i].x);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%lld"", &a[i].v);
        s[i] = a[i].v;
    }
    sort(a + 1, a + n + 1, cmp);
    int nn = n;
    sort(s + 1, s + nn + 1);
    nn = unique(s + 1, s + nn + 1) - s - 1;
    for (int i = 1; i <= n; i++)
        a[i].v = lower_bound(s + 1, s + nn + 1, a[i].v) - s;
    for (int i = 1; i <= n; i++)
    {
        ans += a[i].x * ask1(a[i].v) - ask2(a[i].v);
        add1(a[i].v, 1);
        add2(a[i].v, a[i].x);
    }
    printf(""%lld"", ans);
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define ull unsigned ll
#define uint unsigned
#define pii pair<int, int>
#define pll pair<ll, ll>
#define IT iterator
#define PB push_back
#define fi first
#define se second
#define all(a) a.begin(), a.end()
#define mid ((r + l) >> 1)
#define lson p << 1, l, mid
#define rson p << 1 | 1, mid + 1, r
#define For(i, j, k) for (int i = (int)(j); i <= (int)(k); i++)
#define Rep(i, j, k) for (int i = (int)(j); i >= (int)(k); i--)
#define CLR(a, v) memset(a, v, sizeof(a));
#define CPY(a, b) memcpy(a, b, sizeof(a));
#define debug                                                                                      \
    cout << ""dsdsdsdsd""                                                                            \
         << ""\n"";
#define y1 yzang
using namespace std;
#define int long long
const int maxn = 2e5 + 10;

int n, m;
int b[maxn], p[maxn];
int c1[maxn], c2[maxn];
struct node
{
    int x, v;
} a[maxn];
int lowbit(int x)
{
    return x & -x;
}
void add1(int x, int k)
{
    for (int i = x; i <= n; i += lowbit(i))
    {
        c1[i]++;
    }
}
int que1(int x)
{
    int ans = 0;
    for (int i = x; i; i -= lowbit(i))
    {
        ans += c1[i];
    }
    return ans;
}
void add2(int x, int k)
{
    for (int i = x; i <= n; i += lowbit(i))
    {
        c2[i] += k;
    }
}
int que2(int x)
{
    int ans = 0;
    for (int i = x; i; i -= lowbit(i))
    {
        ans += c2[i];
    }
    return ans;
}
pii v[maxn];
signed main()
{
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i].x;
    }
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i].v;
        b[i] = a[i].v;
    }
    sort(b + 1, b + 1 + n);
    m = unique(b + 1, b + 1 + n) - b - 1;
    for (int i = 1; i <= n; i++)
    {
        a[i].v = lower_bound(b + 1, b + 1 + n, a[i].v) - b;
    }
    sort(a + 1, a + 1 + n, [](node x, node y)
        {
            return x.x < y.x;
        });
    // for(int i = 1; i <= n; i++) {
    // 	cout << a[i].v << "" \n""[i == n];
    // }
    ll ans = 0;
    for (int i = 1; i <= n; i++)
    {
        int cnt = que1(a[i].v);
        int sum = que2(a[i].v);
        ans += (cnt * a[i].x - sum);
        add1(a[i].v, 1);
        add2(a[i].v, a[i].x);
    }
    cout << ans << ""\n"";

    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// luogu.CF1311F Moving Points
#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N = 2e5 + 1;

struct Point
{
    int x, v;
    bool operator<(const Point& y) const
    {
        return x < y.x;
    }
};

int n, lsh[N];
Point p[N];

LL t[N], ans;

#define lb(x) (x & -x)
class BIT
{
private:
    LL t[N];

public:
    void insert(int i, int x)
    {
        for (; i <= n; i += lb(i))
            t[i] += x;
    }
    LL sum(int i)
    {
        LL res = 0;
        for (; i; i -= lb(i))
            res += t[i];
        return res;
    }
} t1, t2;

int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; ++i)
        scanf(""%d"", &p[i].x);
    for (int i = 1; i <= n; ++i)
        scanf(""%d"", &p[i].v), lsh[i] = p[i].v;
    sort(lsh + 1, lsh + 1 + n);
    lsh[0] = unique(lsh + 1, lsh + 1 + n) - lsh - 1;
    for (int i = 1; i <= n; ++i)
        p[i].v = lower_bound(lsh + 1, lsh + 1 + lsh[0], p[i].v) - lsh;
    sort(p + 1, p + 1 + n);
    t1.insert(p[1].v, 1), t2.insert(p[1].v, p[1].x);
    for (int i = 2; i <= n; ++i)
    {
        ans += p[i].x * t1.sum(p[i].v) - t2.sum(p[i].v);
        t1.insert(p[i].v, 1), t2.insert(p[i].v, p[i].x);
    }
    printf(""%lld"", ans);
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
using ll = long long;

struct FT
{
    int n;
    vector<ll> ft;
    FT(int n)
        : n(n)
        , ft(n + 1){};
    void upd(int i, int x)
    {
        for (; i <= n; i += i & -i)
        {
            ft[i] += x;
        }
    }
    ll qry(int i)
    {
        ll res = 0;
        for (; i; i -= i & -i)
        {
            res += ft[i];
        }
        return res;
    }
};

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin >> n;
    vector<int> x(n), v(n);
    for (auto& i : x)
    {
        cin >> i;
    }
    for (auto& i : v)
    {
        cin >> i;
    }
    vector<int> a(n);
    iota(a.begin(), a.end(), 0);
    sort(a.begin(), a.end(), [&](int a, int b)
        {
            return x[a] < x[b];
        });
    vector<int> b = v;
    sort(b.begin(), b.end());
    ll ans = 0;
    FT sm(n), cnt(n);
    for (int i = 0; i < n; i++)
    {
        int loc = x[a[i]], sp = v[a[i]];
        int wh = lower_bound(b.begin(), b.end(), sp) - b.begin() + 1;
        ans += (ll)loc * cnt.qry(wh) - sm.qry(wh);
        sm.upd(wh, loc);
        cnt.upd(wh, 1);
    }
    cout << ans;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>

using namespace std;
// using namespace __gnu_pbds;

#define fastio                                                                                     \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0)
#define fp(i, a, b) for (int i = a; i < b; i++)
#define fn(i, a, b) for (int i = a; i >= b; i--)
#define ones(x) __builtin_popcount(x)
#define pb push_back
#define mk make_pair
#define ff first
#define ss second
#define all(x) x.begin(), x.end()
#define dbg(x) cout << (#x) << "" = "" << x << "" ""
#define fini cout << ""\n"";
#define line cout << ""-----------------------------------\n"";
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<pii> vpii;
typedef vector<pll> vpll; /*
 typedef tree<
 int,
 null_type,
 greater<int>,
 rb_tree_tag,
 tree_order_statistics_node_update>
 ordered_set;*/
/*
int read (){
    int x = 0, f = 1; char s = getchar();while (s < '0' || s > '9') {if (s == '-') f = -1; s =
getchar();}
    while (s >= '0' && s <= '9') x = x * 10 + s - '0', s = getchar();
    return x * f;
}*/
const int M = 2e5 + 7;
const int N = 1e6 + 7;
const ll inf = 2e9;
const int mod = 1e9 + 7;

int n;
pll x[M];
pll bit[M];
vll a;

pll op(pll a, pll b)
{
    return { a.ff + b.ff, a.ss + b.ss };
}

void up(int i, pll x)
{
    for (; i <= n; i += i & -i)
        bit[i] = op(bit[i], x);
}

pll que(int i)
{
    pll ans = { 0, 0 };
    for (; i > 0; i -= i & -i)
        ans = op(ans, bit[i]);
    return ans;
}

void go(int ide)
{
    cin >> n;
    fp(i, 0, n)
    {
        cin >> x[i].ss;
        a.pb(x[i].ss);
    }
    fp(i, 0, n) cin >> x[i].ff;
    sort(x, x + n);
    sort(all(a));

    ll ans = 0;
    fp(i, 0, n)
    {
        int b = (lower_bound(all(a), x[i].ss) - a.begin()) + 1;
        pll r = que(b);
        ans += r.ss * x[i].ss - r.ff;
        up(b, { x[i].ss, 1 });
    }

    cout << ans << ""\n"";
}

int main()
{
    fastio;
    int tst = 1;
    // cin >> tst;
    // cout << fixed << setpresicion(12);
    fp(i, 0, tst) go(i + 1);

    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define st first
#define nd second
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;
ii a[200005];
ll bit[200005];
int n;

void update(int pos, int value)
{
    for (int i = pos; i <= n; i += i & -i)
        bit[i] = bit[i] + value;
}

ll get(int pos)
{
    ll res = 0;
    for (int i = pos; i >= 1; i -= i & -i)
        res = res + bit[i];
    return res;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i].nd;
    }
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i].st;
    }
    sort(a + 1, a + 1 + n);
    int cur = 0;
    int num = 0;
    for (int i = 1; i <= n; i++)
    {
        if (a[i].st != cur)
        {
            cur = a[i].st;
            num++;
            a[i].st = num;
        }
        else
            a[i].st = num;
    }
    for (int i = 1; i <= n; i++)
    {
        int tmp = a[i].st;
        a[i].st = a[i].nd;
        a[i].nd = tmp;
    }
    sort(a + 1, a + 1 + n);
    ll ans = 0;
    for (int i = 1; i <= n; i++)
    {
        ll bigger = get(a[i].nd);
        ans = ans + bigger * (ll)a[i].st;
        update(a[i].nd, 1);
        // cout<<a[i].nd<<' '<<get(a[i].nd)<<endl;
    }
    // cout<<ans<<endl;
    for (int i = 1; i <= n; i++)
    {
        bit[i] = 0;
    }
    for (int i = n; i >= 1; i--)
    {
        ll smaller = get(n) - get(a[i].nd - 1);
        ans = ans - smaller * (ll)a[i].st;
        update(a[i].nd, 1);
    }
    cout << ans << endl;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
using LL = long long int;

template <class T>
struct Binary_Indexed_Tree
{
    int maxSize;
    T* data;
    Binary_Indexed_Tree(int init_Size)
        : maxSize(init_Size)
    {
        data = new T[maxSize + 5];
        memset(data, 0, sizeof(T) * (maxSize + 5));
    }
    ~Binary_Indexed_Tree()
    {
        delete[] data;
    }
    void add(int loc, T val)
    {
        while (loc < maxSize)
        {
            data[loc] += val;
            loc += (loc & (-loc));
        }
        return;
    }
    T query(int loc)
    {
        T ans = 0;
        while (loc > 0)
        {
            ans += data[loc];
            loc -= (loc & (-loc));
        }
        return ans;
    }
};

struct point
{
    LL x, v;
    point(LL x_ = 0, LL v_ = 0)
        : x(x_)
        , v(v_)
    {
    }
    bool operator<(const point& b)
    {
        return x < b.x;
    }
};

const int maxn = 2e5 + 5;
point p[maxn];
int n = 0, v[maxn];

int main(void)
{
    scanf(""%d"", &n);
    for (int i = 0; i < n; ++i)
        scanf(""%lld"", &p[i].x);
    for (int i = 0; i < n; ++i)
    {
        scanf(""%lld"", &p[i].v);
        v[i] = p[i].v;
    }
    sort(p, p + n);
    sort(v, v + n);
    int cnt = unique(v, v + n) - v;
    auto getid = [=](LL val)
    {
        return lower_bound(v, v + cnt, val) - v + 1;
    };
    Binary_Indexed_Tree<LL> c(n + 5);
    Binary_Indexed_Tree<LL> x(n + 5);
    LL ans = 0;
    for (int i = 0; i < n; ++i)
    {
        LL id = getid(p[i].v);
        LL cnt = c.query(id);
        LL sum = x.query(id);
        ans += (cnt * p[i].x - sum);
        c.add(id, 1);
        x.add(id, p[i].x);
    }
    printf(""%lld"", ans);
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define f first
#define s second
#define mod 1000000007
#define N 1000043
#define mp(a, b) make_pair(a, b)
#define pb(a) push_back(a)
#define loop(a, b) for (int i = a; i < b; i++)
#define test                                                                                       \
    int t;                                                                                         \
    cin >> t;                                                                                      \
    while (t--)
#define pll pair<ll, ll>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define ordered_set                                                                                \
    tree<pll, null_type, less_equal<pll>, rb_tree_tag, tree_order_statistics_node_update>
using namespace __gnu_pbds;

/// order_of_key (k) : Number of items strictly smaller than k .
/// find_by_order(k) : K-th element in a set (counting from zero).

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n;
    cin >> n;
    vector<pll> vec(n), neg, pos;
    loop(0, n) cin >> vec[i].f;
    loop(0, n) cin >> vec[i].s;
    ordered_set myset;
    sort(vec.begin(), vec.end());
    ll ans = 0;
    for (int i = 0; i < n; i++)
    {
        ll cnt = myset.order_of_key(mp(vec[i].s + 1, -1));
        ans += (cnt * vec[i].f);
        myset.insert(mp(vec[i].s, i));
    }
    myset.clear();
    for (int i = n - 1; i >= 0; i--)
    {
        ll cnt = myset.size() - myset.order_of_key(mp(vec[i].s - 1, n));
        ans -= (cnt * vec[i].f);
        myset.insert(mp(vec[i].s, i));
    }
    cout << ans << endl;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define st first
#define nd second
#define ll long long
#define ld long double

using namespace std;

typedef pair<int, int> ii;
typedef pair<ll, ll> li;
typedef pair<int, ii> iii;

const int maxn = 2e5 + 3;
const int maxm = 1e6 + 3;
const int mod = 1e9 + 7;
const int oo = 1e9 + 5;
const ld pi = 3.141592653589793238462643383279502884;

void input()
{
#define name ""abc""
    if (fopen(name "".inp"", ""r""))
    {
        freopen(name "".inp"", ""r"", stdin);
        freopen(name "".out"", ""w"", stdout);
    }
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

int n;
li a[maxn], f[maxn];
vector<ll> v;

li operator+(const li& a, const li& b)
{
    return { a.st + b.st, a.nd + b.nd };
}

void update(int p, int v)
{
    for (int i = p; i <= n; i += i & -i)
        f[i] = f[i] + li(v, 1);
}

li get(int p)
{
    li ans = { 0, 0 };
    for (int i = p; i > 0; i -= i & -i)
        ans = ans + f[i];
    return ans;
}

int main()
{
    input();
    cin >> n;
    for (int i = 1; i <= n; ++i)
        cin >> a[i].st;
    for (int i = 1; i <= n; ++i)
    {
        cin >> a[i].nd;
        v.push_back(a[i].nd);
    }
    sort(a + 1, a + 1 + n);
    sort(v.begin(), v.end());
    v.resize(unique(v.begin(), v.end()) - v.begin());
    ll ans = 0;
    for (int i = 1; i <= n; ++i)
    {
        auto it = lower_bound(v.begin(), v.end(), a[i].nd) - v.begin() + 1;
        li cur = get(it);
        //        cout << cur.st << "" "" << cur.nd << ""\n"" ;
        ans += a[i].st * cur.nd - cur.st;
        update(it, a[i].st);
    }
    cout << ans;


    return 0;
}
",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

map<ll, ll> lol;

int main()
{
    ll n, i;
    cin >> n;
    vector<pair<ll, ll> > xd(n);
    ll a[n], b[n], cont = 0;
    for (i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    for (i = 0; i < n; i++)
    {
        cin >> b[i];
        xd[i] = { b[i], a[i] };
    }
    sort(a, a + n);
    sort(xd.begin(), xd.end());
    for (i = 0; i < n; i++)
    {
        cont += a[i] * (2 * i - n + 1);
        lol[a[i]] = i;
    }
    for (i = 0; i < n; i++)
    {
        cont += xd[i].second * (i - lol[xd[i].second]);
    }
    cout << cont << endl;
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/**
 *   Author: aksayushx
**/
#include <bits/stdc++.h>
#define F first
#define S second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define mod 1'000'000'007
#define MOD 998244353
#define pi 3.141592653589793238462
#define setp(x) fixed << setprecision(x)
#define deb(x) cout << #x << ""="" << x << '\n'
using namespace std;
typedef long long ll;
typedef long double ld;

ll power(ll x, ll y);
ll modInverse(ll n);
ll nCr(ll n, ll r);
ll ceiling(ll x, ll y);


struct fenwick
{
    int n;
    vector<pair<ll, int>> bit;
    fenwick(int n)
    {
        this->n = n;
        bit.assign(n, { 0, 0 });
    }
    pair<ll, int> sum(int r)
    {
        pair<ll, int> ret = { 0, 0 };
        for (; r >= 0; r = (r & (r + 1)) - 1)
            ret.F += bit[r].F, ret.S += bit[r].S;
        return ret;
    }
    pair<ll, int> sum(int l, int r)
    {
        pair<ll, int> x1 = sum(r), x2 = sum(l - 1);
        return { x1.F - x2.F, x1.S - x2.S };
    }
    void add(int idx, pair<ll, int> delta)
    {
        for (; idx < n; idx = idx | (idx + 1))
            bit[idx].F += delta.F, bit[idx].S += delta.S;
    }
};

void aksayushx()
{
    int n;
    cin >> n;
    vector<pair<ll, ll>> vel(n);
    vector<ll> p(n);
    for (int i = 0; i < n; i++)
    {
        cin >> p[i];
        vel[i].S = p[i];
    }
    for (int i = 0; i < n; i++)
        cin >> vel[i].F;
    sort(all(vel));
    sort(all(p));
    fenwick ft = fenwick(n);
    for (int i = 0; i < n; i++)
        ft.add(i, { p[i], 1 });
    ll ans = 0;
    for (int i = n - 1; i >= 0; i--)
    {
        ll x = vel[i].S;
        int idx = lower_bound(all(p), x) - p.begin();
        pair<ll, int> sums = ft.sum(0, idx - 1);
        ans += (sums.S * x - sums.F);
        ft.add(idx, { -p[idx], -1 });
    }
    cout << ans << '\n';
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
#ifdef AKSAYUSHX
    (void)!freopen(""input.txt"", ""r"", stdin);
    (void)!freopen(""output.txt"", ""w"", stdout);
    (void)!freopen(""error.txt"", ""w"", stderr);
#endif
    int t = 1;
    // cin>>t;
    while (t--)
        aksayushx();
    return 0;
}


// Returns x raised to the power y modulo mod
ll power(ll x, ll y)
{
    ll res = 1;
    x = x % MOD;
    if (x == 0)
        return 0;
    while (y > 0)
    {
        if (y & 1)
            res = (res * x) % MOD;
        y = y >> 1;
        x = (x * x) % MOD;
    }
    return res;
}

ll modInverse(ll n)
{
    return power(n, MOD - 2);
}

ll ceiling(ll x, ll y)
{
    return (x + y - 1) / y;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
#include <random>
using namespace std;
typedef long long LL;
typedef unsigned long long ULL;
#define MEM(a, b) memset((a), (b), sizeof(a))
const LL INF = 1e9 + 7;
const int N = 3e5 + 10;
void init(vector<pair<int, int>>& vp)
{
    vector<int> v;
    for (auto& p : vp)
        v.push_back(p.second);
    sort(v.begin(), v.end());
    for (auto& p : vp)
    {
        p.second = lower_bound(v.begin(), v.end(), p.second) - v.begin() + 1;
    }
}
class BIT
{
public:
    LL a[N];
    void add(int x, LL val)
    {
        while (x < N)
        {
            a[x] += val;
            x += x & -x;
        }
    }
    LL sum(int x)
    {
        LL ret = 0;
        while (x)
        {
            ret += a[x];
            x -= x & -x;
        }
        return ret;
    }
} b1, b2;
int main()
{
    // freopen(""input.txt"", ""r"", stdin);
    // freopen(""output.txt"", ""w"", stdout);
    int n;
    scanf(""%d"", &n);
    vector<pair<int, int>> vp(n);
    for (auto& p : vp)
        scanf(""%d"", &p.first);
    for (auto& p : vp)
        scanf(""%d"", &p.second);
    init(vp);
    LL ans = 0;
    sort(vp.begin(), vp.end());
    for (auto& p : vp)
    {
        b1.add(p.second, 1);
        b2.add(p.second, p.first);
        ans += b1.sum(p.second) * p.first - b2.sum(p.second);
    }
    printf(""%lld\n"", ans);
    return 0;
}",1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
#define ll long long
#define pb push_back
#define pii pair<int, int>
#define vi vector<int>
#define vl vector<ll>
#define pll pair<ll, ll>
#define vll vector<pll>
#define vii vector<pii>
#define all(x) x.begin(), x.end()
#define F0R(i, a) for (ll i = 0; i < (a); i++)
#define FOR(i, a, b) for (ll i = a; i < (b); i++)
#define fi first
#define se second
#define sz(x) int((x).size())
using namespace std;
// using namespace __gnu_pbds;
/*
struct custom_hash {
    static uint64_t splitmix64(uint64_t x) {
        // http://xorshift.di.unimi.it/splitmix64.c
        x += 0x9e3779b97f4a7c15;
        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
        return x ^ (x >> 31);
    }

    size_t operator()(uint64_t x) const {
        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();
        return splitmix64(x + FIXED_RANDOM);
    }
};

typedef gp_hash_table<ll, ll, custom_hash> ht;
*/

const int MOD = 998244353;
void solve()
{
    ll n;
    cin >> n;
    string s;
    cin >> s;
    ll ans = n * (n - 1) / 2;
    for (int l = 0; l < 2; l++)
    {
        ll temp = 0;
        for (int i = 1; i < n; i++)
        {
            if (s[i] == s[i - 1])
            {
                temp++;
            }
            else
            {
                ans -= temp + 1 - l;
                temp = 0;
            }
        }
        reverse(s.begin(), s.end());
    }


    cout << ans << '\n';
}

int main()
{
    ios::sync_with_stdio(false);
    ll t = 1; // cin >> t;
    while (t--)
    {
        solve();
    }
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
int n;
char s[3000005];
int main()
{
    // freopen(""parola.in"",""r"",stdin);
    //  freopen(""parola.out"",""w"",stdout);
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> s[i];
    }
    long long rez = 1LL * (n - 1) * n / 2;
    int l = 0;
    for (int i = 1; i <= n; i++)
    {
        if (i != 1 && s[i] != s[i - 1])
        {
            rez -= l;
        }
        if (s[i] == s[i - 1])
        {
            ++l;
        }
        else
        {
            l = 1;
        }
    }
    int r = 0;
    for (int i = n; i >= 1; i--)
    {
        if (i != n && s[i] != s[i + 1])
        {
            rez -= r - 1;
        }
        if (s[i] == s[i + 1])
        {
            ++r;
        }
        else
        {
            r = 1;
        }
    }
    cout << rez << '\n';
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"
#include <algorithm>
#include <iostream>
#include <map>
#include <math.h>
#include <queue>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <vector>

using namespace std;
#define N 300010

char in[N];
int n;

int main()
{
    scanf(""%d"", &n);
    scanf(""%s"", in);
    long long cnt = 1LL * n * (n - 1) / 2 - n;
    int l1 = 1;
    while (l1 < n && in[l1] == in[0])
        l1++;
    int l2 = n - 2;
    while (l2 > -1 && in[l2] == in[n - 1])
        l2--;
    int now = 0;
    int add = 1;
    for (int i = 0; i < n; i++)
        if (in[i] != in[now])
            add++, now = i;

    printf(""%lld\n"", cnt + l1 - l2 + add - 2);
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"//          
/*
           
        
        
        
      
      

                   
          
             
                   
                        
                   
             
          
                   
*/

#include <bits/stdc++.h>
using namespace std;

#define stream                                                                                     \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define F first
#define S second
typedef long long LL;
typedef unsigned long long ULL;

// const LL MOD = 1e9 + 7;
const int N = 3e5 + 1e2;

LL n, x, o;

char s[N];

int main()
{
    scanf(""%lld%s"", &n, s);

    o = n * (n - 1) / 2;

    x = 1;
    for (int i = 1; i < n; ++i)
    {
        if (s[i] == s[i - 1])
            x++;
        else
        {
            o -= x;
            x = 1;
        }
    }

    reverse(s, s + n);

    x = 1;
    for (int i = 1; i < n; ++i)
    {
        if (s[i] == s[i - 1])
            x++;
        else
        {
            o -= x - 1;
            x = 1;
        }
    }

    printf(""%lld"", o);
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define int ll

int32_t main()
{
    int t = 1, n, m;
    // cin >> t;

    while (t--)
    {
        cin >> n;
        string s;
        cin >> s;
        int cnt = n, cnt1 = 0, cnt2 = 0;

        for (int i = 0; i < n - 1; i++)
        {
            if (s[i] == 'A' && s[i + 1] == 'B')
                cnt1++;
            if (s[i] == 'B' && s[i + 1] == 'A')
                cnt2++;
        }

        // AB.. || BA..
        for (int i = 0; i < n; i++)
        {
            int len = 0;
            if (s[i] == 'A')
            {
                i++;
                while (i < n && s[i] == 'B')
                {
                    len++;
                    i++;
                }
                i--;
                if (s[i] == 'B')
                    i--;
            }
            else
            {
                i++;
                while (i < n && s[i] == 'A')
                {
                    len++;
                    i++;
                }
                i--;
                if (s[i] == 'A')
                    i--;
            }
            cnt += len;
        }

        //..AB || ..BA
        for (int i = n - 1; i >= 0; i--)
        {
            int len = 0;
            if (s[i] == 'B')
            {
                i--;
                while (i >= 0 && s[i] == 'A')
                {
                    len++;
                    i--;
                }
                i++;
                if (s[i] == 'A')
                    i++;
            }
            else
            {
                i--;
                while (i >= 0 && s[i] == 'B')
                {
                    len++;
                    i--;
                }
                i++;
                if (s[i] == 'B')
                    i++;
            }
            cnt += len;
        }

        cout << (n * (n + 1)) / 2 - cnt + cnt1 + cnt2 << ""\n"";
    }

    return 0;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define IOS                                                                                        \
    std::ios::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
#define ll long long
using namespace std;
using namespace __gnu_pbds;
ll int mod = 1e9 + 7; // 998244353;
typedef tree<ll int, null_type, less<ll int>, rb_tree_tag, tree_order_statistics_node_update>
    ordered_set;


ll int mul(ll int x, ll int y)
{
    return (x * 1ll * y) % mod;
}


ll int add(ll int x, ll int y)
{
    x += y;
    while (x >= mod)
        x -= mod;
    while (x < 0)
        x += mod;
    return x;
}


long long power(long long a, long long b, ll m)
{
    a %= m;
    long long res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = (res * a) % m;
        a = (a * a) % m;
        b >>= 1;
    }
    return res % m;
}


int main()
{
    IOS;
    ll int n;
    cin >> n;
    string s;
    cin >> s;
    vector<ll int> v, v1;
    for (int i = 0; i < n; i++)
    {
        if (s[i] == 'A')
            v.push_back(i);
        else
            v1.push_back(i);
    }
    ll int ans = (n * (n - 1)) / 2;
    int l = 0, j = 1;
    for (ll int i = 1; i < n; i++)
    {
        if (s[i] == s[i - 1])
        {
            j++;
            ans -= l;
        }
        else
        {
            ans -= j;
            j = l = 1;
        }
    }
    cout << ans << endl;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#define NDEBUG

#ifdef NDEBUG
#define DEBUG(...)
#else
#include ""debug.hh""
#endif

#include <bits/stdc++.h>

using namespace std;

__attribute__((constructor)) void Init()
{
    ios_base::sync_with_stdio(false), cin.tie(0), cout << fixed;
}

int main()
{
    constexpr int N = 3e5;
    int n, d = 0;
    char s[N + 1];
    cin >> n >> s;
    for (int i = 0, h = 0; i < n;)
    {
        int j = i + 1;
        while (j < n && s[j] == s[i])
            ++j;
        if (h > 0)
        {
            d += h + j - i - 1;
        }
        h = j - i;
        i = j;
    }
    cout << 1ll * n * (n - 1) / 2 - d << endl;
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define ff first
#define ss second
#define ull unsigned ll

const ll mod = (ll)1e9 + 7;

const ll maxs = 2e6 + 5;
ll root[maxs];


inline ll add(ll a, ll b)
{
    ll c = ((a % mod) + (b % mod)) % mod;
    return c;
}

inline ll mult(ll a, ll b)
{
    ll c = ((a % mod) * (b % mod)) % mod;
    return c;
}
class cmp
{
    bool operator()(const ll& a, const ll& b)
    {
        return a < b;
    }
};
void init()
{
    iota(root, root + maxs, 0);
}
ll find(ll u)
{
    ll f;
    if (root[u] == u)
        return u;
    else
    {
        ll f = find(root[u]);
        root[u] = f;
        return f;
    }
}
void Union(ll x, ll y)
{
    ll u = find(x);
    ll v = find(y);
    root[v] = u;
}
ll power(ll x, ll y, ll p)
{
    ll res = 1;
    x = x % p;
    while (y > 0)
    {
        if (y & 1)
            res = (res * x) % p;

        y = y >> 1;
        x = (x * x) % p;
    }
    return res;
}
void update(vector<ll>& BIT, ll ind, ll val)
{
    // ind : 1 based
    // val - arr[i] or count
    while (ind < BIT.size())
    {
        BIT[ind] += val;
        ind += (ind & (-ind));
    }
}
ll query(vector<ll>& BIT, ll ind)
{
    ll sum = 0;
    while (ind > 0)
    {
        sum += BIT[ind];
        ind -= (ind & (-ind));
    }
    return sum;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll t, n, i, k, y, x, j, m, w, z, a, b, c;

    cin >> n;

    ll tot = (n) * (n - 1) / 2;
    string str;
    cin >> str;
    ll ans = 0;
    ll cnt = 1;
    for (i = 1; i < n; i++)
    {
        if (str[i] != str[i - 1])
        {
            ans += cnt;
            cnt = 0;
        }
        cnt++;
    }
    cnt = 1;
    for (i = n - 2; i >= 0; i--)
    {
        if (str[i] != str[i + 1])
        {
            ans += (cnt - 1);
            cnt = 0;
        }
        cnt++;
    }
    cout << tot - ans;


    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int n;
string s;
vector<int> segs;

// int pref[300005], suf[300005];

void solve()
{
    for (int i = 0, j = 0; i < s.size(); i = j)
    {
        while (j < s.size() && s[j] == s[i])
            ++j;
        segs.push_back(j - i);
    }
    //    pref[0] = segs[0];
    //    for (int i=1; i<segs.size(); ++i) {
    //        pref[i] = segs[i] + pref[i-1];
    //    }
    //    suf[segs.size()-1] = segs[segs.size()-1];
    //    for (int i=segs.size()-2; i>=0; --i) {
    //        suf[i] = suf[i+1] + segs[i];
    //    }
    long long ans = (long long)n * (n - 1) / 2;
    for (int i = 0; i < segs.size(); ++i)
    {
        if (i > 0)
        {
            ans -= segs[i - 1];
        }
        if (i + 1 < segs.size())
        {
            ans -= segs[i + 1];
        }
    }
    ans += segs.size() - 1;
    cout << ans;
}

int main()
{
    cin >> n;
    cin >> s;
    solve();
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;
long long n, i, j, k = 1, l = 0, p;
int main()
{

    string s;
    cin >> n >> s;
    for (i = 0; i <= n - 2; i++)
    {
        if (s[i] != s[i + 1])
        {
            l += k;
            k = 1;
        }
        else
        {
            k++;
        }
    }
    k = 0;
    for (i = n - 1; i >= 1; i--)
    {
        if (s[i] != s[i - 1])
        {
            l += k;
            k = 0;
        }
        else
        {
            k++;
        }
    }
    p = (n * (n - 1)) / 2;
    cout << (p - l);
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstring>
#define ll long long
using namespace std;
const int maxn = 3e5 + 5;
ll n, sum, wr, ans;
char x[maxn];
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin >> n >> x;
    sum = n * (n - 1) / 2;
    wr = 0;
    for (int i = 0; i < n - 1; ++i)
    {
        if (x[i] - x[i + 1])
        {
            for (int j = i; j >= 0; --j)
            {
                if (!(x[i] - x[j]))
                    wr++;
                else
                    break;
            }
            for (int j = i + 2; j < n; ++j)
            {
                if (!(x[i + 1] - x[j]))
                    wr++;
                else
                    break;
            }
        }
    }
    ans = sum - wr;
    cout << ans << endl;
    return 0;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main()
{
    // ios_base::sync_with_stdio(false);cin.tie(nullptr);
    int n;
    cin >> n;
    string s;
    cin >> s;
    vector<int> na(n), nb(n);
    int la = n, lb = n;
    for (int i = n - 1; i >= 0; i--)
    {
        na[i] = la;
        nb[i] = lb;
        if (s[i] == 'A')
            la = i;
        else
            lb = i;
    }
    ll ans = 0;
    for (int i = 0; i < n - 1; i++)
    {
        if (s[i] == 'A')
        {
            if (na[i] == i + 1)
            {
                if (nb[i] == n)
                    ans += n - i - 1;
                else
                    ans += n - i - 2;
            }
            else
                ans += n - na[i];
        }
        else
        {
            if (nb[i] == i + 1)
            {
                if (na[i] == n)
                    ans += n - i - 1;
                else
                    ans += n - i - 2;
            }
            else
                ans += n - nb[i];
        }
    }
    cout << ans;
    cin >> n;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string>
#include <vector>

using namespace std;

typedef long long ll;

#define all(x) begin(x), end(x)
#define sz(x) (int) x.size()

const int PRIME = 1e9 + 7;


int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    string s;
    cin >> s;
    ll ans = (ll)n * (n - 1) / 2;
    ll subAns = 0;
    int l = -1;
    int r = 1;
    for (int i = 0; i < sz(s); i++)
    {
        // check for B's first, assuming all A's
        if (s[i] == 'B')
        {
            r = i;
            if (l >= 0)
            {
                subAns += r - l - 1;
            }
            subAns += r - l - 1;
            l = r;
        }
    }
    if (l >= 0)
    {
        subAns += n - l - 1;
    }
    l = -1;
    r = 1;
    // cout << subAns << ""EH?\n"";
    for (int i = 0; i < sz(s); i++)
    {
        if (s[i] == 'A')
        {
            r = i;
            if (l >= 0)
            {
                subAns += r - l - 1;
            }
            subAns += r - l - 1;
            l = r;
        }
    }
    if (l >= 0)
    {
        subAns += n - l - 1;
    }
    // cout << subAns << ""UP"";
    for (int i = 1; i < sz(s); i++)
    {
        if (s[i - 1] == 'A' && s[i] == 'B' || s[i - 1] == 'B' && s[i] == 'A')
        {
            subAns--;
        }
    }
    cout << ans - subAns << '\n';
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string>
using namespace std;
long long n, nr, nr0, nr1, nr2;
string s;
int main()
{
    cin >> n >> s;
    for (int i = 0; i < n; i++)
    {
        nr2 = 1;
        if (i == 0)
            nr0 = 1;
        while (i < n && s[i] == s[i + 1])
        {
            if (nr == 0)
                nr0++;
            nr2++;
            nr1 = nr2;
            i++;
        }
        nr++;
    }
    cout << n * (n - 1) / 2 + nr0 + nr2 - 2 * n + nr - 1;
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
set<int> a, b;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    string s;
    cin >> n >> s;
    a.insert(0);
    b.insert(0);
    for (int i = 0; s[i]; i++)
    {
        if (s[i] == 'A')
            a.insert(i + 1);
        else
            b.insert(i + 1);
    }
    ll ans = 0;
    for (int i = 0; s[i]; i++)
    {
        int cur = i + 1;
        if (s[i] == 'A')
        {
            auto it = a.upper_bound(cur);
            if (it == a.end())
                continue; // a   a    good string .
            int nxt = *it;
            //[cur,nxt] b  nxt     .
            //[cur,nxt] b   nxt b     
            //          .
            it = b.lower_bound(nxt);
            it = prev(it);
            if (*it >= cur)
                ans += (n - (nxt - 1)); // cur nxt b  [nxt,n]   .
            else
            {
                ans += (n - (nxt - 1));
                // b   1 .
                it = b.lower_bound(nxt);
                if (it != b.end())
                    ans--;
            }
        }
        else
        {
            auto it = b.upper_bound(cur);
            if (it == b.end())
                continue;
            int nxt = *it;
            it = a.lower_bound(nxt);
            it = prev(it);
            if (*it >= cur)
                ans += (n - (nxt - 1));
            else
            {
                ans += (n - (nxt - 1));
                it = a.lower_bound(nxt);
                if (it != a.end())
                    ans--;
            }
        }
    }
    cout << ans;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define ll long long

int main()
{

    ll n;
    cin >> n;


    string s;
    cin >> s;


    // total strings
    ll total = (n * (n - 1)) / 2;


    ll cnt = 1;
    for (int i = 0; i < 2; ++i)
    {
        cnt = 1;

        for (int j = 1; j < n; ++j)
        {
            if (s[j] == s[j - 1])
            {
                ++cnt;
            }
            else
            {
                total -= cnt - i;
                cnt = 1;
            }
        }

        reverse(s.begin(), s.end());
    }

    cout << total << endl;

    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll n, ast, bst;
ll ans, arp, brp;
string a;
int main()
{
    cin >> n;
    cin >> a;
    for (ll i = 0; i < n; i++)
    {
        if (a[i] == 'A')
        {
            arp++;
            ast = 1;
            if (bst)
            {
                if (arp == 1)
                    ans += brp;
                if (arp > 1)
                    ans++;
            }
            brp = 0;
        }
        else
        {
            brp++;
            bst = 1;
            if (ast)
            {
                if (brp == 1)
                    ans += arp;
                if (brp > 1)
                    ans++;
            }
            arp = 0;
        }
    }
    cout << n * (n - 1) / 2 - ans;
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define ll long long
#define pb push_back
#define si set<int>
#define F first
#define S second
#define mii map<int, int>
#define msi map<string, int>
#define mis map<int, string>
#define fr(i, a, b) for (int i = a; i <= b; i++)
#define loop(i, n) for (int i = 0; i < n; i++)
#define all(v) v.begin(), v.end()
#define vi vector<int>
#define vii vector<pair<int, int> >
#define vs vector<string>
#define sz(x) (int) x.size()
#define M 1000000007
#define mp make_pair
#define input(arr, n) loop(i, n) cin >> arr[i]
#define output(arr, n) loop(i, n) cout << arr[i] << "" ""
#define mod 998244353
#define sof sizeof

using namespace std;

int gcd(int a, int b)
{
    if (b == 0)
        return a;
    return gcd(b, a % b);
}
int lcm(int a, int b)
{
    return (a * b) / gcd(a, b);
}

bool comp(const pair<ll, int>& a, const pair<ll, int>& b)
{
    if (a.F < b.F)
        return true;
    else
        return false;
}

vector<int> primes;
void SieveOfEratosthenes(int n)
{
    // Create a boolean array
    // ""prime[0..n]"" and initialize
    // all entries it as true.
    // A value in prime[i] will
    // finally be false if i is
    // Not a prime, else true.
    bool prime[n + 1];
    memset(prime, true, sizeof(prime));

    for (int p = 2; p * p <= n; p++)
    {
        // If prime[p] is not changed,
        // then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples
            // of p greater than or
            // equal to the square of it
            // numbers which are multiple
            // of p and are less than p^2
            // are already been marked.
            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }

    // Print all prime numbers
    for (int p = 2; p <= n; p++)
        if (prime[p])
            primes.pb(p);
}


void solve(int t)
{

    ll n;
    cin >> n;
    string s;
    cin >> s;

    string ans = """";
    loop(i, n)
    {
        if (s[i] == 'A')
            ans += '0';
        else
            ans += '1';
    }


    ll mi = 0;
    ll i = 0;
    while (i < n)
    {
        ll j = i;
        while (j < n && ans[i] == ans[j])
        {
            j++;
        }
        if (ans[j] != ans[i])
        {
            if (j != n)
                mi += (j - i);
        }
        i = j;
    }
    reverse(all(ans));
    i = 0;
    while (i < n)
    {
        ll j = i;
        while (j < n && ans[i] == ans[j])
        {
            j++;
        }
        if (ans[j] != ans[i])
        {
            if (j != n)
                mi += (j - i - 1);
        }
        i = j;
    }
    // cout<<(n*(n+1))/2<<"" ""<<n<<"" ""<<mi<<"" "";
    cout << (n * (n + 1)) / 2 - n - mi;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif


    int t;
    t = 1;
    // cin>>t;

    loop(i, t)
    {

        solve(i);
        // cout<<""\n"";
    }


    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
int solve()
{
    ll n;
    cin >> n;
    string a;
    cin >> a;
    a.push_back(a[n - 1] ^ 1);
    vector<pair<int, char>> ans;
    ll cnt = 1;
    for (ll i = 1; i <= n; i++)
    {
        if (a[i] != a[i - 1])
        {
            ans.push_back({ cnt, a[i - 1] });
            cnt = 0;
        }
        cnt++;
        // cout<<""cnt = ""<<cnt<<""a[i]=""<<a[i]<<""\n"";
    }
    // cout<<ans<<""\n"";
    ll ANS = (n * (n + 1)) / 2 - n;
    ll i = 0;
    ll prev = 0;
    for (auto x : ans)
    {
        // cout<<ANS<<""* "";
        if (i == 0)
        {
        }
        else
        {
            ANS -= (x.first + prev - 1);
        }
        prev = x.first;
        i++;
        // c = x.second
    }
    cout << ANS << ""\n"";
    return 0;
}
int main()
{
    int t = 1; // cin>>t;
    while (t--)
    {
        solve();
    }
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
typedef long long ll;
using namespace std;


void fun()
{
    ll n;
    cin >> n;
    string s;
    cin >> s;
    ll ans = (n * (n - 1)) / 2;
    ll ac = 0, bc = 0;
    if (s[n - 1] == 'A')
        ac++;
    else
        bc++;
    for (ll i = n - 2; i >= 0; i--)
    {
        if (ac == 0)
        {
            if (s[i] == 'A')
            {
                ans -= (bc - 1);
                ac = 1;
                bc = 0;
            }
            else
                bc++;
        }
        else
        {
            if (s[i] == 'B')
            {
                ans -= (ac - 1);
                ac = 0;
                bc = 1;
            }
            else
                ac++;
        }
    }


    ac = 0, bc = 0;
    if (s[0] == 'A')
        ac++;
    else
        bc++;
    for (ll i = 1; i < n; i++)
    {
        if (ac == 0)
        {
            if (s[i] == 'A')
            {
                ans -= (bc - 1);
                ac = 1;
                bc = 0;
            }
            else
                bc++;
        }
        else
        {
            if (s[i] == 'B')
            {
                ans -= (ac - 1);
                ac = 0;
                bc = 1;
            }
            else
                ac++;
        }
    }


    // cout<<ans<<'\n';
    for (ll i = 1; i < n; i++)
    {
        if (s[i] != s[i - 1])
            ans--;
    }
    cout << ans << '\n';
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t = 1;
    // cin>>t;

    while (t--)
        fun();

    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#pragma GCC optimize(""Ofast"")
#include ""bits/stdc++.h""
#define rep(i, j, n) for (int i = (j); i <= ((int)n); ++i)
#define rev(i, n, j) for (int i = (n); i >= ((int)j); --i)
typedef long long int ll;
#define int long long int
const ll INFL = 0x3f3f3f3f3f3f3f3fLL;
const int INF = 0x3f3f3f3f;
const int mod = 1000000007;
#define endl ""\n""
#define mem(a, val) memset(a, val, sizeof(a))
#define all(c) (c).begin(), (c).end()
#define tr(container, it)                                                                          \
    for (__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define present(container, element) (container.find(element) != container.end())
#define pb push_back
#define FAST                                                                                       \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define readmat(a, n, m)                                                                           \
    int a[n + 5][m + 5] = {};                                                                      \
    rep(i, 1, n)                                                                                   \
    {                                                                                              \
        rep(j, 1, m) cin >> a[i][j];                                                               \
    }
#define printmat(a, n, m)                                                                          \
    rep(i, 1, n)                                                                                   \
    {                                                                                              \
        rep(j, 1, m) cout << a[i][j] << "" "";                                                       \
        cout << endl;                                                                              \
    }                                                                                              \
    cout << endl;
#define printarr(a, n)                                                                             \
    rep(i, 1, n) cout << a[i] << "" "";                                                              \
    cout << endl;
typedef std::map<int, int> mii;
typedef std::vector<int> vi;
typedef std::vector<vi> vvi;
typedef std::pair<int, int> ii;
using namespace std;
#define cerr cout
#define error(args...)                                                                             \
    {                                                                                              \
        string _s = #args;                                                                         \
        replace(_s.begin(), _s.end(), ',', ' ');                                                   \
        stringstream _ss(_s);                                                                      \
        istream_iterator<string> _it(_ss);                                                         \
        err(_it, args);                                                                            \
    }
void err(istream_iterator<string> it)
{
}
template <typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args)
{
    cout << *it << "" = "" << a << endl;
    err(++it, args...);
}
const int N = 1e6 + 5, M = N;
vector<int> g[N];

void solve()
{
    int n;
    cin >> n;
    string s;
    cin >> s;

    int d = (n * (n - 1)) / 2;

    int cnt = 0;

    for (int i = 0, j = 0; i < n; i = j)
    {
        while (j < n and s[i] == s[j])
        {
            j++;
        }
        if (i > 0)
            cnt += (j - i);
    }

    reverse(s.begin(), s.end());

    for (int i = 0, j = 0; i < n; i = j)
    {
        while (j < n and s[i] == s[j])
        {
            j++;
        }
        if (i > 0)
            cnt += (j - i - 1);
    }

    cout << d - cnt << endl;
}


signed main()
{
    FAST;
#ifdef LOCAL
    freopen(""C:\\Users\\hp\\Documents\\input.txt"", ""r"", stdin);
    freopen(""C:\\Users\\hp\\Documents\\output.txt"", ""w"", stdout);
    std::chrono::time_point<std::chrono::high_resolution_clock> start, end;
    start = std::chrono::high_resolution_clock::now();
#endif

    solve();

#ifdef LOCAL
    end = std::chrono::high_resolution_clock::now();
    ll elapsed_time = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();
    cout << endl;
    cout << ""\nElapsed Time: "" << elapsed_time << ""ms\n"";
#endif

    return 0;
}

// vector string set map first second continue break return upper_bound lower_bound length void sort
// stack queue pop size erase empty insert
// #Hala BBCF
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"/**
 * Prof.Nicola
**/
#include <bits/stdc++.h>

using namespace std;
#define mp make_pair
#define F first
#define S second
#define REP(i, l, r) for (long long i = (l); i < (r); i++)
#define PER(i, l, r) for (long long i = (r)-1; i >= (l); i--)
const long dx[4] = { 1, 0, -1, 0 }, dz[4] = { 0, 1, 0, -1 };
const long double pi = 3.14159265359;
const long long mod = 1e9 + 7;
template <class T>
void re(T& x)
{
    cin >> x;
}
template <class T1, class T2>
void re(pair<T1, T2>& x)
{
    re(x.first);
    re(x.second);
}
template <class T>
void re(vector<T>& x)
{
    for (long i = 0; i < x.size(); i++)
    {
        re(x[i]);
    }
}
template <class T>
void re(deque<T>& x)
{
    for (long i = 0; i < x.size(); i++)
    {
        re(x[i]);
    }
}
template <class T>
void out(T x)
{
    cout << x << "" "";
}
template <class T1, class T2>
void out(pair<T1, T2> x)
{
    out(x.first);
    out(x.second);
    cout << endl;
}
template <class T>
void out(vector<T> x, long l = 0, long r = 0)
{
    if (!r)
    {
        r = x.size();
    }
    for (long i = l; i < r; i++)
    {
        out(x[i]);
    }
    cout << endl;
}
template <class T>
void out(deque<T> x, long l = 0, long r = 0)
{
    if (!r)
    {
        r = x.size();
    }
    for (long i = l; i < r; i++)
    {
        out(x[i]);
    }
    cout << endl;
}
template <class T>
T cross(complex<T> x, complex<T> z)
{
    return (conj(x) * z).imag();
}
template <class T>
T dot(complex<T> x, complex<T> z)
{
    return (conj(x) * z).real();
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    long long n, ans, a = -1, b = -1;
    string s;
    cin >> n >> s;
    ans = (n * (n - 1)) / 2;
    deque<long> x, z;
    REP(i, 0, n)
    {
        if (s[i] == 'A')
        {
            a = i;
            x.push_back(i);
        }
        else
        {
            b = i;
            z.push_back(i);
        }
    }
    x.push_back(n);
    z.push_back(n);
    REP(i, 0, n - 1)
    {
        if (s[i] == 'A')
        {
            x.pop_front();
            ans -= (x.front() - 1 - i);
            if (s[i + 1] == 'A')
            {
                if (i < b)
                {
                    ans--;
                }
            }
            continue;
        }
        if (s[i] == 'B')
        {
            z.pop_front();
            ans -= (z.front() - 1 - i);
            if (s[i + 1] == 'B')
            {
                if (i < a)
                {
                    ans--;
                }
            }
        }
    }
    out(ans);
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define fast                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
#define lli long long int
#define ld long double
#define pb push_back
#define pf push_front
#define mp make_pair
#define mt make_tuple
#define all(x) (x).begin(), (x).end()
#define pll pair<lli, lli>
#define ve vector<lli>
#define vep vector<pair<lli, lli> >
#define fr(i, a, n) for (lli i = a; i < (n); i++)
#define frx(i, a, n) for (lli i = a; i > (n); i--)
#define lb lower_bound
#define ub upper_bound
#define F first
#define S second
#define endl '\n'
#define op(x) cout << x << endl
#define db(x) cout << ""[ "" << x << "" ]"" << endl
#define db2(x, y) cout << ""[ "" << x << "" "" << y << "" ]"" << endl
#define parr(arr, a, n)                                                                            \
    fr(u, a, n) cout << arr[u] << "" "";                                                             \
    cout << endl
#define yes cout << ""YES"" << endl
#define no cout << ""NO"" << endl
#define mem(a, x) memset(a, x, sizeof(a))

void solve()
{
    lli n;
    cin >> n;
    string s;
    cin >> s;
    lli nxt[n + 5][2];
    mem(nxt, -1);
    frx(i, n - 1, -1)
    {
        nxt[i][0] = nxt[i + 1][0];
        nxt[i][1] = nxt[i + 1][1];
        if (s[i] == 'A')
        {
            nxt[i][0] = i;
        }
        else
            nxt[i][1] = i;
    }
    lli ans = n * (n - 1) / 2;
    fr(i, 0, n - 1)
    {
        if (s[i] == 'A')
        {
            if (s[i + 1] == 'A')
            {
                if (nxt[i][1] != -1)
                    ans--;
            }
            else
            {
                lli temp;
                if (nxt[i + 1][0] == -1)
                    temp = n - (i + 1);
                else
                    temp = nxt[i + 1][0] - (i + 1);
                ans -= temp;
            }
        }
        else
        {
            if (s[i + 1] == 'B')
            {
                if (nxt[i][0] != -1)
                    ans--;
            }
            else
            {
                lli temp;
                if (nxt[i + 1][1] == -1)
                    temp = n - (i + 1);
                else
                    temp = nxt[i + 1][1] - (i + 1);
                ans -= temp;
            }
        }
    }
    cout << ans;
}

int main()
{
    fast;

    // freopen(""input.txt"",""r"",stdin);
    // freopen(""output.txt"",""w"",stdout);

    lli test = 1;
    // cin>>test;
    while (test--)
    {
        solve();
    }
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

#define all(x) x.begin(), x.end()
#define endl '\n'
#define fastIO                                                                                     \
    ios::sync_with_stdio(0);                                                                       \
    cout.tie(0);                                                                                   \
    cin.tie(0);
#define fi first
#define mp make_pair
#define pb emplace_back
#define re return
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n)-1; i >= 0; i--)
#define se second
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define sz(x) int(x.size())
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
typedef long double ld;
typedef long long ll;
typedef pair<int, int> ii;
typedef vector<bool> vb;
typedef vector<char> vc;
typedef vector<int> vi;
typedef vector<pair<int, int>> vii;
typedef vector<long long> vll;
typedef vector<string> vs;
typedef vector<vector<bool>> vvb;
typedef vector<vector<char>> vvc;
typedef vector<vector<int>> vvi;

mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());

void solve()
{
    int n;
    string s;
    cin >> n >> s;
    vi cl0(n, -1), cl1(n, -1);
    rep(i, n)
    {
        if (s[i] == 'A')
        {
            cl0[i] = i;
        }
        else
        {
            cl1[i] = i;
        }
    }
    rrep(i, n - 1)
    {
        if (cl0[i] == -1)
            cl0[i] = cl0[i + 1];
        if (cl1[i] == -1)
            cl1[i] = cl1[i + 1];
        // cout << cl0[i] << ' ' << cl0[i + 1] << endl;
    }
    ll ans = 0;
    rep(i, n)
    {
        int j;
        if (s[i] == 'A')
        {
            j = cl1[i];
            if (j == i + 1)
            {
                j = cl0[j];
                if (j != -1)
                    ans += n - j;
                continue;
            }
        }
        else
        {
            j = cl0[i];
            if (j == i + 1)
            {
                j = cl1[j];
                if (j != -1)
                    ans += n - j;
                continue;
            }
        }
        // cout << i << ' ' << j << endl;
        if (j == -1)
            ans += n - i - 1;
        else
            ans += (j - i - 1) + (n - j - 1);
        // cout << ""ans "" << ans << endl;
    }
    cout << ans;
}

int main()
{
    fastIO;
    // freopen(""hull.in"", ""r"", stdin);
    // freopen(""output.txt"", ""w"", stdout);
    int t = 1;
    // cin >> t;
    while (t--)
        solve();
    re 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pi 3.14159265


int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    ll n;
    cin >> n;
    string s;
    cin >> s;
    vector<ll> v1, v2;
    for (int i = 0; i < n; i++)
    {
        if (s[i] == 'A')
            v1.push_back(i + 1);
        else
            v2.push_back(i + 1);
    }

    ll ans = 0;
    for (int i = 0; i < v1.size(); i++)
    {
        if (i == 0)
        {
            ans += v1[i] - 1;
        }
        if (i == v1.size() - 1)
        {
            ans += n - v1[i];
        }
        if (i + 1 < v1.size())
            ans += (v1[i + 1] - v1[i] - 1) * 2;
    }
    //  cout<<ans<<endl;

    for (int i = 0; i < v2.size(); i++)
    {
        if (i == 0)
        {
            ans += v2[i] - 1;
        }
        if (i == v2.size() - 1)
        {
            ans += n - v2[i];
        }
        if (i + 1 < v2.size())
            ans += (v2[i + 1] - v2[i] - 1) * 2;
    }


    ll p = 0;
    for (int i = 0; i < n - 1; i++)
    {
        if (s[i] != s[i + 1])
            p++;
    }
    // cout<<ans<<endl;
    ll q = (n * (n - 1)) / 2;
    cout << q - (ans - p) << endl;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fastread                                                                                   \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
#define openfile                                                                                   \
    ifstream cin;                                                                                  \
    ofstream cout;                                                                                 \
    cin.open(""input.txt"");                                                                         \
    cout.open(""output.txt"");
#define f(i, x, y) for (int i = x; i < y; i++)
#define all(X) X.begin(), X.end()
#define int long long
// # define int unsigned int
#define ll long long
#define key pair<int, int>
#define keyy pair<pair<int, int>, int>
#define keyyy pair<pair<int, int>, pair<int, int> >
#define keyd pair<double, double>
#define ff first
#define ss second
#define double long double
int mod = 1e9 + 7;
// int mod = 998244353;
const int inf = 1e18;
using namespace std;

main()
{
    fastread;
    int n;
    cin >> n;
    string s;
    cin >> s;
    bool a[2] = { 0, 0 };
    int l[2] = { -1, -1 };
    int ans = 0;
    f(i, 0, n)
    {
        if (!a[s[i] - 'A'])
            a[s[i] - 'A'] = 1;
        else if (a[0] & a[1])
            ans = ans + min(i - 1, l[s[i] - 'A'] + 1);
        else
            ans += i;
        l[s[i] - 'A'] = i;
    }
    cout << ans;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <queue>
#include <cstring>
#include <cmath>
#include <map>
#include <set>
#include <cstdio>
#include <algorithm>
#define debug(a) cout << #a << ""="" << a << endl;
using namespace std;
const int maxn = 3e5 + 1000;
typedef long long LL;
inline LL read()
{
    LL x = 0, f = 1;
    char ch = getchar();
    while (!isdigit(ch))
    {
        if (ch == '-')
            f = -1;
        ch = getchar();
    }
    while (isdigit(ch))
    {
        x = x * 10 + ch - 48;
        ch = getchar();
    }
    return x * f;
}
char a[maxn];
int main(void)
{
    cin.tie(0);
    std::ios::sync_with_stdio(false);
    LL n;
    cin >> n;
    cin >> (a + 1);
    LL pre = 1;
    LL ans = 0;
    for (LL i = 2; i <= n; i++)
    {
        if (a[i - 1] != a[i])
        {
            ans += (i - pre);
            pre = i;
        }
        else if (pre != 1)
            ans++;
    }
    cout << n * (n - 1) / 2 - ans << ""\n"";
    return 0;
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define fori(i, n) for (int i = 0; i < n; i++)
#define forl(i, n) for (ll i = 0; i < n; i++)
#define pb push_back
#define X first
#define Y second
#define all(v) v.begin(), v.end()
#define in_ar_int(arr, n)                                                                          \
    int arr[n];                                                                                    \
    fori(i, n) cin >> arr[i];
#define in_ar_ll(arr, n)                                                                           \
    ll arr[n];                                                                                     \
    fori(i, n) cin >> arr[i];
#define endl ""\n""
#define mod 1000000007
#define pi 3.1415926536
#define intn                                                                                       \
    int n;                                                                                         \
    cin >> n
#define MOD 1000000007
#define deb(x) cout << #x << "" = "" << x << endl;
#define deb2(a, b) cout << #a << "" = "" << a << "" and "" << #b << "" is "" << b << endl;

typedef long long ll;
// gcd(a,b) = gcd(a,b-a)

void solve()
{
    ll n;
    cin >> n;
    string s;
    cin >> s;

    ll ans = (n * (n - 1)) / 2, tobesubtract = 0, cnt = 1;
    vector<ll> ref;
    fori(i, n - 1)
    {
        if (s[i] == s[i + 1])
        {
            cnt++;
        }
        else
        {
            ref.pb(cnt);
            cnt = 1;
        }
    }
    ref.pb(cnt);
    fori(i, ref.size() - 1)
    {
        tobesubtract += (ref[i] + ref[i + 1]);
        tobesubtract--;
    }
    cout << (ans - tobesubtract);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int chill = 1;
    // cin >> chill;
    while (chill--)
    {
        solve();
    }
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long
#define pb push_back
#define endl '\n'
#define FIO                                                                                        \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
int main()
{
    int n;
    cin >> n;
    string s;
    cin >> s;
    ll ans = (n * 1LL * (n - 1)) / 2;
    vector<pair<int, int>> v(n);
    for (int i = 0; i < n; i++)
        v[i].first = 0, v[i].second = 0;
    int cur = 0;
    for (int i = n - 1; i >= 0; i--)
    {
        if (i == n - 1 || s[i] != s[i + 1])
        {
            if (s[i] == 'A')
                v[i].first = 1;
            else
                v[i].second = 1;
            cur = 1;
        }
        else
        {
            cur++;
            if (s[i] == 'A')
                v[i].first = cur;
            else
                v[i].second = cur;
        }
    }
    for (int i = 0; i < n - 1; i++)
    {
        if (s[i] != s[i + 1])
        {
            if (s[i] == 'A')
                ans -= v[i + 1].second;
            else
                ans -= v[i + 1].first;
        }
    }
    for (int i = 0; i < n; i++)
        v[i].first = 0, v[i].second = 0;
    cur = 0;
    for (int i = 0; i < n; i++)
    {
        if (i == 0 || s[i] != s[i - 1])
        {
            if (s[i] == 'A')
                v[i].first = 1;
            else
                v[i].second = 1;
            cur = 1;
        }
        else
        {
            cur++;
            if (s[i] == 'A')
                v[i].first = cur;
            else
                v[i].second = cur;
        }
    }
    for (int i = 1; i < n; i++)
    {
        if (s[i] != s[i - 1])
        {
            if (s[i] == 'A')
                ans -= v[i - 1].second;
            else
                ans -= v[i - 1].first;
            ans++;
        }
    }
    cout << ans;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define rrep(i, n) for (int i = (int)(n - 1); i >= 0; i--)
#define all(x) (x).begin(), (x).end()
#define sz(x) int(x.size())
using namespace std;
using ll = long long;
const int INF = 1e9;
const ll LINF = 1e18;
template <class T>
bool chmax(T& a, const T& b)
{
    if (a < b)
    {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
bool chmin(T& a, const T& b)
{
    if (b < a)
    {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
vector<T> make_vec(size_t a)
{
    return vector<T>(a);
}
template <class T, class... Ts>
auto make_vec(size_t a, Ts... ts)
{
    return vector<decltype(make_vec<T>(ts...))>(a, make_vec<T>(ts...));
}
template <typename T>
istream& operator>>(istream& is, vector<T>& v)
{
    for (int i = 0; i < int(v.size()); i++)
    {
        is >> v[i];
    }
    return is;
}
template <typename T>
ostream& operator<<(ostream& os, const vector<T>& v)
{
    for (int i = 0; i < int(v.size()); i++)
    {
        os << v[i];
        if (i < sz(v) - 1)
            os << ' ';
    }
    return os;
}
struct gyouzasushi
{
    gyouzasushi()
    {
        cin.tie(0);
        ios::sync_with_stdio(false);
        cout << fixed << setprecision(20);
    }
} gyouzasushi;
int main()
{
    ll n;
    string s;
    cin >> n >> s;
    vector<ll> v;
    for (int i = 0; i < n;)
    {
        int j = i;
        while (j < n && s[i] == s[j])
            j++;
        v.push_back(ll(j - i));
        i = j;
    }
    ll ans = n * (n + 1) / 2 - n;
    // cout << ans << '\n';
    for (int i = 0; i < sz(v) - 1; i++)
        ans -= v[i];
    for (int i = 1; i < sz(v); i++)
        ans -= v[i];
    ans += ll(sz(v) - 1);
    cout << ans << '\n';
}
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define int long long
const int N = 1e6 + 5;

int n;
string str;
int l[N], r[N], ans;

signed main()
{
    ios::sync_with_stdio(false);

    cin >> n >> str;

    str = ""0"" + str + ""0"";

    char a = 'a';
    char b = 'b';

    for (int i = 1; i <= n; i++)
    {
        if (str[i] == str[i - 1])
            l[i] = l[i - 1] + 1;
        else
            l[i] = 1;
    }
    for (int i = n; i >= 1; i--)
    {
        if (str[i] == str[i + 1])
            r[i] = r[i + 1] + 1;
        else
            r[i] = 1;
    }

    for (int i = 1; i < n; i++)
    {
        if (str[i] != str[i + 1])
        {
            ans += l[i] + r[i + 1] - 1;
        }
    }

    cout << n * (n - 1) / 2 - ans << endl;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define fastio ios::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL)
const int N = 3e5 + 10;
const int mod = 1e9 + 7;

int a[N];

void solve()
{
    ll n;
    cin >> n;
    string s;
    cin >> s;
    ll x = n * (n - 1) / 2;
    for (int i = 0; s[i]; i++)
    {
        if (s[i] == 'A')
        {
            int j = i + 1;
            while (s[j] && s[j] == 'B')
                x--, j++;
            j = i - 1;
            while (j >= 0 && s[j] == 'B')
            {
                if (j == i - 1)
                    x++;
                x--, j--;
            }
        }
        if (s[i] == 'B')
        {
            int j = i + 1;
            while (s[j] && s[j] == 'A')
                x--, j++;
            j = i - 1;
            while (j >= 0 && s[j] == 'A')
            {
                if (j == i - 1)
                    x++;
                x--, j--;
            }
        }
        // cout << x << "" = "" << endl;
    }
    cout << x << endl;
}

int main()
{
    fastio;
    int t = 1;
    // cin >> t;
    while (t--)
        solve();
    return 0;
}",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long int
using namespace std;
int main()
{
    ll t;
    cin >> t;
    while (t--)
    {
        ll n, m, c = 0, d = 0, f = INT_MAX;
        cin >> n >> m;
        ll a[n][m];
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                cin >> a[i][j];
            }
        }
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                if (a[i][j] < 0)
                    c++;
                d += abs(a[i][j]);
                f = min(f, abs(a[i][j]));
            }
        }
        if (c % 2 == 0)
            cout << d << '\n';
        else
        {
            cout << d - 2 * f << '\n';
        }
    }
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define all(x) (x).begin(), (x).end()
#define uniq(v) (v).erase(unique(all(v)), (v).end())
#define sz(x) (int)((x).size())
#define fr first
#define sc second
#define pii pair<int, int>
#define rep(i, a, b) for (int i = a; i < b; i++)
#define mem1(a) memset(a, -1, sizeof(a))
#define mem0(a) memset(a, 0, sizeof(a))
#define ppc __builtin_popcount
#define ppcll __builtin_popcountll


template <typename T1, typename T2>
istream& operator>>(istream& in, pair<T1, T2>& a)
{
    in >> a.fr >> a.sc;
    return in;
}
template <typename T, typename T1>
T amax(T& a, T1 b)
{
    if (b > a)
        a = b;
    return a;
}
template <typename T, typename T1>
T amin(T& a, T1 b)
{
    if (b < a)
        a = b;
    return a;
}


const long long INF = 1e18;
const int32_t M = 1e9 + 7;
const int32_t MM = 998244353;
const int N = 1e4 + 1;


void solve()
{
    int n, m;
    cin >> n >> m;
    int a[n][m];
    int mn = N;
    int cnt = 0;
    int sum = 0;
    rep(i, 0, n)
    {
        rep(j, 0, m)
        {
            cin >> a[i][j];
            if (a[i][j] < 0)
            {
                cnt++;
            }
            mn = min(mn, abs(a[i][j]));
            sum += abs(a[i][j]);
        }
    }
    if (cnt % 2 == 0)
    {
        cout << sum << endl;
    }
    else
    {
        cout << sum - 2 * mn << endl;
    }
}


signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t = 1;
    cin >> t;
    while (t--)
        solve();
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define nl ""\n""
#define forn(i, n) for (int i = 0; i < n; ++i)

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

void solve()
{
    int n, m;
    cin >> n >> m;

    int arr[n][m];
    forn(i, n) forn(j, m) cin >> arr[i][j];

    int sum = 0, mn = INT_MAX, cntNag = 0;

    forn(i, n) forn(j, m)
    {

        sum += abs(arr[i][j]);
        if (arr[i][j] < 0)
        {
            cntNag++;
        }
        mn = min(mn, abs(arr[i][j]));
    }

    if (!cntNag || !(cntNag & 1))
    {
        cout << sum << nl;
        return;
    }

    sum -= 2 * abs(mn);
    cout << sum << nl;
}

int main()
{

    int t = 1;
    cin >> t;
    while (t--)
        solve();
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

using LL = long long;
using ULL = unsigned long long;

const long long MOD = 1e9 + 7;


#define INPUT(x) freopen(x, ""r"", stdin)
#define OUTPUT(x) freopen(x, ""w"", stdout)


#define pb push_back
#define endl '\n'
#define LCM(a, b) (a / __gcd(a, b)) * b
#define GCD(a, b) __gcd(a, b)
#define SP(x, y) setprecision((y)) << fixed << (x)
#define PI acos(-1.0)
#define distance(x1, y1, x2, y2) sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1))
#define MAX 1e9 + 9

#define taratari                                                                                   \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(NULL);


int main()
{
    taratari

        int t;
    cin >> t;

    while (t--)
    {

        int n, m;
        cin >> n >> m;

        int a[n][m], c = 0;

        int sum = 0;

        int choto = 1000;

        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {

                cin >> a[i][j];

                if (a[i][j] < 0)
                    c++;

                sum += abs(a[i][j]);

                choto = min(choto, abs(a[i][j]));
            }
        }

        if (c % 2 == 0)
        {
            cout << sum << endl;
        }
        else
        {
            cout << sum - (2 * choto) << endl;
        }
    }


    return 0;
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int NMAX = 15, INF = 0x3F3F3F3F;
int T, n, m, negative_count, sum_absolute_value, min_absolute_value, a[NMAX][NMAX];
bool exists_0;
int main()
{
    int T;
    cin >> T;
    for (int t = 1; t <= T; t++)
    {
        exists_0 = negative_count = sum_absolute_value = 0;
        min_absolute_value = INF;
        cin >> n >> m;
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= m; j++)
            {
                cin >> a[i][j];
                if (a[i][j] == 0)
                    exists_0 = 1;
                else if (a[i][j] > 0)
                {
                    sum_absolute_value += a[i][j];
                    if (a[i][j] < min_absolute_value)
                        min_absolute_value = a[i][j];
                }
                else
                {
                    sum_absolute_value -= a[i][j];
                    negative_count++;
                    if (-a[i][j] < min_absolute_value)
                        min_absolute_value = -a[i][j];
                }
            }
        if (exists_0)
            cout << sum_absolute_value << ""\n"";
        else
        {
            if (negative_count % 2 == 0)
                cout << sum_absolute_value << ""\n"";
            else
                cout << sum_absolute_value - 2 * min_absolute_value << ""\n"";
        }
    }
    return 0;
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
typedef long long ll;
unsigned const int m = 1e9 + 7;
using namespace std;

#define endl ""\n""
#define pub push_back
#define ppb pop_back
#define pi pair<int, int>
#define vvi vector<vector<int> >
#define vi vector<int>
#define max(a, b) (a > b ? a : b)
#define min(a, b) (a > b ? b : a)
#define min3(a, b, c) ((a > b ? b : a) > c ? c : (a > b ? b : a))
#define max3(a, b, c) ((a < b ? b : a) < c ? c : (a < b ? b : a))

#define sort(arr) sort(arr, arr + n)
#define all(x) x.begin(), x.end()
#define sz size()
#define fe first
#define se second
#define INF INT_MAX


inline void scanarr(int* arr, int n)
{
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
}

inline void printyn(bool c)
{
    cout << (c ? ""YES"" : ""NO"") << endl;
    return;
}


void scanvec(vi* vec, int n)
{
    vec->reserve(n + 10);
    for (int i = 0; i < n; i++)
    {
        int temp;
        cin >> temp;
        vec->pub(temp);
    }

    return;
}

inline void printarr(int* arr, int n)
{

    for (int i = 0; i < n; i++)
    {
        cout << arr[i] << "" "";
    }

    cout << endl;
}

inline void printvec(vi* vec)
{

    int n = vec->sz;

    for (int i = 0; i < n; i++)
    {
        cout << vec->at(i) << "" "";
    }

    cout << endl;
}


int main()
{

    ios::sync_with_stdio(0);
    cin.tie(0);

#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif


    int t;
    cin >> t;

    while (t--)
    {
        int r, c;
        cin >> r >> c;
        int mat[r][c];

        int least = INT_MAX;
        int sum = 0;
        int cnt = 0;

        for (int i = 0; i < r; i++)
        {
            for (int j = 0; j < c; j++)
            {
                cin >> mat[i][j];
                if (abs(mat[i][j]) < least)
                {
                    least = abs(mat[i][j]);
                }

                sum += abs(mat[i][j]);
                if (mat[i][j] < 0)
                {
                    cnt++;
                }
            }
        }


        int ans = cnt % 2 == 0 ? sum : sum - least - least;

        cout << ans << endl;
    }
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;
#include <vector>
#include <climits>
#include <map>
#include <bits/stdc++.h>
typedef long long ll;
void solve()
{
    ll n, m;
    cin >> n >> m;
    int arr[n + 1][m + 1];
    int count = 0, ans = 0, f = 0;
    int mn = INT_MAX;
    for (ll i = 0; i < n; i++)
    {
        for (ll j = 0; j < m; j++)
        {
            cin >> arr[i][j];
            if (arr[i][j] < 0)
            {
                count++;
            }
            if (arr[i][j] == 0)
            {
                f = 1;
            }
            mn = min(mn, abs(arr[i][j]));
            ans += abs(arr[i][j]);
        }
    }
    if (f == 1 || count % 2 == 0)
    {
        cout << ans;
    }
    else
    {
        cout << ans - 2 * mn;
    }
}
int main()
{
    ll t;
    cin >> t;
    for (ll i = 0; i < t; i++)
    {
        solve();
        cout << endl;
    }
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    // your code goes here
    int t;
    cin >> t;
    while (t--)
    {
        int row, col;
        cin >> row >> col;
        int minn = 100, ans = 0, cnt = 0;
        for (int i = 0; i < row; i++)
        {
            for (int j = 0; j < col; j++)
            {
                int n;
                cin >> n;
                if (n < 0)
                    cnt++;
                minn = min(minn, abs(n));
                ans += abs(n);
            }
        }
        if (cnt & 1)
            ans -= (2 * minn);
        cout << ans << endl;
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <bits/stdc++.h>
using namespace std;

void test_case()
{
    int n, m;
    cin >> n >> m;
    vector<int> a(n * m);
    long long sum = 0;
    int a1 = 0, a2 = 0; //, a3 = 0;
    for (int& x : a)
    {
        cin >> x;
        if (x == 0)
            a1++;
        if (x < 0)
            a2++;
        x = abs(x);
        sum += x;
        // if(x > 0) a3++;
    }
    if (a1 || a2 % 2 == 0)
    {
        cout << sum << ""\n"";
        return;
    }
    cout << sum - 2 * *min_element(a.begin(), a.end()) << ""\n"";
}
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        test_case();
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// Template Made By: Ojassvi Kumar
#include <bits/stdc++.h>
using namespace std;

#define ios                                                                                        \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
#define ll long long int
#define fo(i, a, b) for (long long int i = a; i < b; i++)
#define endl ""\n""
#define max3(a, b, c) max(max((a), (b)), (c))
#define max4(a, b, c, d) max(max((a), (b)), max((c), (d)))
#define min3(a, b, c) min(min((a), (b)), (c))
#define min4(a, b, c, d) min(min((a), (b)), min((c), (d)))
#define pb push_back
#define lb lower_bound
#define up upper_bound
#define all(V) V.begin(), V.end()
#define itv vector<long long int>::iterator
#define pll pair<long long int, long long int>
#define mp make_pair
#define itp vector<pair<long long int, long long int>>::iterator
#define sll set<long long int, greater<long long int>>
#define its set<long long int, greater<long long int>>::iterator
#define d0(x) cout << (x) << "" ""
#define d1(x) cout << (x) << endl
#define d2(x, y) cout << (x) << "" "" << (y) << endl

// const long double pi = 3.14159265358979323846264338;
// Template Ends

int main()
{
    ios
#ifndef ONLINE_JUDGE
        freopen(""INPUT.txt"", ""r"", stdin);
    freopen(""OUTPUT.txt"", ""w"", stdout);
#endif
    ll Tests = 1;
    cin >> Tests;
    while (Tests--)
    {
        ll N, M;
        cin >> N >> M;
        ll mn = INT_MAX;
        ll sum = 0;
        ll nc = 0;
        fo(i, 0, N)
        {
            fo(j, 0, M)
            {
                ll x;
                cin >> x;
                if (x < 0)
                {
                    nc++;
                    x *= -1;
                }
                sum += x;
                mn = min(mn, x);
            }
        }
        if (nc % 2 == 0)
            cout << sum << endl;
        else
            cout << sum - 2 * mn << endl;
    }
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;


int main()
{
    int t;
    cin >> t;

    while (t--)
    {
        int m, n;
        cin >> n >> m;

        bool apare0 = 0;
        int minim = 10000;
        int nrnegative = 0;
        int suma = 0;

        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= m; j++)
            {
                int x;
                cin >> x;

                int valabs;

                if (x == 0)
                {
                    apare0 = 1;
                    valabs = 0;
                }
                else if (x < 0)
                {
                    nrnegative++;
                    valabs = -x;
                }
                else
                {
                    valabs = x;
                }

                suma += valabs;

                minim = min(minim, valabs);
            }
        }

        if (apare0 == 1 || nrnegative % 2 == 0)
        {
            cout << suma << ""\n"";
        }
        else
        {
            cout << suma - 2 * minim << ""\n"";
        }
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
        int n, m;
        cin >> n >> m;

        bool zero = false;
        int negativeCount = 0, totalSum = 0, minAbsolute = 105;

        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= m; j++)
            {
                int x;
                cin >> x;

                if (x == 0)
                {
                    zero = true;
                }
                else
                {
                    if (x < 0)
                    {
                        negativeCount++;
                        totalSum -= x;
                        minAbsolute = min(minAbsolute, -x);
                    }
                    else
                    {
                        totalSum += x;
                        minAbsolute = min(minAbsolute, x);
                    }
                }
            }
        }

        if (zero == true)
        {
            cout << totalSum << '\n';
        }
        else
        {
            if (negativeCount % 2 == 0)
            {
                cout << totalSum << '\n';
            }
            else
            {
                cout << totalSum - 2 * minAbsolute << '\n';
            }
        }
    }

    return 0;
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, m;
        cin >> n >> m;
        int a[n][m];
        int o = 0;
        vector<int> v;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                cin >> a[i][j];
                if (a[i][j] <= 0)
                {
                    o++;
                }
                v.push_back(abs(a[i][j]));
            }
        }
        int sum = 0;

        if (o % 2 == 1)
        {
            sort(v.begin(), v.end());

            for (int i = 1; i < v.size(); i++)
            {
                sum += v[i];
            }

            sum -= v[0];
            cout << sum << endl;
        }
        else
        {
            for (int i = 0; i < v.size(); i++)
            {
                sum += v[i];
            }
            cout << sum << endl;
        }
    }
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long int
#define ld long double
#define ull unsigned long long int
#define f(a, b) for (ll i = a; i < b; i++)
#define f1(a, b) for (ll i = a; i <= b; i++)
#define fc(a, b, c) for (ll i = a; i < b; i += c)
#define fd(a, b) for (ll i = a; i >= b; i--)
#define fj(j, a, b) for (ll j = a; j < b; j++)
#define fat(m) for (auto it : m)
ll extended_GCD(ll a, ll b, ll& x, ll& y)
{
    if (a == 0)
    {
        x = 0;
        y = 1;
        return b;
    }
    ll x1, y1;
    ll gcd = extended_GCD(b % a, a, x1, y1);
    x = y1 - (b / a) * x1;
    y = x1;
    return gcd;
}
ll modinv(ll a, ll md = mod)
{
    ll x, y;
    extended_GCD(a, md, x, y);
    if (x < 0)
        x += md;
    return x;
}
ll power(ll x, ll y, ll p)
{
    ll res = 1;
    x = x % p;
    while (y > 0)
    {
        if (y & 1)
            res = ((res % p) * (x % p)) % p;
        y = y >> 1;
        x = (x * x) % p;
    }
    return res;
}
ll pow1(ll x, ll y)
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res * x);
        y = y >> 1;
        x = x * x;
    }
    return res;
}
#define mi map<ll, ll>
#define mc map<char, ll>
#define vi vector<ll>
#define pii pair<ll, ll>
#define vvi vector<vector<ll> >
#define vp vector<pair<ll, ll> >
#define pb push_back
#define all(v) v.begin(), v.end()
#define alld(v) v.begin(), v.end(), greater<ll>()
#define sz(v) v.size()
#define endl ""\n""
#define ff first
#define ss second
const ll N = 1e5 + 1;

void solve()
{
    ll n, m, k, p = 0, q = 0, s = 0, c = 0, i, j;
    cin >> n >> m;
    ll a[n * m] = { 0 }, b[n * m];
    n *= m;
    f(0, n)
    {
        cin >> a[i];
        if (a[i] < 0)
            p++;
        if (a[i] == 0)
            c++;
        s += llabs(a[i]);
        b[i] = llabs(a[i]);
    }
    //   cout<<p<<"" ""<<c<<"" : ""<<s<<endl;
    if (c || p % 2 == 0)
    {
        cout << s << endl;
        return;
    }
    sort(b, b + n);
    s -= 2 * b[0];
    cout << s << endl;

    return;
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""rt"", stdin);
    freopen(""output.txt"", ""wt"", stdout);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    cin >> t;
    while (t--)
        solve();
#ifndef ONLINE_JUDGE
    cout << ""\nTime Elapsed: "" << 1000 * (long double)clock() / (long double)CLOCKS_PER_SEC
         << ""ms\n"";
#endif
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;
int main()
{
    int T;
    scanf(""%d"", &T);
    while (T--)
    {
        bool exists_0 = false;
        long long sum_absolute_value = 0;
        int min_absolute_value = 1000000001; // o valoare care este
        // suficient de mare
        int negative_count = 0;
        int N, M;
        cin >> N >> M;
        for (int i = 1; i <= N; i++)
        {
            for (int j = 1; j <= M; j++)
            {
                int elem;
                cin >> elem;
                int absolute_value; // valoarea absoluta a lui elem
                if (elem > 0)
                    absolute_value = elem;
                else
                    absolute_value = -elem;
                if (elem == 0)
                    exists_0 = true;
                if (elem < 0)
                    negative_count += 1;
                sum_absolute_value += absolute_value;
                if (min_absolute_value > absolute_value)
                    min_absolute_value = absolute_value;
            }
        }

        if (exists_0)
        {
            cout << sum_absolute_value << ""\n"";
        }
        if (!exists_0 && negative_count % 2 == 0)
        {
            cout << sum_absolute_value << ""\n"";
        }
        if (!exists_0 && negative_count % 2 == 1)
        {
            cout << sum_absolute_value - 2 * min_absolute_value << ""\n"";
        }
    }


    return 0;
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> p32;
typedef pair<ll, ll> p64;
typedef pair<double, double> pdd;
typedef vector<ll> v64;
typedef vector<int> v32;
typedef vector<vector<int> > vv32;
typedef vector<vector<ll> > vv64;
typedef vector<vector<p64> > vvp64;
typedef vector<p64> vp64;
typedef vector<p32> vp32;
ll MOD = 998244353;
double eps = 1e-12;
#define forn(i, e) for (ll i = 0ll; i < e; i++)
#define forsn(i, s, e) for (ll i = s; i < e; i++)
#define rforn(i, s) for (ll i = s; i >= 0ll; i--)
#define rforsn(i, s, e) for (ll i = s; i >= e; i--)
#define vin(v, n)                                                                                  \
    for (ll i = 0; i < n; i++)                                                                     \
        cin >> v[i];
#define vout(v)                                                                                    \
    for (auto i = v.begin(); i != v.end(); i++)                                                    \
        cout << (*i) << sp;                                                                        \
    cout << nl;
#define sortall(x) sort(all(x))
#define rsortall(x) sort(all(x), greater<ll>())
#define nl endl
#define sp "" ""
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define INF 2e18
#define fast_cin()                                                                                 \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL)
#define all(x) (x).begin(), (x).end()
#define sz(x) ((ll)(x).size())
#define dbg(x) cout << #x << "" = "" << x << nl
#define yp cout << ""yes"" << nl;
#define np cout << ""No"" << nl;

void solve()
{
    ll n, m;
    cin >> n >> m;
    ll v[n][m];
    ll c = 0ll, s = 0ll, minE = LONG_LONG_MAX;
    for (ll i = 0ll; i < n; i++)
    {
        for (ll j = 0ll; j < m; j++)
        {
            cin >> v[i][j];
            c += (v[i][j] < 0);
            s += abs(v[i][j]);
            minE = min(minE, abs(v[i][j]));
        }
    }
    if (c % 2 == 0 || minE == 0)
    {
        cout << s << nl;
    }
    else
    {
        cout << s - (2 * minE) << nl;
    }
}

int main()
{
    fast_cin();
    ll t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <cmath>
#include <iostream>
#define fio                                                                                        \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL)
#include <vector>
#include <algorithm>
#include <map>
#include <string>
#include <bitset>
#include <set>
#define ll long long
#define vi vector<ll>
#define vvi vector<vi>
#define ii pair<ll, ll>
#define vii vector<ii>
#define vvii vector<vii>
#define uset unordered_set
#define umap unordered_map
#define setbit(s, j) (s |= (1 << j)) // this will set the jth bit of s to 1.
#define togglebit(s, j) (s ^= (1 << j)) // this will flip the jth bit.
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define REP(i, a, b) for (long long i = a; i < b; i++)
using namespace std;
bool isprime(long long n)
{
    for (int i = 2; i <= sqrt(n); i++)
    {
        if (n % i == 0)
        {
            return false;
        }
    }
    return true;
}

int prime_fact(int n, int d)
{
    vector<int> fact;
    for (int i = 1; i <= sqrt(n); i++)
    {
        if (i * i == n)
        {
            fact.push_back(i);
            continue;
        }
        if (n % i == 0)
        {
            fact.push_back(i);
            fact.push_back(n / i);
        }
    }
    int cnt = 1;
    sort(fact.begin(), fact.end());
    if (fact.size() < 4)
    {
        return 0;
    }
    for (int i = 1; i < fact.size(); i++)
    {
        // cout<<fact[i];
        if (abs(fact[i] - fact[i - 1]) >= d)
        {
            cnt++;
        }
        else
        {
            cnt = -1;
            break;
        }
    }
    // cout<<endl;
    if (cnt >= 4)
        return 1;
    else
        return 0;
}
void rev(ll i, ll j, ll a[], ll p[])
{
    while (i < j)
    {
        ll temp;
        temp = a[i];
        a[j] = a[i];
        p[a[j]] = j;

        a[i] = temp;
        p[temp] = i;

        i++;
        j--;
    }
}
int main()
{

    ll tcsc = 1;
    cin >> tcsc;
    while (tcsc--)
    {
        ll n, m;
        cin >> n >> m;
        ll a[n][m];
        ll ne = 0, po = 0, flag = 0;

        for (ll i = 0; i < n; i++)
        {
            for (ll j = 0; j < m; j++)
            {
                cin >> a[i][j];
                if (a[i][j] == 0)
                {
                    flag = 1;
                }
                else if (a[i][j] < 0)
                {
                    ne++;
                }
            }
        }
        ll sum = 0;
        ll mn = INT_MAX;
        for (ll i = 0; i < n; i++)
        {
            for (ll j = 0; j < m; j++)
            {
                sum = sum + abs(a[i][j]);
                if (mn > abs(a[i][j]))
                    mn = abs(a[i][j]);
            }
        }

        if (flag == 1 || ne == 0 || ne % 2 == 0)
        {
            cout << sum << endl;
        }
        else
        {
            cout << sum - (2 * mn) << endl;
        }
    }
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;
int t, n, m, i, j, suma, mini, cnt, x;
bool ok;
int main()
{
    cin >> t;
    while (t != 0)
    {
        t--;
        ok = 0;
        suma = 0;
        mini = 101;
        cnt = 0;
        cin >> n >> m;
        for (i = 1; i <= n; i++)
            for (j = 1; j <= m; j++)
            {
                cin >> x;
                if (x == 0)
                    ok = 1;
                else if (x < 0)
                {
                    x = -x;
                    cnt++;
                }
                suma += x;
                if (x < mini)
                    mini = x;
            }
        if (ok == 1)
            cout << suma << ""\n"";
        else if (cnt % 2 == 0)
            cout << suma << ""\n"";
        else
            cout << suma - 2 * mini << ""\n"";
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define rep(i, b) for (ll i = 1; i <= (b); i++)
#define rrep(i, b) for (ll i = b; i > 0; i--)
#define repp(i, b) for (ll i = 0; i < (b); i++)
#define rrepp(i, b) for (ll i = b; i >= 0; i--)
#define test                                                                                       \
    int t;                                                                                         \
    cin >> t;                                                                                      \
    while (t--)
#define fio                                                                                        \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
#define test                                                                                       \
    int t;                                                                                         \
    cin >> t;                                                                                      \
    while (t--)
#define pb push_back
#define fp(i) fixed << setprecision(i)
#define s(n) scanf(""%lld"", &n)
#define F first
#define S second
#define endl '\n'
#define mp(a, b) make_pair(a, b)
#define all(v) v.begin(), v.end()
#define pll pair<ll, ll>
#define vpll vector<pll>
#define vbll vector<bool>
#define vvll vector<vll>
#define show(A)                                                                                    \
    for (auto i : A)                                                                               \
        cout << i << "" "";                                                                          \
    cout << '\n';
#define show_(A, n)                                                                                \
    repp(i, n)                                                                                     \
    {                                                                                              \
        show(A[i])                                                                                 \
    }
typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
typedef vector<ll> vll;
void solve()
{
    ll n, m;
    cin >> n >> m;
    ll sum = 0;
    ll minp = INT_MAX;
    ll maxn = -INT_MAX;
    ll nc = 0;
    repp(i, n) repp(j, m)
    {
        ll x;
        cin >> x;
        sum += abs(x);
        if (x >= 0)
        {
            minp = min(x, minp);
        }
        else
        {
            maxn = max(maxn, x);
            nc++;
        }
    }
    if (nc & 1)
    {
        cout << max(sum - 2 * minp, sum + 2 * maxn) << endl;
    }
    else
        cout << sum << endl;
}
int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#else
// online submission
#endif
    fio;
    test solve();
    return 0;
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>

using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t-- > 0)
    {
        bool exists_0 = false;
        long long sum_absolute_value = 0;
        int min_absolute_value = 1000000001; // o valoare care este
        // suficient de mare
        int negative_count = 0;
        int N, M;
        cin >> N >> M;
        for (int i = 1; i <= N; i++)
        {
            for (int j = 1; j <= M; j++)
            {
                int elem;
                cin >> elem;
                int absolute_value; // valoarea absoluta a lui elem
                if (elem == 0)
                {
                    absolute_value = 0;
                    exists_0 = true;
                }
                else if (elem < 0)
                {
                    absolute_value = -elem;
                    negative_count += 1;
                }
                else
                {
                    absolute_value = elem;
                }
                sum_absolute_value += absolute_value;
                if (min_absolute_value > absolute_value)
                    min_absolute_value = absolute_value;
            }
        }

        if (exists_0)
        {
            cout << sum_absolute_value << ""\n"";
        }
        if (!exists_0 && negative_count % 2 == 0)
        {
            cout << sum_absolute_value << ""\n"";
        }
        if (!exists_0 && negative_count % 2 == 1)
        {
            cout << sum_absolute_value - 2 * min_absolute_value << ""\n"";
        }
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define long long int

void call()
{
    int n, m;
    cin >> n >> m;

    int arr[n][m];
    memset(arr, 0, sizeof(arr));

    int zeros = 0;
    int negative = 0;
    int mn = INT_MAX;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> arr[i][j];
            mn = min(mn, abs(arr[i][j]));
            if (arr[i][j] == 0)
                zeros = 1;
            else if (arr[i][j] < 0)
                negative++;
        }
    }

    int sum = 0;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            sum += abs(arr[i][j]);

    if (zeros == 1 || negative % 2 == 0)
    {
        cout << sum << endl;
        return;
    }

    sum = sum - 2 * mn;
    cout << sum << endl;
}

main()
{
    int T;
    cin >> T;

    while (T--)
    {
        call();
    }
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define int long long
#define double long double
#define ull unsigned long long
#define pii pair<int, int>
#define tiii tuple<int, int, int>
#define pll pair<long long, long long>
#define pdd pair<double, double>
#define s second
#define f first
#define pb push_back
#define oo 1000000000000000000ll


void solve()
{
    int n, m;
    cin >> n >> m;
    vector<vector<int>> v(n, vector<int>(m));
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            cin >> v[i][j];
        }
    }

    int neg = 0;
    int sm = 0;
    int mn = oo;
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            sm += abs(v[i][j]);
            mn = min(mn, abs(v[i][j]));
            if (v[i][j] < 0)
                neg++;
        }
    }


    if (neg % 2 == 0)
        cout << sm << ""\n"";
    else
        cout << sm - 2 * mn << ""\n"";
}


signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }


    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int N = 15;
int a[N][N];
int t, m, n;

int main()
{
    cin >> t;
    while (t--)
    {
        cin >> n >> m;
        int res = 0;
        int minx = 0x3f3f3f3f;
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= m; j++)
            {
                int x;
                cin >> x;
                minx = min(minx, abs(x));
                if (x <= 0)
                    res++;
                a[i][j] = abs(x);
            }
        }
        int sum = 0;

        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= m; j++)
                sum += a[i][j];
        }
        if (res % 2 == 0)
            cout << sum << endl;
        else
            cout << sum - 2 * minx << endl;
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
using namespace std;


int32_t main()
{
    int n, m, t, mini, i, j, x, s = 0, neg;
    cin >> t;
    while (t--)
    {
        bool iszero = 0;
        mini = 105, neg = 0, s = 0;
        cin >> n >> m;
        for (i = 1; i <= n; i++)
            for (j = 1; j <= m; j++)
            {
                cin >> x;
                mini = min(mini, abs(x));
                if (x < 0)
                    neg++;
                else if (x == 0)
                    iszero = 1;
                s = s + abs(x);
            }
        if ((iszero == 1) || (iszero == 0 && neg % 2 == 0))
            cout << s << '\n';
        else
            cout << s - 2 * mini << '\n';
    }
    return 0;
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <stack>
#include <unordered_set>
#include <set>
#include <unordered_map>
#include <iomanip>
#include <random>
#include <queue>
//#include <fstream>
/*#include <cstdio>
#include <ctime>*/
#include <complex>

using namespace std;


void solve()
{
    int n, m;
    cin >> n >> m;
    bool even_neg = true;
    int miN = 101, temp, sum = 0;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
        {
            cin >> temp;
            even_neg = even_neg == (temp > 0);
            temp = abs(temp);
            miN = min(miN, temp);
            sum += temp;
        }
    if (miN == 0 || even_neg)
        cout << sum;
    else
        cout << sum - miN * 2;
    cout << endl;
}

int main()
{
    int t = 1;
    cin >> t;
    while (t--)
        solve();
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    int t;
    cin >> t;
    while (t--)
    {
        int n, m;
        cin >> n >> m;
        int memo[n][m];
        bool flag_zero = false;
        int count = 0, sum = 0;
        int less_ = numeric_limits<int>::max();
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                cin >> memo[i][j];
                if (memo[i][j] == 0)
                    flag_zero = true;
                if (memo[i][j] < 0)
                    count += 1;
                sum += abs(0 - memo[i][j]);
                less_ = min(abs(memo[i][j] - 0), less_);
            }
        }
        if (count % 2 == 0)
            less_ = 0;
        cout << sum - (less_ * 2) << ""\n"";
    }
    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
// #define Fo(i,k,n) for(i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)
#define ll long long
#define rep(i, a, b) for (ll i = a; i < b; i++)
#define si(x) scanf(""%d"", &x)
#define sl(x) scanf(""%lld"", &x)
#define ss(s) scanf(""%s"", s)
#define pi(x) printf(""%d\n"", x)
#define pl(x) printf(""%lld\n"", x)
#define ps(s) printf(""%s\n"", s)
#define deb(x) cout << #x << ""="" << x << endl
#define deb2(x, y) cout << #x << ""="" << x << "","" << #y << ""="" << y << endl
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(x) memset(x, 0, sizeof(x))
#define sortall(x) sort(all(x))
// #define tr(it, a) for(auto it = a.begin(); it != a.end(); it++)
// #define present(container, element) (container.find(element) != container.end())
#define PI 3.1415926535897932384626
typedef pair<int, int> pii;
typedef pair<ll, ll> pl;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pii> vpii;
typedef vector<pl> vpl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
// int mpow(int base, int exp);
// void ipgraph(int n, int m);
// void dfs(int u, int par);

const int mod = 1'000'000'007;
const int N = 3e5, M = N;
//=======================

// vi g[N];(cant use)

// int a[N];

void solve()
{
    int n, m;
    cin >> n >> m;
    int a[n][m];
    int neg = 0;
    int z = 0;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> a[i][j];
            if (a[i][j] < 0)
                neg++;
            if (a[i][j] == 0)
                z++;
        }
    }
    //   int pos=n*m-neg-z;
    // int X=n*m-z;
    //   cout<<z<<"" ""<<neg<<""\n"";
    int sum = 0, mi = 1000;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            sum += abs(a[i][j]);
            //   if(abs(a[i][j])!=0 && mi>=abs(a[i][j])){
            mi = min(mi, abs(a[i][j]));
            //   }
        }
    }
    if (z)
    {
        cout << sum << ""\n"";
        return;
    }
    if (neg % 2 == 0)
    {
        cout << sum << ""\n"";
    }
    else
    {
        cout << sum - 2 * mi << ""\n"";
    }
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);


    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }

    return 0;
}

// int mpow(int base, int exp) {
//   base %= mod;
//   int result = 1;
// while (exp > 0) {
//     if (exp & 1) result = ((ll)result * base) % mod;
//     base = ((ll)base * base) % mod;
//     exp >>= 1;
//   }
//   return result;
// }

// void ipgraph(int n, int m){
// 	int i, u, v;
// 	while(m--){
// 		cin>>u>>v;
//     u--, v--;
// 		g[u].pb(v);
// 		g[v].pb(u);
// 	}
// }

// void dfs(int u, int par){
// 	for(int v:g[u]){
// 		if (v == par) continue;
// 		dfs(v, u);
// 	}
// }",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*#include <bits/stdc++.h>
using namespace std;
const int N = 1e5+5;
int n ,m ,a[N] ,u ,v ,counter=0;
vector<int> adj[N] ;
int dfs(int p,int gp,int cnt){
    counter++;
    if(cnt>m) return 0;
    if(p!=1 && adj[p].size()==1) return 1;
    int ret = 0 ;
    for(int ch:adj[p]){
        if(ch==gp) continue ;
        int nwcnt ;
        if(a[ch]==1) nwcnt = cnt+1 ;
        else nwcnt = 0 ;
        ret += dfs(ch,p,nwcnt);
    }
    return ret ;
}
int solve() {
    cin >> n >> m ;
    for(int i=1;i<=n;++i) cin >> a[i] ;
    for(int i=1;i<n;++i){
        cin >> u >> v ;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
   cout<< dfs(1,-1,a[1])<<"" ""<<counter<<""\n"";
    return 0;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    solve();
    return 0;
}
*/
#include <bits/stdc++.h>
using namespace std;
#define MAX_N 200005
#define pb push_back
vector<int> a[MAX_N];
int vis[MAX_N], l[MAX_N];
void dfs(int n)
{
    for (auto i : a[n])
    {
        if (vis[i] == -1)
        {
            vis[i] = 1 - vis[n];
            dfs(i);
        }
        if (vis[i] == vis[n])
        {
            cout << i << "" "" << n << "" "" << vis[i] << "" "" << vis[n] << ""\n"";
            cout << ""NO"" << endl;
            exit(0);
        }
    }
}
int main()
{
    /*	int n,m,v;cin>>n>>m;
            for(int i=0;i<m;i++){
                    cin>>l[i]>>v;
                    a[l[i]].pb(v);
                    a[v].pb(l[i]);
            }
            memset(vis,-1,sizeof vis);
            vis[1]=1;
            dfs(1);
            cout<<""YES""<<endl;
            for(int i=0;i<m;i++){
                    cout<<vis[l[i]];
            }
            return 0;*/
    int t, m, n;
    cin >> t;
    while (t--)
    {
        int x, mi = 1e9, cnt = 0, sum = 0;
        cin >> n >> m;
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= m; j++)
            {
                scanf(""%d"", &x);
                if (x < 0)
                    cnt++;
                x = abs(x);
                sum += x;
                mi = min(mi, x);
            }
        if (cnt % 2)
            sum -= mi * 2;
        cout << sum << endl;
    }
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    long long int t;
    cin >> t;
    while (t--)
    {
        long long int n, m, i, sum = 0, zero = 0, neg = 0, mini = 101, a;
        cin >> n >> m;
        for (i = 1; i <= n * m; i++)
        {
            cin >> a;
            sum += abs(a);
            mini = min(mini, abs(a));
            if (a < 0)
            {
                neg++;
            }
            if (a == 0)
            {
                zero = 1;
            }
        }
        if (neg % 2 == 0 || zero)
        {
            cout << sum << endl;
        }
        else
        {
            sum -= 2 * mini;
            cout << sum << endl;
        }
    }

    return 0;
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, m;
        cin >> n >> m;
        int a[n][m];
        int cnt = 0;
        int maxv = 110;
        int sum = 0;
        int cnt0 = 0;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                cin >> a[i][j];
                if (a[i][j] < 0)
                    cnt++;
                if (a[i][j] == 0)
                    cnt0++;
                if (a[i][j] != 0)
                    maxv = min(abs(a[i][j]), maxv);
                sum += abs(a[i][j]);
            }
        }
        // cout<<cnt0<<"" ""<<cnt<<"" ""<<sum<<"" ""<<maxv<<endl;
        if (cnt % 2 == 0 || cnt0 > 0)
            cout << sum << endl;
        else
            cout << sum - 2 * maxv << endl;
    }
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
#define pb push_back
#define fi first
#define se second
#define pii pair<int, int>
#define mp make_pair
using namespace std;
void solve()
{
    int n, m;
    cin >> n >> m;
    int f = 0, x = 1000, ans = 0;
    int nn = 0;
    int a[n + 1][m + 1];
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> a[i][j];
            if (a[i][j] < 0)
                nn++;
            if (a[i][j] == 0)
                f = 1;
            x = min(abs(a[i][j]), x);
            ans += abs(a[i][j]);
        }
    }
    if (f == 1)
        cout << ans << endl;
    else if (nn % 2)
        cout << ans - (2 * x) << endl;
    else
        cout << ans << ""\n"";
}
int32_t main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
}
",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define ll long long int

int main()
{

    ll t;

    cin >> t;

    while (t--)
    {
        ll n, m;
        cin >> n >> m;
        ll a[n + 2][m + 2];

        ll sum = 0, min = 101, c = 0;
        for (ll i = 1; i < n + 1; i++)
        {
            for (ll j = 1; j < m + 1; j++)
            {
                cin >> a[i][j];
                if (a[i][j] < 0)
                {
                    c += 1;
                }
                if (abs(a[i][j]) < min)
                {
                    min = abs(a[i][j]);
                }
                sum += abs(a[i][j]);
            }
        }

        if (c % 2 == 1)
        {
            cout << sum - 2 * min << endl;
        }
        else
        {

            cout << sum << endl;
        }
    }

    return 0;
}",1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
const int N = 1e5 + 5;
const ll INF = 1e18;

int n, k, z;
ll ans;
ll a[N], f[N][10];

int main()
{
    int T;
    for (scanf(""%d"", &T); T--;)
    {
        scanf(""%d%d%d"", &n, &k, &z);
        for (int i = 1; i <= n; i++)
            scanf(""%lld"", &a[i]);
        for (int i = 0; i <= n + 1; i++)
            for (int j = 0; j <= z; j++)
                f[i][j] = -INF;
        ll ans = -INF;
        f[0][0] = 0;
        for (int j = 0; j <= z; j++)
            for (int i = 1; i <= n; i++)
            {
                f[i][j] = max(f[i - 1][j], j ? f[i + 1][j - 1] : -INF) + a[i];
                if (i + j + j - 1 == k)
                    ans = max(ans, f[i][j]);
            }
        printf(""%lld\n"", ans);
    }
}

/*
8
5 4 0
1 5 4 3 2
5 4 1
1 5 4 3 2
5 4 4
10 20 30 40 50
10 7 3
4 6 8 2 9 9 7 4 10 9
5 4 0
1 5 4 3 2
5 4 1
1 5 4 3 2
5 4 4
10 20 30 40 50
10 7 3
4 6 8 2 9 9 7 4 10 9
 */",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;
const int N = 1e5 + 10;
int n, k, z, v[N];

int main()
{
    cin.tie(0);
    cout.tie(0);
    ios::sync_with_stdio(0);
    int t;
    cin >> t;

    while (t--)
    {
        cin >> n >> k >> z;
        for (int i = 1; i <= n; i++)
            cin >> v[i];

        int ans = 0;
        for (int t = 0; t <= z; t++)
        {
            int sum = 0, maxx = 0;
            for (int i = 1; i <= k - 2 * t + 1; i++)
            {
                if (i < n)
                    maxx = max(maxx, v[i] + v[i + 1]);
                sum += v[i];
            }
            ans = max(ans, sum + maxx * t);
        }
        cout << ans << ""\n"";
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int arr[100005];
inline int read()
{
    int x = 0, s = 1;
    char c = getchar();
    while (c < 48 || c > 57)
    {
        if (c == '-')
            s = -1;
        c = getchar();
    }
    while (c <= 57 && c >= 48)
    {
        x = (x << 1) + (x << 3) + c - '0';
        c = getchar();
    }
    return s * x;
}
int main()
{
    int N;
    cin >> N;
    while (N--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        for (int i = 0; i < n; i++)
            arr[i] = read();
        int sum = 0, maxp = 0, ans = maxp;
        for (int i = 0; i <= k; i++)
        {
            sum += arr[i];
            maxp = max(arr[i] + arr[i + 1], maxp);
            ans = max(ans, min(z, k - i >> 1) * maxp + sum);
        }
        cout << ans << endl;
    }
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define NN 100100

using namespace std;
using INT = long long;

int a[NN];

int main()
{
#ifndef ONLINE_JUDGE
    freopen(""in.in"", ""r"", stdin);
    freopen(""out.out"", ""w"", stdout);
#endif
    int t;
    cin >> t;
    while (t--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        for (int i = 1; i <= n; i++)
            scanf(""%d"", &a[i]);
        int tot = 0, sum = 0;
        int mx = 0;
        for (int i = 1; i <= k + 1; i++)
        {
            mx = max(mx, a[i] + a[i - 1]);
            sum += a[i];
            if ((i - 1) % 2 != k % 2)
                continue;
            int ct = (k + 1 - i) / 2;
            if (ct > z)
                continue;
            tot = max(tot, sum + mx * ct);
            if (i < n && ct)
            {
                int tmp = max(mx, a[i + 1] + a[i]);
                tot = max(tot, sum + a[i + 1] + tmp * (ct - 1) + a[i]);
            }
        }
        cout << tot << endl;
    }
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// in the name of God
// 8dPRvhQ3Hr
#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define debug(a) cout << (&a) << "" : "" << a << '\n'
#define fast ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
typedef long long ll;
typedef long double ld;
using namespace std;
int main()
{
    fast;
    int t;
    cin >> t;
    while (t--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        int inp[n + 1];
        inp[0] = 0;
        for (int i = 1; i <= n; i++)
        {
            cin >> inp[i];
            inp[i] += inp[i - 1];
        }
        k++;
        int ans = 0;
        for (int i = 2; i <= k; i++)
        {
            int tmp = 0;
            tmp += inp[i];
            if (min(k - i, 2 * z) % 2)
            {
                tmp += (min(k - i, 2 * z) / 2) * (inp[i] - inp[i - 1]);
                tmp += ((min(k - i, 2 * z) + 1) / 2) * (inp[i - 1] - inp[i - 2]);
            }
            else
                tmp += (min(k - i, 2 * z) / 2) * (inp[i] - inp[i - 2]);
            tmp += inp[k - (i + min(k - i, 2 * z)) + i] - inp[i];
            ans = max(ans, tmp);
        }
        cout << ans << '\n';
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long int
string str;

void f()
{
    int n, k, z;
    cin >> n >> k >> z;
    int a[n];
    int pre[n + 1];
    pre[0] = 0;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        pre[i + 1] = pre[i] + a[i];
    }
    int ans = 0;
    for (int i = 0; i <= k; i++)
        ans += a[i];
    for (int left = 1; left <= z; left++)
    {
        int r = k - 2 * left + 1;
        if (r < 0)
            break;
        int t = pre[r];
        int mx = -1;
        for (int j = 0; j <= min(n - 1, r); j++)
        {
            mx = max(mx, a[j] + a[j + 1]);
        }
        t += (mx * left);
        ans = max(t, ans);
    }
    cout << ans << endl;
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t = 1;
    cin >> t;
    while (t--)
    {
        f();
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
long long t, n, k, z, maxn = 0, res = 0, a[100010], b[100010];
int main()
{
    scanf(""%lld"", &t);
    while (t--)
    {
        maxn = 0;
        res = 0;
        scanf(""%lld%lld%lld"", &n, &k, &z);
        for (int i = 1; i <= n; i++)
            scanf(""%lld"", &a[i]), b[i] = b[i - 1] + a[i];
        for (int i = 1; i <= k + 1; i++)
        {
            if (i < n)
                res = max(res, a[i] + a[i + 1]);
            maxn = max(maxn, b[i] + res * min((k + 1 - i) / 2, z));
        }
        printf(""%lld\n"", maxn);
    }
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define float long double
#define int long long
#define vl vector<int>
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define all(x) x.begin(), x.end()
#define alr(x) x.rbegin(), x.rend()
#define endl '\n'
#define cnl cout << endl;
#define ms(x, v) ((x), v, sizeof((x)))
#define CASET                                                                                      \
    int ___T;                                                                                      \
    scanf(""%lld"", &___T);                                                                          \
    for (int cs = 1; cs <= ___T; cs++)
const int N = 500 * 1000 + 9;
const int inf = 1e18;
const int mod = 1e9 + 7;
#define pi 3.141592653589793238
int dp[100001][6];
int calculate(vector<int>& v, int i, int n, int k, int p)
{
    if (i == n)
        return 0;
    if (k == 0)
        return 0;
    if (dp[k][p] != -1)
        return dp[k][p];
    int ans1 = 0;
    int ans2 = 0;
    ans1 = v[i + 1] + calculate(v, i + 1, n, k - 1, p);
    if (p > 0 and i - 1 >= 0)
        ans2 = v[i - 1] + calculate(v, i - 1, n, k - 1, p - 1);
    return dp[k][p] = max(ans1, ans2);
}
void HakunaMatata()
{
    int n, k, p;
    cin >> n >> k >> p;
    vector<int> v(n);
    for (int i = 0; i < n; i++)
        cin >> v[i];
    memset(dp, -1, sizeof(dp));
    int ans = calculate(v, 0, n, k, p);
    ans = ans + v[0];
    cout << ans << endl;

    return;
}


signed main()
{
#ifndef ONLINE_JUDGE
    freopen(""output.txt"", ""w"", stdout);
    freopen(""input.txt"", ""r"", stdin);
#endif
    CASET
    HakunaMatata();


    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <math.h>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
#define M_PI 3.14159265358979323846


const int M = 1e9 + 7;
long long mod(long long x)
{
    return ((x % M + M) % M);
}
long long add(long long a, long long b)
{
    return mod(mod(a) + mod(b));
}
long long n, k, z;
long long dp[100002][6];
long long ok(vector<long long>& a, int i, int kk, int zz)
{
    if (kk == 0 || i >= n || i < 0)
        return 0;
    //        cout<<""in""<<""\n"";
    if (dp[i][zz] != -1)
        return dp[i][zz];
    long long val = 0;
    if (i < n)
        val = max(val, a[i] + ok(a, i + 1, kk - 1, zz));
    if (i >= 0 && zz > 0)
        val = max(val, a[i] + ok(a, i - 1, kk - 1, zz - 1));
    return dp[i][zz] = val;
}
void solve()
{
    cin >> n >> k >> z;
    vector<long long> a(n);
    for (int i = 0; i < n; i++)
        cin >> a[i];
    memset(dp, -1, sizeof(dp));
    long long x = ok(a, 1, k, z) + a[0];
    cout << x << ""\n"";
}
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cout << fixed;
    cout << setprecision(10);
    //        freopen(""timber_input.txt"", ""r"", stdin);
    //        freopen(""timber_output.txt"", ""w"", stdout);
    int t = 1;
    cin >> t;
    for (int i = 1; i <= t; i++)
    {
        //            cout<<""Case #""<<i<<"": "";
        solve();
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define speed                                                                                      \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(0);                                                                                    \
    cout.tie(0)
#define int long long
#define fi first
#define se second

using namespace std;

const int N = 1e5 + 7;
const int mod = 1e9 + 7;

int a[N];

void solve()
{
    int n, k, z;
    cin >> n >> k >> z;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
    }
    int ans = 0;
    for (int t = 0; t <= z; t++)
    {
        int cnt = 0, mx = 0;
        for (int i = 1; i <= k - 2 * t + 1; i++)
        {
            cnt += a[i];
            mx = max(mx, a[i] + a[i + 1]);
        }
        if (t)
        {
            cnt += mx * t;
        }
        ans = max(ans, cnt);
    }
    cout << ans << '\n';
}

int32_t main()
{
    int T = 1;
    cin >> T;
    while (T--)
    {
        solve();
    }
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long int

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    while (t--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        // n=min(k+1,n);
        int arr[n];
        vector<ll> prefix(n, 0);
        vector<ll> sum(n, 0);

        sum[0] = 0;
        for (int i = 0; i < n; i++)
        {
            cin >> arr[i];
            if (i == 0)
            {
                prefix[0] = arr[0];
            }
            if (i > 0)
            {
                prefix[i] = prefix[i - 1] + arr[i];
                sum[i] = arr[i] + arr[i - 1];
            }
        }

        // for(int i=0;i<n;i++)
        // {
        // 	cout<<arr[i]<<"" "";
        // }
        // cout<<endl;
        // for(int i=0;i<n;i++)
        // {
        // 	cout<<prefix[i]<<"" "";
        // }
        // cout<<endl;
        // for(int i=0;i<n;i++)
        // {
        // 	cout<<sum[i]<<"" "";
        // }
        // cout<<endl;

        ll ans = 0;
        if (n == 1)
            cout << arr[0] << endl;
        else
        {
            ll bada = 0;
            for (int i = 1; i < min(k + 1, n); i++)
            {
                bada = max(bada, sum[i]);
                int rem = k - i;
                ll final = 0;

                if (rem % 2 == 0)
                {
                    final += bada * min((rem / 2), z);
                }
                else if (rem % 2 != 0)
                {
                    final += bada * min((rem / 2), z - 1);
                    final += arr[i - 1];
                }
                ans = max(ans, prefix[i] + final);
            }
            cout << ans << endl;
        }
    }
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    long long int t;
    cin >> t;
    while (t--)
    {
        long long int n, k, z, i;

        cin >> n >> k >> z;
        long long int a[n];
        for (i = 0; i < n; i++)
            cin >> a[i];

        long long int abc = 0;
        for (int t = 0; t <= z; t++)
        {
            long long int pos = k - 2 * t;
            long long int sum = 0, ans = 0;

            for (int i = 0; i <= pos; i++)
            {
                if (i < n - 1)
                    sum = max(sum, a[i] + a[i + 1]);
                ans += a[i];
            }

            abc = max(abc, ans + t * sum);
        }
        cout << abc << endl;
    }
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
using namespace std;
const int N = 1e5 + 5, M = 6;
int t, n, k, z, a[N], f[N][M], ans; // f[i][j]:  i j 
signed main()
{
    scanf(""%lld"", &t);
    while (t--)
    {
        scanf(""%lld%lld%lld"", &n, &k, &z);
        for (int i = 1; i <= n; i++)
            scanf(""%lld"", &a[i]);
        memset(f, -0x3f, sizeof(f)), ans = 0, f[1][0] = a[1];
        for (int j = 0; j <= z; j++)
            for (int i = 1; i <= n; i++)
            {
                if (i + 1 <= n)
                    f[i + 1][j] = max(f[i + 1][j], f[i][j] + a[i + 1]);
                if (i - 1 >= 1)
                    f[i - 1][j + 1] = max(f[i - 1][j + 1], f[i][j] + a[i - 1]);
                if (i + 2 * j - 1 == k)
                    ans = max(ans, f[i][j]);
            }
        /*
        for(int j=0;j<=z;j++){
                int i=k+1-2*j;	//i+2*j-1=k
                if(i>=1&&i<=n&&i+2*j-1==k) ans=max(ans,f[i][j]);
        }
        */
        printf(""%lld\n"", ans);
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <unordered_set>
#include <unordered_map>
#define ll long long
using namespace std;
int func(int moves, int remLefts, int CangoLeft, int movesLeft, vector<int>& nums,
    vector<vector<vector<ll>>>& dp)
{
    int z = dp[0].size() - 1;
    int pos = moves - (2 * (z - remLefts));
    if (movesLeft == 0)
        return nums[pos];
    if (dp[movesLeft][remLefts][CangoLeft])
        return dp[movesLeft][remLefts][CangoLeft];
    int a = 0, b;
    if (CangoLeft && remLefts)
        a = func(moves + 1, remLefts - 1, 0, movesLeft - 1, nums, dp);
    b = func(moves + 1, remLefts, 1, movesLeft - 1, nums, dp);
    return dp[movesLeft][remLefts][CangoLeft] = nums[pos] + max(a, b);
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        vector<int> a(n);
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        vector<vector<vector<ll>>> dp(k, vector<vector<ll>>(z + 1, vector<ll>(2, 0)));
        int ans = a[0] + func(1, z, 1, k - 1, a, dp);
        cout << ans << ""\n"";
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define F first
#define S second
const ll N = 3e5 + 2;
const ll MOD = 1e9 + 7;
const ll Inf = MOD * MOD;
const long double eps = 1e-7;
const ll dx[] = { 1, -1, 0, 0 };
const ll dy[] = { 0, 0, 1, -1 };
ll n, k, z, a[N], timer = 0, t = 1;
void Solve()
{
    scanf(""%lld%lld%lld"", &n, &k, &z);
    for (int i = 1; i <= n; ++i)
        scanf(""%lld"", &a[i]);
    ll Ans = 0;
    for (int Z = 0; Z <= z; ++Z)
    {
        ll Sum = 0;
        for (int i = 1; i <= k - 2 * Z + 1; ++i)
            Sum += a[i];
        ll MAX = 0;
        for (int i = 1; i <= k - 2 * Z + 1; ++i)
            MAX = max(MAX, a[i] + a[i + 1]);
        Ans = max(Ans, Sum + Z * MAX);
    }
    cout << Ans;
}
int main()
{
    scanf(""%lld"", &t);
    while (t--)
    {
        ++timer;
        Solve();
        puts("""");
    }
}
// Section Time : 0;
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstdio>
#define int long long
using namespace std;
const int N = 3e5 + 10;
int T, n, k, z, a[N];
int f[N][10];
int MAX(int x, int y)
{
    return x > y ? x : y;
}
signed main()
{
    scanf(""%lld"", &T);
    while (T--)
    {
        scanf(""%lld%lld%lld"", &n, &k, &z);
        for (int i = 1; i <= n; i++)
            scanf(""%lld"", &a[i]);
        for (int i = 1; i <= n; i++)
            for (int j = 0; j <= z; j++)
                f[i][j] = 0;
        int ans = 0;
        f[1][0] = a[1];
        for (int j = 0; j <= z; j++)
            for (int i = 1; i <= n; i++)
            {
                if (i < n)
                    f[i + 1][j] = MAX(f[i + 1][j], f[i][j] + a[i + 1]);
                if (i > 1 && j < z)
                    f[i - 1][j + 1] = MAX(f[i - 1][j + 1], f[i][j] + a[i - 1]);
                if (i + j * 2 - 1 == k)
                    ans = MAX(ans, f[i][j]);
            }
        printf(""%lld\n"", ans);
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;
// #define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

#define codeWizard                                                                                 \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0)
#define testCase(tc) while (tc--)
#define vi vector<int>
#define pi pair<int, int>
#define int long long
#define mod 1000000007
#define ff first
#define ss second
#define inf (int)1e17
#define ninf -inf
#define endl ""\n""
#define fill(a, b) memset(a, b, sizeof(a))
#define all(v) v.begin(), v.end() // codeWizard

void init_code()
{
    codeWizard;
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
}

void solve()
{
    int n;
    cin >> n;
    int k, z;
    cin >> k >> z;
    vector<int> v(n);
    for (int i = 0; i < n; i++)
        cin >> v[i];
    vector<int> prefix(n + 1);
    for (int i = 0; i < n; i++)
        prefix[i + 1] = v[i] + prefix[i];
    int ans = 0;
    for (int i = 1; i < n; i++)
    {
        int sum = prefix[i + 1];
        int t = k;
        t -= i;
        if (t < 0)
            break;
        if (t >= 2 * z)
        {
            t -= 2 * z;
            sum += prefix[t + i + 1] - prefix[i + 1] + (v[i] + v[i - 1]) * z;
        }
        else if (t > 0)
        {
            int j = t / 2;
            sum += (v[i] + v[i - 1]) * (j);
            if (t - 2 * j)
                sum += max(v[i - 1], i + 1 == n ? 0 : v[i + 1]);
        }
        // cout<<sum<<endl;
        ans = max(ans, sum);
    }
    cout << ans << endl;
}
signed main()
{
    init_code();
    int tc = 1;
    cin >> tc;
    int num = 1;
    testCase(tc)
    {
        // cout<<""Case #""<<num<<"": "";
        num++;
        solve();
    }
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
const int N = 3e5 + 5;
int a[N];
int n, m, l, k, x, y, t, w, now, ans, z;

signed main()
{
    cin >> t;
    while (t--)
    {
        cin >> n >> k >> z;
        for (int i = 1; i <= n; i++)
        {
            cin >> a[i];
        }
        ans = 0;
        for (int i = 1; i <= k + 1; i++)
            ans += a[i];

        for (int i = 1; i <= z; i++)
        {

            int mx = 0;
            now = 0;
            for (int j = 1; j <= k + 1 - 2 * i + 1; j++)
            {
                now += a[j];
            }
            for (int j = 2; j <= k + 1 - 2 * i + 1; j++)
            {
                if (j == k + 1 - 2 * i + 1)
                {
                    if (now + i * a[j - 1] + (i - 1) * a[j] > ans)
                        ans = now + i * a[j - 1] + (i - 1) * a[j];
                }
                else
                {
                    if (now + i * a[j - 1] + i * a[j] - a[k + 1 - 2 * i + 1] > ans)
                        ans = now + i * a[j - 1] + i * a[j] - a[k + 1 - 2 * i + 1];
                }
            }
        }
        cout << ans << endl;
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <iostream>
using namespace std;
#define ll long long
#define mod 1000000007
#define MAX (1LL << 60) - 1
#define MIN -((1LL << 60) - 1)
#define INPUT_OUTPUT freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout)

ll max(ll a, ll b)
{
    if (a < b)
        return b;
    return a;
}
ll min(ll a, ll b)
{
    if (a < b)
        return a;
    return b;
}

void solve()
{
    ll n, k, z;
    cin >> n >> k >> z;
    ll arr[n];
    for (int i = 0; i < n; i++)
        cin >> arr[i];

    if (k == 1)
    {
        cout << (arr[0] + arr[1]) << ""\n"";
        return;
    }

    ll maxi[n], sum[n];
    for (int i = 0; i < n; i++)
        if (!i)
            maxi[i] = 0, sum[i] = arr[i];
        else
        {
            if (i == 1)
                maxi[i] = arr[1] + arr[0];
            else
                maxi[i] = max(maxi[i - 2], arr[i - 1] + arr[i]);

            sum[i] = sum[i - 1] + arr[i];
        }

    if (z == 0)
    {

        cout << sum[k] << ""\n"";
        return;
    }

    ll ans = 0;
    for (int x = 0; x <= z; x++)
    {
        ll go = k - 2 * x;
        if (go < 0)
            continue;

        ll s = 0, m = 0;
        for (int i = 0; i <= go; i++)
            s += arr[i];
        for (int i = 0; i <= go; i++)
            m = max(m, arr[i] + arr[i + 1]);

        ans = max(ans, s + m * x);
        // for (int i = 0; i <= go; i++)
        //     ans = max(ans, sum[i] + x * (maxi[i]));
    }

    cout << ans << ""\n"";
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    ll test = 0;
    cin >> test;
    while (test--)
        solve();

    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*
  string to integer stoi()
  string to long long stoll()
  string.substr(position,length)
  cout << fixed << setprecision(2) << d;
  auto functNmae = [&](int x, int cur){};
*/

#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define fr(i, x, y) for (int i = (int)x; i < (int)y; ++i)
#define frr(i, x, y) for (int i = (int)x; i >= (int)y; --i)
#define all(x) x.begin(), x.end()
#define sortall(x) sort(all(x))
#define null NULL
#define endl ""\n""
#define m_p(x, y) make_pair(x, y)
#define fs first
#define se second
#define pb push_back
#define sz(x) x.size()
#define bits(x) __builtin_popcountll(x)

#define debug(x) cout << #x << ':' << x << endl
#define debugArr(A)                                                                                \
    cout << #A << ':';                                                                             \
    for (auto x : A)                                                                               \
        cout << x << ' ';                                                                          \
    cout << endl
#define read(x) cin >> x
#define readArr(A, x, y) fr(i, x, y) cin >> A[i]
#define print(x) cout << x << endl
#define printArr(A, x, y)                                                                          \
    fr(i, x, y) cout << A[i] << ' ';                                                               \
    cout << endl

typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<string> vs;
typedef unordered_set<int> u_set;
typedef unordered_map<int, int> u_map;

const int N = 1e6;
const int INF = 1e9;
const int MOD = 1e9 + 7;

ll add(ll x, ll y)
{
    x += y;
    if (x >= MOD)
        x -= MOD;
    return x;
}
ll sub(ll x, ll y)
{
    x -= y;
    if (x < 0)
        x += MOD;
    return x;
}
ll mul(ll x, ll y)
{
    ll prod = x * 1ll * y;
    while (prod >= MOD)
        prod -= MOD;
    return prod;
}
ll inv(ll p, ll q)
{
    ll expo = MOD - 2;
    while (expo)
    {
        if (expo & 1)
            p = mul(p, q);
        q = mul(q, q);
        expo >>= 1;
    }
    return p;
}
ll gcd(ll a, ll b)
{
    if (b == 0)
        return a;
    a %= b;
    return gcd(b, a);
}
bool sortcol(const vector<int>& v1, const vector<int>& v2)
{
    return v1[1] < v2[1];
}

vi graph[N];

//=========================CODE IS HERE======================//

void solveTestCase()
{
    int n, k, z;
    cin >> n >> k >> z;
    vl a(n);
    readArr(a, 0, n);
    vl dp(n);
    dp[0] = a[0];
    fr(i, 1, n) dp[i] = dp[i - 1] + a[i];
    ll ans = dp[k];
    fr(i, 1, z + 1)
    {
        if (k - 2 * i < 0)
            break;
        ll tmp = a[0] + a[1];
        fr(j, 1, k - 2 * i + 1) tmp = max(tmp, max(a[j - 1], a[j + 1]) + a[j]);
        ans = max(ans, tmp * i + dp[k - 2 * i]);
    }
    print(ans);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    cin >> t;
    while (t--)
        solveTestCase();
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <locale>
#include <stdlib.h>
#include <set>
#include <list>
//#include <unordered_set>
//#include <unordered_map>
#include <vector>
#include <map>
#include <deque>
#include <stack>
#include <math.h>
#include <stdio.h>
#include <sstream>
#include <conio.h>
#include <stdlib.h>
#include <ctime>
#define ll long long int
#define contains(st, el) (st.find(el) != st.end())
#define ncontains(st, el) (st.find(el) == st.end())

#define vct vector

#define MOD 1000000007


using namespace std;

template <class T>
int cmp(const void* a, const void* b)
{
    return *((T*)a) - *((T*)b);
}
template <class T>
int rcmp(const void* a, const void* b)
{
    return *((T*)b) - *((T*)a);
}

int p_rcmp(const void* a, const void* b)
{
    return (*((pair<ll, int>*)b)).first - (*((pair<ll, int>*)a)).first;
}

int min(int a, int b)
{
    return (a < b) ? a : b;
}
int max(int a, int b)
{
    return (a > b) ? a : b;
}

void swap(int& a, int& b)
{
    a ^= b;
    b ^= a;
    a ^= b;
}

vct<int> edges[100001];
// set<int> cases;
// stack<int> stck;
void make_bond(int a, int b, vct<int>* edges)
{
    edges[a].push_back(b);
    edges[b].push_back(a);
}
void make_bond(int a, int b, set<int>* edges)
{
    edges[a].insert(b);
    edges[b].insert(a);
}


ll find_mx(int* vals, ll k_s, ll k_e)
{
    ll mx = 0;
    ll sum = 0;
    for (int i = k_s; i < k_e - 1; i++)
    {
        sum += vals[i];
        ll s = sum;
        ll k = k_e - i - 1;
        s += k / 2 * (vals[i] + vals[i + 1]);
        if (k % 2)
            s += vals[i + 1];
        if (s > mx)
            mx = s;
    }
    if (sum > mx)
        mx = sum;
    return mx;
}

int main()
{
    int t = 1;
    cin >> t;
    ll n, k, z, m;
    string s;
    int vals[300001];
    while (t-- > 0)
    {
        cin >> n >> k >> z;
        ll k_s = ((k + 1 - 2 * z) >= 0) ? (k + 1 - 2 * z) : 0;
        ll k_e = k + 1;
        // cout <<k_s <<' ' <<k_e <<'\n';
        for (int i = 0; i < n; i++)
            cin >> vals[i];
        ll right_max = find_mx(vals, k_s, k_e);
        ll left_sum = (k_s > 0 ? vals[0] : 0);
        ll left_max = 0;
        for (int i = 1; i < k_s; i++)
        {
            left_sum += vals[i];
            if ((vals[i] + vals[i - 1]) * z > left_max)
                left_max = (vals[i] + vals[i - 1]) * z;
        }
        ll mid_max;
        if (k_s > 0)
            mid_max = (vals[k_s] + vals[k_s - 1]) * z;
        else
            mid_max = 0;
        // cout <<left_max <<' ' << right_max <<' ' <<mid_max <<'\n';
        ll pls_max = (left_max > right_max) ? left_max : right_max;
        pls_max = (pls_max > mid_max) ? pls_max : mid_max;
        cout << left_sum + pls_max << '\n';
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
using namespace std;
const int N = 1e5 + 5, M = 6;
int t, n, k, z, a[N], f[N][M], ans; // f[i][j]:  i j 
signed main()
{
    scanf(""%lld"", &t);
    while (t--)
    {
        scanf(""%lld%lld%lld"", &n, &k, &z);
        for (int i = 1; i <= n; i++)
            scanf(""%lld"", &a[i]);
        memset(f, -0x3f, sizeof(f)), ans = 0, f[1][0] = a[1];
        for (int j = 0; j <= z; j++)
            for (int i = 1; i <= n; i++)
            {
                if (i + 1 <= n)
                    f[i + 1][j] = max(f[i + 1][j], f[i][j] + a[i + 1]);
                if (i - 1 >= 1)
                    f[i - 1][j + 1] = max(f[i - 1][j + 1], f[i][j] + a[i - 1]);
                if (i + 2 * j - 1 == k)
                    ans = max(ans, f[i][j]);
            }
        printf(""%lld\n"", ans);
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define sortdesc greater<int>()
#define ll long long int
#define f(i, a) for (int i = 0; i < a; i++)
#define fo(i, a) for (int i = 1; i <= a; i++)
#define foo(i, x, n, c) for (ll i = x; i < n; i += c)
#define foi(i, x, n, c) for (ll i = x; i >= n; i += c)
#define forall(a) for (auto itr = a.begin(); itr != a.end(); itr++)
#define ld long double
#define in push_back
#define mll map<ll, ll>
#define vi vector<int>
#define vl vector<ll>
#define vc vector<char>
#define o(a) cout << a
#define os(a) cout << a << "" ""
#define en cout << ""\n"";
#define testcase                                                                                   \
    ll t;                                                                                          \
    cin >> t;                                                                                      \
    while (t--)
#define ff first
#define ss second
#define pl pair<ll, ll>
#define pi pair<int, int>
#define all(a) (a).begin(), (a).end()

#define sz(a) (a).size()
#define prec(n) fixed << setprecision(n)
#define mp make_pair
#define bitcount __builtin_popcountll
#define imin o(""imin"");
using namespace std;
bool comp(const pair<int, int>& a, const pair<int, int>& b)
{
    if (a.first == b.first)
        return a.second < b.second;
    return a.first < b.first;
}
bool comps(const pair<int, int>& a, const pair<int, int>& b)
{
    if (a.second == b.second)
        return a.first < b.first;
    return a.second < b.second;
}
void fastio()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);

    freopen(""output.txt"", ""w"", stdout);
#endif
    ios_base::sync_with_stdio(false);
}
ll mod(ll& a)
{
    ll n = 1000000007;
    if (a >= 0)
        return a % n;
    else
        return (n + a % n) % n;
}
void swap(ll& a, ll& b)
{
    ll temp = b;
    b = a;
    a = temp;
}
ll mo = 1E9 + 7;
ll min(ll a, ll b)
{
    if (a > b)
        return b;
    else
        return a;
}
int main()
{
    ll t;
    cin >> t;
    f(ww, t)
    {

        ll n, k, z;
        cin >> n >> k >> z;
        ll a[n];
        f(i, n) cin >> a[i];
        ll ans = a[0];
        vl psum(n, 0);
        f(i, n)
        {
            if (i > 0)
                psum[i] += psum[i - 1] + a[i];
            else
                psum[i] = a[i];
        }
        //	f(i,n)
        //	{
        //
        // os(i);	os(psum[i]);en;
        //}
        // en;
        foo(i, 1, min(k + 1, n), 1)
        {
            ll cnt = psum[i];
            ll x = a[i] + a[i - 1];
            cnt += x * min(z, (k - i) / 2);
            ll tt = k - 2 * min(z, (k - i) / 2) - i;
            ll r = z - min(z, (k - i) / 2);
            if (tt >= 1)
            {
                if (r > 0)
                    cnt += a[i - 1];
                else
                    cnt += psum[min(i + tt, n - 1)] - psum[i];
            }
            ans = max(ans, cnt);
            //	os(tt);os(cnt);os(x);en;
        }
        o(ans);
        en;
        en;
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define BOOST                                                                                      \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
#define int long long

#define endl ""\n""
#define MAXN 1
#define INF 9e17
#define mod 1000000007
int dx[] = { -1, 0, 1, 0 };
int dy[] = { 0, 1, 0, -1 };
int spf[MAXN];
// int a = 1;
// int vis[105][105];

void sieve()
{
    int i, j;
    for (i = 0; i < MAXN; i++)
        spf[i] = i;
    for (i = 4; i < MAXN; i += 2)
        spf[i] = 2;
    for (i = 3; i * i < MAXN; i++)
    {
        if (spf[i] == i)
        {
            for (j = i * i; j < MAXN; j += i)
            {
                if (spf[j] == j)
                    spf[j] = i;
            }
        }
    }
}
bool isvowel(char c)
{
    switch (c)
    {
        case 'a':
        case 'e':
        case 'i':
        case 'o':
        case 'u':
        case 'y':
            return true;
        default:
            return false;
    }
}
/*bool cmp(pair<int, int>x, pair<int, int>y)
{
    return x.first > y.first;
}*/
bool isPrime(int n)
{

    for (int i = 2; i <= sqrt(n); i++)
    {
        if (n % i == 0)
        {
            return false;
        }
    }
    return true;
}

int sum(int n)
{
    int ans = 0;
    while (n > 0)
    {
        int d = n % 10;
        ans += d;
        n /= 10;
    }
    return ans;
}

// vector<int>adj[200005];
// int vis[200005];
// int sub[200005];
/*int dfs(int node)
{
    vis[node] = 1;
    int curr_size = 1;

    for (auto child : adj[node])
    {
        if (!vis[child])
        {
            curr_size += dfs(child);
        }
    }
    sub[node] = curr_size;
    return curr_size;
}*/

/*bool isValid(int x, int y)
{
    if (x < 1 || y < 1 || x > n || y > m)
    {
        return false;
    }

    if (vis[x][y] == 1 || a[x][y] == '#' || a[x][y] == 'M')
    {
        return false;
    }
    return true;
}*/
// int up[200005][30];
// int vis[200005];
int a[100001];
int dp[100001][6];
int solve(int i, int n, int k, int z)
{
    if (i >= n || k < 0 || i < 0)
    {
        return 0;
    }
    if (dp[i][z] != -1)
    {
        return dp[i][z];
    }
    int op1 = a[i];
    int op2 = a[i];
    if (i < n && k > 0)
    {
        op1 += solve(i + 1, n, k - 1, z);
    }
    if (i > 0 && k > 0 && z > 0)
    {
        op2 += solve(i - 1, n, k - 1, z - 1);
    }
    return dp[i][z] = max(op1, op2);
}

int32_t main()
{
    BOOST


    // int t = 1;
    int t;
    cin >> t;
    while (t--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        // int a[n];
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        memset(dp, -1, sizeof(dp));
        int x = solve(0, n, k, z);
        cout << x << ""\n"";
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
#define endl ""\n""
#define pb push_back
#define mp make_pair
#define all(a) a.begin(), a.end()
#define ff first
#define ss second
#define repv(i, m) for (auto i = m.begin(); i != m.end(); i++)
#define FileIO                                                                                     \
    freopen(""input.txt"", ""r"", stdin);                                                              \
    freopen(""output.txt"", ""w"", stdout);
#define IOS                                                                                        \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(0);                                                                                    \
    cout.tie(0);
const long long INF = 4000000000000000000LL;
/************************************* Trie Harder *************************************/
int main()
{
    IOS int t;
    cin >> t;
    while (t--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        vector<int> a(n);
        for (int& i : a)
            cin >> i;
        ll ans = 0;
        for (int i = 0; i <= z; i++)
        {
            int range = k - 2 * i;
            ll sum = 0, nax = 0;
            for (int j = 0; j <= range; j++)
            {
                sum += a[j];
                if (j != n - 1)
                    nax = max(nax, 0LL + a[j] + a[j + 1]);
            }
            ans = max(ans, sum + nax * i);
        }
        cout << ans << endl;
    }
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <unordered_map>
#include <climits>
#include <cmath>
#include <algorithm>
#include <string>
using namespace std;

int getans(int i, vector<int>& arr, int k, int zz, vector<vector<int> >& mem)
{

    if (i < 0 || i >= arr.size() || k <= 0)
    {
        return 0;
    }

    int val = 0;

    if (mem[k][zz] != -1)
    {
        return mem[k][zz];
    }


    if (i < arr.size())
    {
        val = max(val, (arr[i] + getans(i + 1, arr, k - 1, zz, mem)));
    }

    if (i >= 0 && zz > 0)
        val = max(val, (arr[i] + getans(i - 1, arr, k - 1, zz - 1, mem)));

    mem[k][zz] = val;

    return val;
}


int main()
{
    int t;
    cin >> t;

    while (t--)
    {

        int n, k, z;
        cin >> n >> k >> z;

        vector<vector<int> > mem(k + 1, vector<int>(z + 1, -1));

        vector<int> arr(n);

        for (int i = 0; i < n; i++)
            cin >> arr[i];


        int val = getans(1, arr, k, z, mem);

        cout << val + arr[0] << ""\n"";
    }
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long
typedef long double ld;
#define vi vector<long long>
#define SPEED                                                                                      \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(0), cout.tie(0);
#define rep(i, n) for (long long i = 0; i < n; i++)
#define rev(i, n) for (long long i = n - 1; i >= 0; i--)
#define rev_a(i, a, n) for (long long i = n - 1; i >= a; i--)
#define rep_a(i, a, n) for (long long i = a; i < n; i++)
#define pb push_back
#define all(x) x.begin(), x.end()
#define mp make_pair
#define fr first
#define sc second
typedef pair<ll, ll> pi;
const int N = 2000 * 100 + 5;
bool isPrime(ll a)
{
    for (ll i = 2; i * i <= a; ++i)
        if (a % i == 0)
            return false;
    return true;
}

bool ss(pair<ll, ll> a, pair<ll, ll> b)
{
    return (a.sc < b.sc);
}

void solve()
{
    int n, k, z;
    cin >> n >> k >> z;
    vector<int> v(n);
    rep(i, n) cin >> v[i];

    int ans = 0;
    for (int i = 0; i <= z; i++)
    {
        int rg = k - 2 * i;
        int sum = 0, mx = 0;
        for (int j = 0; j <= rg; j++)
        {
            sum += v[j];
            if (j != n - 1)
                mx = max(mx, v[j] + v[j + 1]);
        }
        ans = max(ans, sum + mx * i);
    }
    cout << ans << endl;
}


int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
#endif
    SPEED;
    int T = 1;
    cin >> T;
    while (T--)
    {
        solve();
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

long long solve(long long arr[], long long k, long long l, long long idx, long long left,
    long long dp[100001][6])
{
    if (dp[k][l] == 0)
    {
        if (k == 0)
            return arr[idx];
        long long aleft = -1;
        if (l > 0 && idx > 0)
        {
            if (left == 0)
            {
                aleft = arr[idx] + solve(arr, k - 1, l - 1, idx - 1, 1, dp);
            }
        }

        long long right = arr[idx] + solve(arr, k - 1, l, idx + 1, 0, dp);

        long long ans = max(aleft, right);
        dp[k][l] = ans;
        return ans;
    }
    else
    {
        return dp[k][l];
    }
}

int main()
{
    int t;
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin >> t;
    while (t--)
    {
        long long n, k, z;
        cin >> n >> k >> z;

        long long int dp[100001][6] = { 0 };

        long long arr[n];
        for (long long i = 0; i < n; i++)
            cin >> arr[i];

        long long ans = solve(arr, k, z, 0, 0, dp);

        cout << ans << endl;
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define p_b push_back
#define mp make_pair
#define rep(i, a, b) for (long long i = a; i < b; i++)
#define mod 1000000007
#define N 200005
#define M 1000005
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;
ll fact(ll n)
{
    if (n <= 1)
        return 1;
    return (n % mod * fact(n - 1) % mod) % mod;
}
ll nCr(ll n, ll r)
{
    if (r > n - r)
        r = n - r;
    ll ans = 1;
    rep(i, 0, r) ans = (ans * (n - i)) / (i + 1);
    return ans;
}
ll catalan(ll n)
{
    ll c = nCr(2 * n, n);
    return c / (n + 1);
}
ll gcd(ll a, ll b)
{
    if (b == 0)
        return a;
    return gcd(b, a % b);
}
ll dp[N][10];
ll recur(vector<ll>& a, ll left, ll prev, ll k, ll ind)
{
    if (dp[ind][left] != -1)
        return dp[ind][left];
    if (k == 0)
        return a[ind];
    if (ind == 0)
    {
        ll val = recur(a, left, 1, k - 1, ind + 1);
        dp[ind][left] = val + a[ind];
        return dp[ind][left];
    }
    if (left == 0 || prev == -1)
    {
        ll val = recur(a, left, 1, k - 1, ind + 1);
        dp[ind][left] = val + a[ind];
        return dp[ind][left];
    }
    else
    {
        ll val1 = recur(a, left - 1, -1, k - 1, ind - 1);
        ll val2 = recur(a, left, 1, k - 1, ind + 1);
        dp[ind][left] = max(val1, val2) + a[ind];
        return dp[ind][left];
    }
}
void solve()
{
    ll n, k, z;
    cin >> n >> k >> z;
    vector<ll> a(n);
    rep(i, 0, n) cin >> a[i];
    rep(i, 0, n)
    {
        rep(j, 0, 10) dp[i][j] = -1;
    }
    if (k == 0)
        cout << a[0] << endl;
    else
        cout << a[0] + recur(a, z, 1, k - 1, 1) << endl;
}
int main()
{
    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int tt;
    cin >> tt;
    while (tt--)
    {
        int n, k, z;
        cin >> n >> k >> z;
        vector<int> a(n);
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        int ans = 0;
        for (int it = 0; it <= z; it++)
        {
            if (k - 2 * it < 0)
            {
                continue;
            }
            int all = k - 2 * it;
            int best = -1;
            int sum = 0;
            for (int i = 0; i < all + 1; i++)
            {
                if (i < n - 1)
                {
                    best = max(best, a[i] + a[i + 1]);
                }
                sum += a[i];
            }
            ans = max(ans, sum + it * best);
        }
        cout << ans << '\n';
    }
    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> p32;
typedef pair<ll, ll> p64;
typedef pair<double, double> pdd;
typedef vector<ll> v64;
typedef vector<int> v32;
typedef vector<vector<int> > vv32;
typedef vector<vector<ll> > vv64;
typedef vector<vector<p64> > vvp64;
typedef vector<p64> vp64;
typedef vector<p32> vp32;
string alpha_upper = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"";
string alpha_lower = ""abcdefghijklmnopqrstuvwxyz"";
double eps = 1e-12;
#define pqb priority_queue<int>
#define pqs priority_queue<int, vi, greater<int> >
#define mod 1000000007
#define inf 1e18
#define pb push_back
#define INF 2e18
#define endl ""\n""
#define fast_cin()                                                                                 \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL)
#define all(x) (x).begin(), (x).end()
#define sz(x) ((ll)(x).size())
#define ps(x, y) fixed << setprecision(y) << x
#define print(anything)                                                                            \
    for (auto i : anything)                                                                        \
        cout << i << "" "";
#define debug(x) cerr << #x << "" : "" << x << "" "" << endl;

template <class Tm1, class Tm2>
void print_map(map<Tm1, Tm2> m)
{
    for (auto it = m.begin(); it != m.end(); it++)
    {
        cout << (*it).first << "" : "" << (*it).second << endl;
    }
}

/*
        $$ Understand Question in ""ABSTRACT"" way
        $$ Check the CONSTRAINTS (begin & end)
        $$ Design Algorithm
        $$ Check For any CORNER TEST CASES (and constraints)
*/

void solve()
{
    int n, k, z, ans = 0;
    cin >> n >> k >> z;
    v32 v(n);
    for (int i = 0; i < n; i += 1)
        cin >> v[i];

    for (int i = 0; i <= z; i += 1)
    {
        int mx = 0, t = k - 2 * i;
        int temp = 0;
        for (int j = 0; j <= t; j += 1)
        {
            temp += v[j];
            if (j < n - 1)
                mx = max(mx, v[j] + v[j + 1]);
        }
        ans = max(ans, temp + i * mx);
    }
    cout << ans << endl;
}

int main()
{
    fast_cin();
    ll t;
    cin >> t;
    for (ll i = 0; i < t; i++)
    {
        solve();
    }

    return 0;
}
",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
using namespace std;

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int T;
    cin >> T;
    for (int tc = 1; tc <= T; tc++)
    {
        int n, k, z;
        cin >> n >> k >> z;
        k++;
        vector<int> a(n);
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        vector<int> two(n);
        two[0] = 0;
        for (int i = 1; i < n; i++)
        {
            two[i] = max(two[i - 1], a[i] + a[i - 1]);
        }
        for (int i = 1; i < n; i++)
        {
            a[i] += a[i - 1];
        }
        int ans = a[k - 1];
        for (int c = 1; c <= z; c++)
        {
            if (k - 1 - 2 * c >= 0)
            {
                ans = max(ans, a[k - 1 - 2 * c] + c * two[k - 2 * c]);
            }
            else
            {
                break;
            }
        }
        cout << ans << endl;
    }
    return 0;
}",1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
inline ll rd()
{
    ll x = 0;
    char o, f = 1;
    while (o = getchar(), o < 48)
        if (o == 45)
            f = -f;
    do
        x = (x << 3) + (x << 1) + (o ^ 48);
    while (o = getchar(), o > 47);
    return x * f;
}
const int maxn = 2e5 + 5;
const ll mod = 998244353;
int _;
int n, m, val[maxn << 2], lazy[maxn << 2], l[maxn], r[maxn], A[maxn], B[maxn];
char s[maxn], t[maxn];
void pushup(int p)
{
    val[p] = val[p << 1] + val[p << 1 | 1];
}
void pushdown(int p, int l, int r)
{
    if (!lazy[p])
        return;
    lazy[p]--;
    int mid = (l + r) >> 1;
    val[p << 1] = lazy[p] * (mid - l + 1);
    val[p << 1 | 1] = lazy[p] * (r - mid);
    lazy[p << 1] = lazy[p << 1 | 1] = lazy[p] + 1;
    lazy[p] = 0;
}
void build(int l = 1, int r = n, int p = 1)
{
    lazy[p] = 0;
    if (l == r)
    {
        val[p] = A[l];
        return;
    }
    int mid = (l + r) >> 1;
    build(l, mid, p << 1);
    build(mid + 1, r, p << 1 | 1);
    pushup(p);
}
void update(int a, int b, int v, int l = 1, int r = n, int p = 1)
{
    if (a > r || b < l)
        return;
    if (l >= a && r <= b)
    {
        lazy[p] = v + 1;
        val[p] = (r - l + 1) * v;
        return;
    }
    pushdown(p, l, r);
    int mid = (l + r) >> 1;
    update(a, b, v, l, mid, p << 1);
    update(a, b, v, mid + 1, r, p << 1 | 1);
    pushup(p);
}
int query(int a, int b, int l = 1, int r = n, int p = 1)
{
    if (a > r || b < l)
        return 0;
    if (l >= a && r <= b)
        return val[p];
    pushdown(p, l, r);
    int mid = (l + r) >> 1;
    return query(a, b, l, mid, p << 1) + query(a, b, mid + 1, r, p << 1 | 1);
}
bool solve()
{
    scanf(""%d%d"", &n, &m);
    scanf(""%s%s"", s + 1, t + 1);
    for (int i = 1; i <= n; i++)
        A[i] = t[i] - '0';
    for (int i = 1; i <= n; i++)
        B[i] = s[i] - '0';
    build();
    for (int i = 1; i <= m; i++)
    {
        l[i] = rd();
        r[i] = rd();
    }
    for (int i = m; i >= 1; i--)
    {
        int cnt = query(l[i], r[i]), len = r[i] - l[i] + 1;
        if (len % 2 == 0 && cnt * 2 == len)
            return false;
        if (len % 2 && cnt <= len / 2)
            update(l[i], r[i], 0);
        else if (len % 2 == 0 && cnt < len / 2)
            update(l[i], r[i], 0);
        else
            update(l[i], r[i], 1);
    }
    for (int i = 1; i <= n; i++)
        if (query(i, i) != B[i])
            return 0;
    return 1;
}
int main()
{
    for (scanf(""%d"", &_); _; _--)
    {
        if (solve())
            puts(""YES"");
        else
            puts(""NO"");
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int N = 2e5 + 10;
typedef pair<int, int> pii;
#define mp make_pair
int n, T, q, l[N], r[N];
char st[N], ed[N];
inline int read()
{
    int x = 0, f = 1;
    char ch = getchar();
    while (!isdigit(ch))
    {
        if (ch == '-')
            f = -1;
        ch = getchar();
    }
    while (isdigit(ch))
    {
        x = (x << 3) + (x << 1) + (ch ^ 48);
        ch = getchar();
    }
    return x * f;
}
const double eps = 1e-7;
pii operator+(pii x, pii y)
{
    return mp(x.first + y.first, x.second + y.second);
}
namespace SGT
{
int s[2][N << 2], lazy[N << 2];
#define lc (p << 1)
#define rc (p << 1 | 1)
#define mid ((l + r) >> 1)
inline void pushup(int p)
{
    s[0][p] = s[0][lc] + s[0][rc];
    s[1][p] = s[1][lc] + s[1][rc];
}
inline void build(int p, int l, int r)
{
    lazy[p] = -1;
    if (l == r)
    {
        int x = ed[l] - '0';
        s[x][p] = 1;
        s[!x][p] = 0;
        return;
    }
    build(lc, l, mid);
    build(rc, mid + 1, r);
    pushup(p);
}
inline void cover(int p, int v, int l, int r)
{
    lazy[p] = v;
    s[v][p] = r - l + 1;
    s[!v][p] = 0;
}
inline void pushdown(int p, int l, int r)
{
    if (lazy[p] == -1)
        return;
    cover(lc, lazy[p], l, mid);
    cover(rc, lazy[p], mid + 1, r);
    lazy[p] = -1;
}
inline void update(int p, int ql, int qr, int v, int l, int r)
{
    if (ql <= l && r <= qr)
    {
        cover(p, v, l, r);
        return;
    }
    pushdown(p, l, r);
    if (ql <= mid)
        update(lc, ql, qr, v, l, mid);
    if (qr > mid)
        update(rc, ql, qr, v, mid + 1, r);
    pushup(p);
}
inline pii query(int p, int ql, int qr, int l, int r)
{
    if (ql <= l && r <= qr)
        return mp(s[0][p], s[1][p]);
    pushdown(p, l, r);
    pii ans = mp(0, 0);
    if (ql <= mid)
        ans = ans + query(lc, ql, qr, l, mid);
    if (qr > mid)
        ans = ans + query(rc, ql, qr, mid + 1, r);
    return ans;
}
}
using namespace SGT;
int main()
{
    T = read();
    while (T--)
    {
        n = read();
        q = read();
        scanf(""%s"", st + 1);
        scanf(""%s"", ed + 1);
        for (int i = 1; i <= q; ++i)
            l[i] = read(), r[i] = read();
        int flag = 0;
        build(1, 1, n);
        for (int i = q; i >= 1; --i)
        {
            pii ret = query(1, l[i], r[i], 1, n);
            if (ret.first == ret.second)
            {
                flag = 1;
                break;
            }
            if (ret.first < ret.second)
                update(1, l[i], r[i], 1, 1, n);
            else
                update(1, l[i], r[i], 0, 1, n);
        }
        if (flag)
        {
            puts(""NO"");
            continue;
        }
        for (int i = 1; i <= n; ++i)
        {
            pii ret = query(1, i, i, 1, n);
            if (st[i] == '0')
            {
                if (ret.second == 1)
                {
                    flag = 1;
                    break;
                }
            }
            else
            {
                if (ret.first == 1)
                {
                    flag = 1;
                    break;
                }
            }
        }
        if (flag)
        {
            puts(""NO"");
            continue;
        }
        puts(""YES"");
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <map>

int t, n, q;
std::string src, tar;
std::vector<std::pair<int, int>> vec;
std::map<int, int> map;

std::pair<int, int> count(int lo, int hi)
{
    int cnt[2] = { 0, 0 };
    auto p = map.lower_bound(lo);
    while (p->first < hi)
    {
        cnt[std::prev(p)->second] += p->first - lo;
        lo = p->first;
        p = std::next(p);
    }
    cnt[std::prev(p)->second] += hi - lo;
    return std::make_pair(cnt[0], cnt[1]);
}

bool get(int i)
{
    auto p = map.lower_bound(i);
    return p->first == i ? p->second : std::prev(p)->second;
}

void fill(int lo, int hi, bool v)
{
    map[hi] = get(hi);
    map[lo] = v;
    for (auto p = map.upper_bound(lo); p->first < hi; p = map.erase(p))
        ;
}

int main()
{
    std::cin >> t;
    while (t--)
    {
        std::cin >> n >> q >> src >> tar;
        vec.clear();
        while (q--)
        {
            int l, r;
            std::cin >> l >> r;
            vec.emplace_back(l - 1, r);
        }

        map.clear();
        map[-1] = map[n] = false;
        map[0] = tar[0] - '0';
        for (int i = 1; i < n; ++i)
            if (tar[i] != tar[i - 1])
                map[i] = tar[i] - '0';

        bool ans = true;
        while (!vec.empty())
        {
            std::pair<int, int> cnt = count(vec.back().first, vec.back().second);
            if (cnt.first == cnt.second)
            {
                ans = false;
                break;
            }
            fill(vec.back().first, vec.back().second, cnt.second > cnt.first);
            vec.pop_back();
        }
        for (int i = 0; i < n; ++i)
            ans &= src[i] - '0' == get(i);

        std::cout << (ans ? ""YES"" : ""NO"") << '\n';
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define maxn 200005
struct node
{
    int l, r, ans, tag;
} t[maxn << 2];
int tt, n, q;
int s[maxn], f[maxn], tl[maxn], tr[maxn];
char as[maxn];
void build(int rt, int l, int r)
{
    t[rt].l = l;
    t[rt].r = r;
    if (l == r)
    {
        t[rt].ans = 0;
        return;
    }
    int mid = (l + r) >> 1;
    build(rt << 1, l, mid);
    build(rt << 1 | 1, mid + 1, r);
    t[rt].ans = t[rt << 1].ans + t[rt << 1 | 1].ans;
}
void pushdown(int rt)
{
    if (t[rt].tag == -1)
    {
        t[rt << 1].ans = t[rt << 1 | 1].ans = 0;
        t[rt << 1].tag = t[rt << 1 | 1].tag = -1;
        t[rt].tag = 0;
    }
    if (t[rt].tag == 1)
    {
        t[rt << 1].tag = t[rt << 1 | 1].tag = 1;
        t[rt << 1].ans = t[rt << 1].r - t[rt << 1].l + 1;
        t[rt << 1 | 1].ans = t[rt << 1 | 1].r - t[rt << 1 | 1].l + 1;
        t[rt].tag = 0;
    }
}
int query(int rt, int l, int r)
{
    if (r < t[rt].l || l > t[rt].r)
        return 0;
    if (l <= t[rt].l && t[rt].r <= r)
        return t[rt].ans;
    pushdown(rt);
    return query(rt << 1, l, r) + query(rt << 1 | 1, l, r);
}
void update(int rt, int l, int r, int m)
{
    if (r < t[rt].l || l > t[rt].r)
        return;
    if (l <= t[rt].l && t[rt].r <= r)
    {
        t[rt].ans = m * (t[rt].r - t[rt].l + 1);
        t[rt].tag = m;
        if (m == 0)
            t[rt].tag = -1;
        return;
    }
    pushdown(rt);
    update(rt << 1, l, r, m);
    update(rt << 1 | 1, l, r, m);
    t[rt].ans = (t[rt << 1].ans + t[rt << 1 | 1].ans);
}
inline int read()
{
    int x = 0;
    bool f = 0;
    char c = getchar();
    for (; !isdigit(c); c = getchar())
        f ^= !(c ^ 45);
    for (; isdigit(c); c = getchar())
        x = (x * 10) + (c ^ 48);
    if (f)
        x = -x;
    return x;
}
int play()
{
    update(1, 1, 200000, 0);
    n = read(), q = read();
    cin >> as + 1;
    for (int i = 1; i <= n; i++)
    {
        s[i] = as[i] - '0';
    }
    cin >> as + 1;
    for (int i = 1; i <= n; i++)
    {
        f[i] = as[i] - '0';
        update(1, i, i, f[i]);
    }
    for (int i = 1; i <= q; i++)
    {
        tl[i] = read(), tr[i] = read();
    }
    for (int i = q; i >= 1; i--)
    {
        int an = query(1, tl[i], tr[i]);
        if (an * 2 == tr[i] - tl[i] + 1)
        {
            return 0;
        }
        if (an * 2 < tr[i] - tl[i] + 1)
        {
            update(1, tl[i], tr[i], 0);
        }
        else
        {
            update(1, tl[i], tr[i], 1);
        }
    }
    for (int i = 1; i <= n; i++)
    {
        if (s[i] != query(1, i, i))
            return 0;
    }
    return 1;
}
int main()
{
    tt = read();
    build(1, 1, 200000);
    for (int ii = 1; ii <= tt; ii++)
    {
        cout << (play() ? ""YES"" : ""NO"") << ""\n"";
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

vector<int> a, t, lz;

void build(int v, int tl, int tr)
{
    if (tl == tr)
    {
        t[v] = a[tl];
        return;
    }
    int tm = (tl + tr) / 2;
    build(v * 2 + 1, tl, tm);
    build(v * 2 + 2, tm + 1, tr);
    t[v] = t[v * 2 + 1] + t[v * 2 + 2];
}

void push(int v, int tl, int tr)
{
    if (lz[v] != -1)
    {
        lz[v * 2 + 1] = lz[v * 2 + 2] = lz[v];
        int tm = (tl + tr) / 2;
        t[v * 2 + 1] = lz[v] * (tm - tl + 1);
        t[v * 2 + 2] = lz[v] * (tr - tm);
        lz[v] = -1;
    }
}

int query(int l, int r, int v, int tl, int tr)
{
    if (r < tl || tr < l)
        return 0;
    if (l <= tl && tr <= r)
        return t[v];
    int tm = (tl + tr) / 2;
    push(v, tl, tr);
    return query(l, r, v * 2 + 1, tl, tm) + query(l, r, v * 2 + 2, tm + 1, tr);
}

void qset(int x, int l, int r, int v, int tl, int tr)
{
    if (r < tl || tr < l)
        return;
    if (l <= tl && tr <= r)
    {
        lz[v] = x;
        t[v] = x * (tr - tl + 1);
        return;
    }
    push(v, tl, tr);
    int tm = (tl + tr) / 2;
    qset(x, l, r, v * 2 + 1, tl, tm);
    qset(x, l, r, v * 2 + 2, tm + 1, tr);
    t[v] = t[v * 2 + 1] + t[v * 2 + 2];
}

int main()
{
    int T;
    cin >> T;
    while (T--)
    {
        int n, q;
        cin >> n >> q;
        a.resize(n);
        t.assign(4 * n, 0);
        lz.assign(4 * n, -1);
        string aS;
        cin >> aS;
        for (int i = 0; i < n; ++i)
            a[i] = (aS[i] - '0');
        vector<int> b(n);
        string bS;
        cin >> bS;
        for (int i = 0; i < n; ++i)
        {
            b[i] = (bS[i] - '0');
        }
        swap(a, b);
        build(0, 0, n - 1);
        vector<pair<int, int>> qs(q);
        for (int i = 0; i < q; ++i)
        {
            int l, r;
            cin >> l >> r;
            --l;
            --r;
            qs.push_back({ l, r });
        }
        bool ans = true;
        reverse(qs.begin(), qs.end());
        for (int i = 0; i < q; ++i)
        {
            int l = qs[i].first;
            int r = qs[i].second;

            int sum = query(l, r, 0, 0, n - 1);
            int w = (r - l + 1);
            if (w % 2 == 0 && sum == w / 2)
            {
                ans = false;
                break;
            }
            if (sum > w / 2)
            {
                qset(1, l, r, 0, 0, n - 1);
            }
            else
            {
                qset(0, l, r, 0, 0, n - 1);
            }
        }
        for (int i = 0; i < n; ++i)
        {
            if (b[i] != query(i, i, 0, 0, n - 1))
                ans = false;
        }
        cout << (ans ? ""YES"" : ""NO"") << '\n';
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define ll long long
#define INF 0x3f3f3f3f
using namespace std;
const int maxn = 2e5 + 7;
int a[maxn], b[maxn];
int tr[maxn << 2], lz[maxn << 2];
int ql[maxn], qr[maxn];
int pre[maxn];
void build(int k, int l, int r)
{
    if (l == r)
    {
        lz[k] = -1;
        tr[k] = b[l];
        return;
    }
    int mid = l + r >> 1;
    build(k << 1, l, mid);
    build(k << 1 | 1, mid + 1, r);
    tr[k] = tr[k << 1] + tr[k << 1 | 1];
    lz[k] = -1;
}

void pushdown(int k, int l, int r, int mid)
{
    if (lz[k] == -1)
        return;
    if (lz[k])
    {
        lz[k << 1] = 1;
        lz[k << 1 | 1] = 1;
        tr[k << 1] = mid - l + 1;
        tr[k << 1 | 1] = r - mid;
    }
    else
    {
        lz[k << 1] = 0;
        lz[k << 1 | 1] = 0;
        tr[k << 1] = 0;
        tr[k << 1 | 1] = 0;
    }
    lz[k] = -1;
}

void update(int k, int l, int r, int L, int R, int x)
{
    if (L <= l && r <= R)
    {
        lz[k] = x;
        tr[k] = x * (r - l + 1);
        return;
    }
    int mid = l + r >> 1;
    pushdown(k, l, r, mid);
    if (L <= mid)
        update(k << 1, l, mid, L, R, x);
    if (mid < R)
        update(k << 1 | 1, mid + 1, r, L, R, x);
    tr[k] = tr[k << 1] + tr[k << 1 | 1];
}

int sum(int k, int l, int r, int L, int R)
{
    if (L <= l && r <= R)
        return tr[k];
    int mid = l + r >> 1;
    pushdown(k, l, r, mid);
    int ans = 0;
    if (L <= mid)
        ans += sum(k << 1, l, mid, L, R);
    if (mid < R)
        ans += sum(k << 1 | 1, mid + 1, r, L, R);
    return ans;
}

int main()
{
    int t;
    scanf(""%d"", &t);
    while (t--)
    {
        int n, q;
        scanf(""%d%d"", &n, &q);
        for (int i = 1; i <= n; i++)
            scanf(""%1d"", &a[i]);
        for (int i = 1; i <= n; i++)
            scanf(""%1d"", &b[i]);
        for (int i = 1; i <= n; i++)
            pre[i] = pre[i - 1] + a[i];
        build(1, 1, n);
        for (int i = 1; i <= q; i++)
            scanf(""%d%d"", &ql[i], &qr[i]);
        bool flag = false;
        for (int i = q; i >= 1; i--)
        {
            int l = ql[i], r = qr[i];
            int one = sum(1, 1, n, l, r), zero = r - l + 1 - one;
            //            cout << ""l: "" << l << "" r:"" << r  << "" one: "" << one << ""  "" << zero <<
            //            endl;
            if (one == zero)
            {
                //                cout << ""nei"" << endl;
                flag = true;
                break;
            }
            if (one > zero)
                update(1, 1, n, l, r, 1);
            else
                update(1, 1, n, l, r, 0);
        }
        if (flag)
        {
            printf(""NO\n"");
            continue;
        }
        for (int i = 1; i <= n; i++)
        {
            int one = sum(1, 1, n, 1, i);
            if (one != pre[i])
            {
                //                cout << ""i: "" << i << "" one: "" << one << endl;
                flag = true;
                break;
            }
        }
        if (flag)
            printf(""NO\n"");
        else
            printf(""YES\n"");
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define lc (i << 1)
#define rc (i << 1 | 1)

const int MM = 2e5 + 5;

string s, f;
vector<int> ls, rs;

struct segtree
{
    int SZ;
    int *seg, *d, *k;
    segtree(int n)
    {
        SZ = 1 << (__lg(n - 1) + 1);
        seg = new int[2 * SZ];
        d = new int[SZ];
        k = new int[2 * SZ];
        memset(seg, 0, sizeof(int) * 2 * SZ);
        memset(d, -1, sizeof(int) * SZ);
        memset(k, 0, sizeof(int) * 2 * SZ);
        for (int i = 0; i < n; i++)
        {
            seg[i + SZ] = f[i] == '1';
            k[i + SZ] = 1;
        }
        for (int i = SZ - 1; i > 0; i--)
        {
            push_up(i);
            k[i] = k[lc] + k[rc];
        }
    }
    ~segtree()
    {
        delete[] seg;
        delete[] d;
        delete[] k;
    }

    void apply(int i, int x)
    {
        if (x == -1)
            return;
        seg[i] = x ? k[i] : 0;
        if (i < SZ)
            d[i] = x;
    }

    void push_up(int i)
    {
        seg[i] = seg[lc] + seg[rc];
    }

    void push_down(int i)
    {
        apply(lc, d[i]);
        apply(rc, d[i]);
        d[i] = -1;
    }

    int query(int ql, int qr, int i, int l, int r)
    {
        if (ql <= l && r <= qr)
            return seg[i];
        if (qr <= l || r <= ql)
            return 0;
        push_down(i);
        int mid = (l + r) / 2;
        return query(ql, qr, lc, l, mid) + query(ql, qr, rc, mid, r);
    }

    void update(int ql, int qr, bool x, int i, int l, int r)
    {
        if (ql <= l && r <= qr)
        {
            apply(i, x);
            return;
        }
        if (qr <= l || r <= ql)
            return;
        push_down(i);
        int mid = (l + r) / 2;
        update(ql, qr, x, lc, l, mid);
        update(ql, qr, x, rc, mid, r);
        push_up(i);
    }
};

bool solve()
{
    int n, q;
    cin >> n >> q >> s >> f;
    ls.clear();
    rs.clear();
    for (int i = 0; i < q; i++)
    {
        int l, r;
        cin >> l >> r;
        ls.push_back(l);
        rs.push_back(r);
    }
    struct segtree st = { n };
    for (int i = q - 1; i >= 0; i--)
    {
        int l = ls[i] - 1, r = rs[i];
        int cnt = st.query(l, r, 1, 0, st.SZ);
        if (cnt < (r - l + 1) / 2)
            st.update(l, r, 0, 1, 0, st.SZ);
        else if (cnt > (r - l) / 2)
            st.update(l, r, 1, 1, 0, st.SZ);
        else
            return false;
    }
    for (int i = 0; i < n; i++)
    {
        if (st.query(i, i + 1, 1, 0, st.SZ) != (s[i] == '1'))
            return false;
    }
    return true;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        if (solve())
            cout << ""YES\n"";
        else
            cout << ""NO\n"";
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <limits>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <unordered_map>
#include <unordered_set>
#include <vector>
using namespace std;

class SegTree
{
public:
    SegTree(int _n)
        : n(_n)
    {
        x = vector<int>(_n * 4);
        label = vector<int>(_n * 4, -1);
        count = vector<int>(_n * 4);
    }

    void PushDown(int t, int l, int r)
    {
        if (l == r)
            return;
        if (label[t] == -1)
            return;
        label[t + t] = label[t];
        label[t + t + 1] = label[t];
        if (label[t] == 1)
        {
            int mid = (l + r) >> 1;
            count[t + t] = mid - l + 1;
            count[t + t + 1] = r - mid;
        }
        else
        {
            count[t + t] = count[t + t + 1] = 0;
        }
        label[t] = -1;
    }

    void Insert(int t, int a, int l, int r, int p, int q)
    {
        PushDown(t, l, r);
        if (p <= l && r <= q)
        {
            label[t] = a;
            if (a == 1)
            {
                count[t] = r - l + 1;
            }
            else
            {
                count[t] = 0;
            }
            return;
        }
        int mid = (l + r) >> 1;
        if (p <= mid)
            Insert(t + t, a, l, mid, p, q);
        if (mid + 1 <= q)
            Insert(t + t + 1, a, mid + 1, r, p, q);
        count[t] = count[t + t] + count[t + t + 1];
    }

    int Query(int t, int l, int r, int p, int q)
    {
        PushDown(t, l, r);
        if (p <= l && r <= q)
            return count[t];
        int mid = (l + r) >> 1;
        int ans = 0;
        if (p <= mid)
            ans += Query(t + t, l, mid, p, q);
        if (mid + 1 <= q)
            ans += Query(t + t + 1, mid + 1, r, p, q);
        return ans;
    }

    int n;
    vector<int> x;
    vector<int> label;
    vector<int> count;
};

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int times;
    cin >> times;
    while (times--)
    {
        int n, m;
        cin >> n >> m;
        string p, q;
        cin >> p >> q;
        if (m == 0)
        {
            if (p == q)
            {
                cout << ""YES"" << endl;
            }
            else
            {
                cout << ""NO"" << endl;
            }
            continue;
        }

        SegTree tree(n + 1);
        for (int i = 0; i < n; ++i)
        {
            if (q[i] == '1')
                tree.Insert(1, 1, 1, n, i + 1, i + 1);
        }
        vector<pair<int, int>> x(m);
        for (int i = 0; i < m; ++i)
            cin >> x[i].first >> x[i].second;

        bool flag = true;
        for (int i = m - 1; i >= 0; --i)
        {
            int count = tree.Query(1, 1, n, x[i].first, x[i].second);
            int total = x[i].second - x[i].first + 1;
            if (count + count == total)
            {
                flag = false;
                break;
            }
            else if (count + count < total)
            {
                tree.Insert(1, 0, 1, n, x[i].first, x[i].second);
            }
            else
            {
                tree.Insert(1, 1, 1, n, x[i].first, x[i].second);
            }
        }
        if (!flag)
        {
            cout << ""NO"" << endl;
            continue;
        }
        for (int i = 1; i <= n; ++i)
        {
            int count = tree.Query(1, 1, n, i, i);
            if (count != p[i - 1] - '0')
            {
                flag = false;
                break;
            }
        }
        if (flag)
        {
            cout << ""YES"" << endl;
        }
        else
        {
            cout << ""NO"" << endl;
        }
    }

    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cmath>
#include <iostream>
#include <stdio.h>
#include <string>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <cstring>
#include <math.h>
#include <stack>
#include <algorithm>
#include <queue>
#include <bitset>
#include <sstream>
#include <iomanip>
#include <stdlib.h>
#define ll long long int

const int mod = 1000000007;
const int modd = 233317;
const int base = 131;
const double pi = acos(-1);
const int N = 2e5 + 10;
const int M = 1e9;
using namespace std;
ll n, m, k, tot = 0, b[2001000], a[2010000], c[2010000];
struct node
{
    ll l, r, x, tag;
} t[8000010];
string s, s1;
void build(ll l, ll r, ll ri)
{
    t[ri] = { l, r, 0, -1 };
    if (l == r)
    {
        if (s[l - 1] == '1')
            t[ri].x = 1;
        return;
    }
    ll mid = (l + r) >> 1;
    build(l, mid, ri << 1);
    build(mid + 1, r, ri << 1 | 1);
    t[ri].x = t[ri << 1].x + t[ri << 1 | 1].x;
    return;
}
void push(ll ri)
{
    if (t[ri].tag != -1)
    {
        t[ri << 1].tag = t[ri].tag;
        t[ri << 1 | 1].tag = t[ri].tag;
        t[ri << 1].x = (t[ri << 1].r - t[ri << 1].l + 1) * t[ri << 1].tag;
        t[ri << 1 | 1].x = (t[ri << 1 | 1].r - t[ri << 1 | 1].l + 1) * t[ri << 1 | 1].tag;
        t[ri].tag = -1;
    }
    return;
}
ll qurry(ll l, ll r, ll ri)
{
    push(ri);
    if (t[ri].l >= l && t[ri].r <= r)
    {
        return t[ri].x;
    }
    ll ans = 0;
    ll mid = (t[ri].l + t[ri].r) >> 1;
    if (l <= mid)
        ans += qurry(l, r, ri << 1);
    if (r >= mid + 1)
        ans += qurry(l, r, ri << 1 | 1);
    return ans;
}
void updatd(ll l, ll r, ll ri, ll xp)
{
    push(ri);
    if (t[ri].l >= l && t[ri].r <= r)
    {
        t[ri].tag = xp;
        t[ri].x = (t[ri].r - t[ri].l + 1) * xp;
        return;
    }
    ll mid = (t[ri].r + t[ri].l) >> 1;
    if (l <= mid)
        updatd(l, r, ri << 1, xp);
    if (r >= mid + 1)
        updatd(l, r, ri << 1 | 1, xp);
    t[ri].x = t[ri << 1].x + t[ri << 1 | 1].x;
    return;
}
int main()
{
    ll zt, i, j, ma, x, y, z, q, l, r;
    ios::sync_with_stdio(false);
    cin >> zt;
    while (zt--)
    {
        cin >> n >> k >> s1 >> s;
        build(1, n, 1);
        for (i = 0; i < k; i++)
        {
            cin >> b[i] >> c[i];
        }
        ll flat = 1;
        for (i = k - 1; i >= 0; i--)
        {
            x = (c[i] - b[i] + 1);
            ll one = qurry(b[i], c[i], 1);
            ll zp = (c[i] - b[i]) >> 1;
            ll zore = c[i] - b[i] + 1 - one;
            if (one <= zp)
            {
                updatd(b[i], c[i], 1, 0);
            }
            else if (zore <= zp)
            {
                updatd(b[i], c[i], 1, 1);
            }
            else
            {
                flat = 0;
                break;
            }
        }

        for (i = 0; i < s1.length(); i++)
        {
            x = qurry(i + 1, i + 1, 1);
            if (s1[i] - '0' != x)
            {
                flat = 0;
                break;
            }
        }
        if (flat)
            cout << ""YES"" << endl;
        else
            cout << ""NO"" << endl;
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(), a.end()
#define sz(a) (ll)(a.size())
const int M = 2e5 + 5;
int ct[4 * M][2], lazy[4 * M];
string s, f;
void merge(int i)
{
    ct[i][0] = ct[2 * i][0] + ct[2 * i + 1][0];
    ct[i][1] = ct[2 * i][1] + ct[2 * i + 1][1];
}
void split(int i, int s, int e)
{
    if (lazy[i] == -1)
        return;
    int z = lazy[i];
    ct[i][z] += ct[i][1 - z];
    ct[i][1 - z] = 0;
    if (s != e)
    {
        lazy[2 * i] = lazy[i];
        lazy[2 * i + 1] = lazy[i];
    }
    lazy[i] = -1;
}
void build(int i, int s, int e)
{
    lazy[i] = -1;
    if (s == e)
    {
        ct[i][0] = 0;
        ct[i][1] = 0;
        ct[i][f[s] - '0'] = 1;
        return;
    }
    int m = (s + e) / 2;
    build(2 * i, s, m);
    build(2 * i + 1, m + 1, e);
    merge(i);
}
int query(int i, int s, int e, int l, int r, int z)
{
    split(i, s, e);
    if (s > r or l > e)
        return 0;
    if (s >= l and e <= r)
        return ct[i][z];
    int m = (s + e) / 2;
    return query(2 * i, s, m, l, r, z) + query(2 * i + 1, m + 1, e, l, r, z);
}
void update(int i, int s, int e, int l, int r, int z)
{
    split(i, s, e);
    if (s > r or l > e)
        return;
    if (s >= l and e <= r)
    {
        ct[i][0] = 0;
        ct[i][1] = 0;
        ct[i][z] = e - s + 1;
        if (s != e)
        {
            lazy[2 * i] = z;
            lazy[2 * i + 1] = z;
        }
        return;
    }
    int m = (s + e) / 2;
    update(2 * i, s, m, l, r, z);
    update(2 * i + 1, m + 1, e, l, r, z);
    merge(i);
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int test;
    cin >> test;
    while (test--)
    {
        int n, q;
        cin >> n >> q;
        cin >> s >> f;
        s = ""$"" + s;
        f = ""$"" + f;
        build(1, 1, n);
        bool flag = 0;
        vector<pair<int, int>> vec;
        while (q--)
        {
            int l, r;
            cin >> l >> r;
            vec.pb({ l, r });
        }
        reverse(all(vec));
        for (auto u : vec)
        {
            int l = u.ff, r = u.ss;
            int x = query(1, 1, n, l, r, 0);
            int y = r - l + 1 - x;
            // cout<<l<<""======""<<r<<endl;
            // cout<<x<<"" ""<<y<<endl;
            if (x == y)
            {
                flag = 1;
            }
            if (x > y)
                update(1, 1, n, l, r, 0);
            else
                update(1, 1, n, l, r, 1);
            x = query(1, 1, n, l, r, 0);
            y = r - l + 1 - x;
            // cout<<x<<""--""<<y<<endl;
        }
        for (int i = 1; i <= n; i++)
        {
            int x = query(1, 1, n, i, i, 0);
            if (x == 1 and s[i] == '1')
                flag = 1;
            if (x == 0 and s[i] == '0')
                flag = 1;
        }
        if (flag)
            cout << ""NO\n"";
        else
            cout << ""YES\n"";
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define pii pair<int, int>
#define L(n) (n << 1)
#define R(n) (n << 1 | 1)
#define print_vector(n)                                                                            \
    for (auto i : n)                                                                               \
        cout << i << "" "";                                                                          \
    cout << ""\n"";
#define vector_sort(n) sort(n.begin(), n.end())
#define print_array(n, l, r)                                                                       \
    for (int i = l; i <= r; i++)                                                                   \
        cout << n[i] << "" "";                                                                       \
    cout << ""\n"";
#define MIN(a, b) (a < b ? a : b)
#define MAX(a, b) (a > b ? a : b)
using namespace std;

int N, Q;
int A[200005], B[200005];
string S, F;
int lazy[800005], tree[800005];
int l[200005], r[200005];

void build(int n, int l, int r)
{
    if (l == r)
    {
        tree[n] = (F[l - 1] == '1');
        lazy[n] = -1;
        return;
    }
    int mid = (l + r) >> 1;
    build(L(n), l, mid);
    build(R(n), mid + 1, r);
    tree[n] = tree[L(n)] + tree[R(n)];
    lazy[n] = -1;
}

void unlazy(int n, int l, int r)
{
    if (lazy[n] == -1)
        return;
    if (lazy[n] == 0)
    {
        tree[n] = 0;
    }
    else
    {
        tree[n] = r - l + 1;
    }
    if (l != r)
    {
        lazy[L(n)] = lazy[n];
        lazy[R(n)] = lazy[n];
    }
    lazy[n] = -1;
}

void update(int n, int l, int r, int ql, int qr, int a)
{
    unlazy(n, l, r);
    if (qr < l || r < ql)
        return;
    if (ql <= l && r <= qr)
    {
        lazy[n] = a;
        unlazy(n, l, r);
        return;
    }
    int mid = (l + r) >> 1;
    update(L(n), l, mid, ql, qr, a);
    update(R(n), mid + 1, r, ql, qr, a);
    tree[n] = tree[L(n)] + tree[R(n)];
}

bool ok = 0;
int sum = 0;

void query(int n, int l, int r, int ql, int qr)
{
    unlazy(n, l, r);
    if (qr < l || r < ql)
        return;
    if (ql <= l && r <= qr)
    {
        sum += tree[n];
        return;
    }
    int mid = (l + r) >> 1;
    query(L(n), l, mid, ql, qr);
    query(R(n), mid + 1, r, ql, qr);
}

void query(int l, int r)
{
    sum = 0;
    query(1, 1, N, l, r);
    int one = sum, zero = r - l + 1 - sum, can = (r - l + 2) / 2 - 1;
    //  cout << l << "" "" << r << ""\n"" << one << "" - "" << zero << "" - "" << can << ""\n\n"";
    if (zero <= can)
    {
        update(1, 1, N, l, r, 1);
    }
    else if (one <= can)
    {
        update(1, 1, N, l, r, 0);
    }
    else
    {
        ok = 0;
    }
}

void check_ans(int n, int l, int r)
{
    unlazy(n, l, r);
    if (l == r)
    {
        //    cout << tree[n];
        if ((S[l - 1] == '1') != tree[n])
            ok = 0;
        return;
    }
    int mid = (l + r) >> 1;
    check_ans(L(n), l, mid);
    check_ans(R(n), mid + 1, r);
}

void print_ans()
{
    check_ans(1, 1, N);
    //  cout << ""\n"";
    cout << (ok ? ""YES"" : ""NO"") << ""\n"";
}

int main()
{
    ios_base::sync_with_stdio(0);
    int tc;
    cin >> tc;
    while (tc--)
    {
        cin >> N >> Q;
        cin >> S >> F;
        build(1, 1, N);
        for (int i = 1; i <= Q; i++)
        {
            cin >> l[i] >> r[i];
        }
        ok = 1;
        for (int i = Q; i > 0 && ok; i--)
        {
            query(l[i], r[i]);
        }
        print_ans();
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define rep(i, a, b) for (int i = a; i < (b); ++i)
#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()
#define ls(i) (i * 2)
#define rs(i) (i * 2 + 1)
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
const int maxn = 200000;
int n, q;
int x[maxn], y[maxn];
int s[maxn + 1], f[maxn + 1];
int l[maxn * 5], r[maxn * 5], it[maxn * 5], lazy[maxn * 5];


void initIT(int i, int x, int y)
{
    l[i] = x, r[i] = y, lazy[i] = -1, it[i] = 0;
    if (x == y)
        it[i] = f[i];
    else
    {
        int m = (x + y) / 2;
        initIT(ls(i), x, m);
        initIT(rs(i), m + 1, y);
    }
}

void pushIT(int i)
{
    if (lazy[i] != -1)
    {
        if (lazy[i] == 1)
            it[i] = r[i] - l[i] + 1;
        else
            it[i] = 0;
        if (l[i] != r[i])
        {
            lazy[ls(i)] = lazy[i];
            lazy[rs(i)] = lazy[i];
        }
        lazy[i] = -1;
    }
}

void updateIT(int i, int x, int y, int v)
{
    pushIT(i);
    if (y < l[i] || r[i] < x)
        return;
    if (x <= l[i] && r[i] <= y)
    {
        lazy[i] = v;
        pushIT(i);
        return;
    }

    updateIT(ls(i), x, y, v);
    updateIT(rs(i), x, y, v);
    it[i] = it[ls(i)] + it[rs(i)];
}

int getIT(int i, int x, int y)
{
    pushIT(i);
    if (y < l[i] || r[i] < x)
        return 0;
    if (x <= l[i] && r[i] <= y)
        return it[i];
    return getIT(ls(i), x, y) + getIT(rs(i), x, y);
}

void solve()
{
    cin >> n >> q;
    rep(i, 1, n + 1)
    {
        char p;
        cin >> p;
        s[i] = p - '0';
    }
    rep(i, 1, n + 1)
    {
        char p;
        cin >> p;
        f[i] = p - '0';
    }

    initIT(1, 1, n);
    rep(i, 1, n + 1) updateIT(1, i, i, f[i]);
    rep(i, 0, q) cin >> x[i] >> y[i];
    for (int i = q - 1; i >= 0; --i)
    {
        int p = getIT(1, x[i], y[i]);
        int len = y[i] - x[i] + 1;
        int major = (y[i] - x[i]) / 2;

        // cout << x[i] << ' ' << y[i] << ' ' << p << ' ' << len << ' ' << major << endl;
        if (p <= major)
            updateIT(1, x[i], y[i], 0);
        else if (len - p <= major)
            updateIT(1, x[i], y[i], 1);
        else
        {
            cout << ""NO\n"";
            return;
        }
    }

    rep(i, 1, n + 1) if (getIT(1, i, i) != s[i])
    {
        cout << ""NO\n"";
        return;
    }
    cout << ""YES\n"";
}
int main()
{
    cin.tie(0)->sync_with_stdio(0);
    cin.exceptions(cin.failbit);
    int t;
    cin >> t;
    rep(i, 0, t) solve();
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <algorithm>
#include <cstring>
#define N 200009
using namespace std;
int data[N];
struct Node
{
    int l, r, sum, lazy;
    Node()
    {
        l = r = sum = 0;
        lazy = -1;
    }
} tree[16 * N];
void update(int k)
{
    tree[k].sum = tree[k * 2].sum + tree[k * 2 + 1].sum;
}
void build(int k, int l, int r)
{
    tree[k].l = l;
    tree[k].r = r;
    tree[k].lazy = -1;
    if (l == r)
    {
        tree[k].sum = data[l];
        return;
    }
    int mid = (l + r) / 2;
    build(k * 2, l, mid);
    build(k * 2 + 1, mid + 1, r);
    update(k);
}
void push_down(int k)
{
    if (tree[k].l == tree[k].r)
    {
        tree[k].lazy = -1;
        return;
    }
    tree[k * 2].lazy = tree[k].lazy;
    tree[k * 2 + 1].lazy = tree[k].lazy;
    tree[k * 2].sum = (tree[k * 2].r - tree[k * 2].l + 1) * tree[k].lazy;
    tree[k * 2 + 1].sum = (tree[k * 2 + 1].r - tree[k * 2 + 1].l + 1) * tree[k].lazy;

    tree[k].lazy = -1;
}
void change(int k, int l, int r, int v)
{
    if (tree[k].l == l && tree[k].r == r)
    {
        tree[k].lazy = v;
        tree[k].sum = (r - l + 1) * v;
        return;
    }
    int mid = (tree[k].l + tree[k].r) / 2;
    if (r <= mid)
        change(k * 2, l, r, v);
    else if (l > mid)
        change(k * 2 + 1, l, r, v);
    else
        change(k * 2, l, mid, v), change(k * 2 + 1, mid + 1, r, v);
    update(k);
}
int query(int k, int l, int r)
{
    if (tree[k].lazy != -1)
        push_down(k);
    if (tree[k].l == l && tree[k].r == r)
        return tree[k].sum;
    int mid = (tree[k].l + tree[k].r) / 2;
    if (r <= mid)
        return query(k * 2, l, r);
    if (l > mid)
        return query(k * 2 + 1, l, r);
    return query(k * 2, l, mid) + query(k * 2 + 1, mid + 1, r);
}
int l[N], r[N];
int main(void)
{
    ios::sync_with_stdio(false);
    int t, n, q, fail;
    cin >> t;
    string s, e;
    while (t--)
    {
        cin >> n;
        // for(int i=0;i<16*n;i++)
        //   tree[i].lazy=-1;
        fail = 0;
        cin >> q;
        cin >> s >> e;
        for (int i = 1; i <= n; i++)
            if (e[i - 1] == '1')
                data[i] = 1;
            else
                data[i] = 0;
        build(1, 1, n);
        for (int i = 0; i < q; i++)
            cin >> l[i] >> r[i];
        reverse(l, l + q);
        reverse(r, r + q);
        for (int i = 0, len, sum; i < q; i++)
        {
            len = r[i] - l[i] + 1;
            sum = query(1, l[i], r[i]);
            //      cout<<len<<' '<<sum<<endl;
            if (sum * 2 == len)
            {
                fail = 1;
                break;
            }
            if (sum * 2 > len)
                change(1, l[i], r[i], 1);
            if (sum * 2 < len)
                change(1, l[i], r[i], 0);
            // for(int i=1;i<=n;i++)cout<<query(1,i,i);
            // cout<<endl;
        }
        for (int i = 1; i <= n; i++)
            if (s[i - 1] - '0' != query(1, i, i))
            {
                fail = 1;
                break;
            }
        if (fail)
            cout << ""NO"" << endl;
        else
            cout << ""YES"" << endl;
    }
    return 0;
}
/*
1
10 6
1111111111
0110001110
1 10
5 9
7 10
1 7
3 5
6 10
5 2
*/
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long ll;
const int MAXN = 2e5 + 5;

int data, N, Q, l[MAXN], r[MAXN];
char S[MAXN], T[MAXN];

#define ls (o << 1)
#define rs (o << 1 | 1)
#define mid ((l + r) >> 1)
int tr[MAXN << 2], siz[MAXN << 2], tag[MAXN << 2];
void cov(int o, int k)
{
    tr[o] = k ? siz[o] : 0, tag[o] = k;
}
void pushdown(int o)
{
    if (tag[o] != -1)
        cov(ls, tag[o]), cov(rs, tag[o]), tag[o] = -1;
}
void pushup(int o)
{
    tr[o] = tr[ls] + tr[rs];
}
void build(int o, int l, int r)
{
    siz[o] = r - l + 1, tag[o] = -1;
    if (l == r)
        tr[o] = T[l] - '0';
    else
        build(ls, l, mid), build(rs, mid + 1, r), pushup(o);
}
void ins(int o, int l, int r, int L, int R, int K)
{
    // printf(""ins(%d,%d,%d,%d,%d,%d)\n"",o,l,r,L,R,K);
    if (l == L && r == R)
        cov(o, K);
    else
    {
        pushdown(o);
        if (R <= mid)
            ins(ls, l, mid, L, R, K);
        else if (L > mid)
            ins(rs, mid + 1, r, L, R, K);
        else
            ins(ls, l, mid, L, mid, K), ins(rs, mid + 1, r, mid + 1, R, K);
        pushup(o);
    }
}
int qry(int o, int l, int r, int L, int R)
{
    if (l == L && r == R)
        return tr[o];
    else
    {
        pushdown(o);
        if (R <= mid)
            return qry(ls, l, mid, L, R);
        else if (L > mid)
            return qry(rs, mid + 1, r, L, R);
        else
            return qry(ls, l, mid, L, mid) + qry(rs, mid + 1, r, mid + 1, R);
    }
}
bool solve()
{
    build(1, 1, N);
    for (int i = Q; i >= 1; --i)
    {
        // printf(""[%d,%d]=============\n"",l[i],r[i]);
        int qs = qry(1, 1, N, l[i], r[i]), al = r[i] - l[i] + 1;
        if (qs * 2 == al)
            return 0;
        if (qs < al - qs)
            ins(1, 1, N, l[i], r[i], 0);
        else
            ins(1, 1, N, l[i], r[i], 1);
        // for(int j=1;j<=N;++j)printf(""%d"",qry(1,1,N,j,j));
        // putchar('\n');
    }
    for (int i = 1; i <= N; ++i)
        if (qry(1, 1, N, i, i) != S[i] - '0')
            return 0;
    return 1;
}
int main()
{
    scanf(""%d"", &data);
    while (data--)
    {
        scanf(""%d%d%s%s"", &N, &Q, S + 1, T + 1);
        for (int i = 1; i <= Q; ++i)
            scanf(""%d%d"", &l[i], &r[i]);
        puts(solve() ? ""YES"" : ""NO"");
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    ios::sync_with_stdio(0), cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n, q;
        string s, f;
        cin >> n >> q >> s >> f;
        int l[q], r[q];
        for (int i = 0; i < q; ++i)
        {
            cin >> l[i] >> r[i];
            l[i]--;
        }
        map<int, bool> seg;
        for (int i = 0; i < n; ++i)
            seg[i] = f[i] - '0';
        bool ok = true;
        for (int i = q - 1; i >= 0; i--)
        {
            for (auto x : { l[i], r[i] })
            {
                bool v = prev(seg.upper_bound(x))->second;
                seg[x] = v;
            }
            int c[2] = {};
            for (auto it = seg.find(l[i]); it->first != r[i]; it = seg.erase(it))
                c[it->second] += next(it)->first - it->first;
            ok &= c[0] != c[1];
            seg[l[i]] = c[0] < c[1];
        }
        for (int i = 0; i < n; ++i)
            ok &= s[i] - '0' == prev(seg.upper_bound(i))->second;
        cout << (ok ? ""YES\n"" : ""NO\n"");
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
using cd = complex<double>;
#define ll long long
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define LB lower_bound
#define UB upper_bound
#define sz(a) int((a).size())
#define REP(i, a, b) for (int i = (int)a; i < (int)b; i++)
#define REPD(i, a, b) for (int i = (int)a - 1; i >= (int)b; i--)
#define VREP(it, v) for (auto it = v.begin(); it != v.end(); it++)
typedef pair<ll, ll> pi;
typedef vector<ll> vi;

const ll MOD = 1000000009;
const double PI = acos(-1);

template <typename T>
using pbds_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

template <typename K, typename V>
using pbds_map = tree<K, V, less<K>, rb_tree_tag, tree_order_statistics_node_update>;

struct node
{

    ll s, e, m, val;
    pair<bool, ll> lazy;

    node *l, *r;
    node(ll _s, ll _e)
        : s(_s)
        , e(_e)
        , m((_s + _e) / 2)
        , val(0)
        , lazy(MP(0, 0))
    {
        if (s != e)
        {
            l = new node(s, m);
            r = new node(m + 1, e);
        }
    }

    ll value()
    {
        if (s == e)
        {
            if (lazy.first)
            {
                val = lazy.second;
                lazy.first = 0;
            }
            return val;
        }
        if (lazy.first)
        {
            l->lazy = MP(1, lazy.second);
            r->lazy = MP(1, lazy.second);
            lazy.first = 0;
            return val = lazy.second * (e - s + 1);
        }
        return val;
    }

    void range_update(int x, int y, ll nv)
    {

        if (lazy.first)
            val = value();

        if (s == x && e == y)
        {
            lazy = MP(1, nv);
        }
        else
        {
            if (x > m)
                r->range_update(x, y, nv);
            else if (y <= m)
                l->range_update(x, y, nv);
            else
                l->range_update(x, m, nv), r->range_update(m + 1, y, nv);
            val = l->value() + r->value();
        }
    }

    ll query(int x, int y)
    {
        value();
        if (s == x && e == y)
            return value();
        if (x > m)
            return r->query(x, y);
        if (y <= m)
            return l->query(x, y);
        return val = l->query(x, m) + r->query(m + 1, y);
    }
};

int t, n, q;
char s[200005], f[200005];
int lq, rq;
vector<pi> v;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> t;
    REP(i, 0, t)
    {
        v.clear();
        cin >> n >> q;
        node root = node(0, n - 1);
        REP(j, 0, n) cin >> s[j];
        REP(j, 0, n) cin >> f[j], root.range_update(j, j, (f[j] == '1'));

        REP(j, 0, q)
        {
            cin >> lq >> rq;
            v.PB(MP(lq - 1, rq - 1));
        }
        reverse(v.begin(), v.end());
        bool replied = false;
        VREP(it, v)
        {
            ll cur = root.query(it->first, it->second);
            ll leng = (it->second - it->first) + 1;
            if (2 * cur == leng)
            {
                // illegal move
                replied = true;
                cout << ""NO"" << endl;
                break;
            }
            else
            {
                root.range_update(it->first, it->second, (2 * cur > leng));
            }
        }
        if (replied)
            continue;
        bool can = true;
        REP(j, 0, n)
        {
            if (root.query(j, j) != ((int)s[j] - 48))
            {
                can = false;
                cout << ""NO"" << endl;
                break;
            }
        }
        if (can)
            cout << ""YES"" << endl;
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#define FAST ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
typedef long long ll;
using namespace std;

struct node
{
    ll l, r, f, w;
} tree[5000005];

inline void build(int k, int ll, int rr)
{
    tree[k].l = ll, tree[k].r = rr, tree[k].f = -1;
    if (tree[k].l == tree[k].r)
    {
        char ch;
        cin >> ch;
        tree[k].w = ch - '0';
        return;
    }
    int mid = (tree[k].l + tree[k].r) / 2;
    build(2 * k, ll, mid);
    build(2 * k + 1, mid + 1, rr);
    tree[k].w = tree[2 * k].w + tree[2 * k + 1].w;
}

inline void down(int k)
{
    if (tree[k].f == -1)
        return;
    tree[2 * k].f = tree[k].f;
    tree[2 * k + 1].f = tree[k].f;
    tree[2 * k].w = tree[k].f * (tree[2 * k].r - tree[2 * k].l + 1);
    tree[2 * k + 1].w = tree[k].f * (tree[2 * k + 1].r - tree[2 * k + 1].l + 1);
    tree[k].f = -1;
}

inline ll ask_interval(int k, int x, int y)
{
    ll ans = 0;
    if (x <= tree[k].l && y >= tree[k].r)
    {
        return tree[k].w;
    }
    down(k);
    int mid = (tree[k].l + tree[k].r) / 2;
    if (x <= mid)
        ans += ask_interval(2 * k, x, y);
    if (y > mid)
        ans += ask_interval(2 * k + 1, x, y);
    return ans;
}

inline void change_interval(int k, int x, int y, int add)
{
    if (x <= tree[k].l && y >= tree[k].r)
    {
        tree[k].w = add * (tree[k].r - tree[k].l + 1);
        tree[k].f = add;
        return;
    }
    down(k);
    int mid = (tree[k].l + tree[k].r) / 2;
    if (x <= mid)
        change_interval(2 * k, x, y, add);
    if (y > mid)
        change_interval(2 * k + 1, x, y, add);
    tree[k].w = tree[2 * k].w + tree[2 * k + 1].w;
}
const int Max = 1e6 + 5;
int a[Max], b[Max], q[Max][2];

int main()
{
    FAST;
    int t;
    cin >> t;
    while (t--)
    {
        int n, qq;
        cin >> n >> qq;
        for (int i = 1; i <= n; i++)
        {
            char c;
            cin >> c;
            a[i] = c - '0';
        }
        build(1, 1, n);
        for (int i = 1; i <= qq; i++)
            cin >> q[i][0] >> q[i][1];
        int f = 1;
        for (int i = qq; i >= 1; i--)
        {
            int l = q[i][0], r = q[i][1];
            int sum = ask_interval(1, l, r);
            if ((r - l + 1) % 2 == 0 && sum == (r - l + 1) / 2)
            {
                f = 0;
            }
            if (sum <= (r - l + 1) / 2)
                change_interval(1, l, r, 0);
            else
                change_interval(1, l, r, 1);
        }
        for (int i = 1; i <= n; i++)
        {
            int g = ask_interval(1, i, i);
            if (a[i] != g)
                f = 0;
        }
        if (f)
            cout << ""YES"" << endl;
        else
            cout << ""NO"" << endl;
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 5;

int cnt[4 * N];
int lazy[4 * N];

void Set(int x, int y, int n, int val)
{
    lazy[n] = val;
    cnt[n] = (y - x + 1) * val;
}

void Down(int x, int y, int n)
{
    if (lazy[n] >= 0)
    {
        Set(x, (x + y) / 2, 2 * n, lazy[n]);
        Set((x + y) / 2 + 1, y, 2 * n + 1, lazy[n]);
        lazy[n] = -1;
    }
}

void Up(int x, int y, int n)
{
    cnt[n] = cnt[2 * n] + cnt[2 * n + 1];
}

int a[N];

void init(int x, int y, int n)
{
    if (x == y)
    {
        lazy[n] = a[x];
        cnt[n] = a[x];
    }
    else
    {
        lazy[n] = -1;
        init(x, (x + y) / 2, 2 * n);
        init((x + y) / 2 + 1, y, 2 * n + 1);
        Up(x, y, n);
    }
}

int qs, qe;

int query(int x, int y, int n)
{
    if (qs > y || qe < x || qs > qe)
        return 0;
    else if (x >= qs && y <= qe)
    {
        return cnt[n];
    }
    else
    {
        Down(x, y, n);
        return query(x, (x + y) / 2, 2 * n) + query((x + y) / 2 + 1, y, 2 * n + 1);
    }
}

int val;

void update(int x, int y, int n)
{
    if (qs > y || qe < x || qs > qe)
        return;
    else if (x >= qs && y <= qe)
    {
        Set(x, y, n, val);
    }
    else
    {
        Down(x, y, n);
        update(x, (x + y) / 2, 2 * n);
        update((x + y) / 2 + 1, y, 2 * n + 1);
        Up(x, y, n);
    }
}

int l[N];
int r[N];

void solve()
{
    int n, q;
    cin >> n >> q;
    string s, f;
    cin >> s >> f;
    s = '#' + s;
    f = '#' + f;
    for (int i = 1; i <= n; i++)
    {
        a[i] = (f[i] == '1');
    }
    init(1, n, 1);
    for (int i = 1; i <= q; i++)
    {
        scanf(""%d %d"", l + i, r + i);
    }
    for (int i = q; i >= 1; i--)
    {
        qs = l[i];
        qe = r[i];
        int range_size = qe - qs + 1;
        int one_cnt = query(1, n, 1);
        int zero_cnt = range_size - one_cnt;
        if (one_cnt == zero_cnt)
        {
            cout << ""NO"" << endl;
            return;
        }
        if (one_cnt < zero_cnt)
        {
            val = 0;
        }
        else
        {
            val = 1;
        }
        update(1, n, 1);
    }
    for (int i = 1; i <= n; i++)
    {
        qs = qe = i;
        if (query(1, n, 1) != (s[i] - '0'))
        {
            cout << ""NO"" << endl;
            return;
        }
    }
    cout << ""YES"" << endl;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
using namespace std;

#define rep(i, a, b) for (int i = a; i <= b; i++)
#define trav(a, x) for (auto& a : x)
#define all(x) begin(x), end(x)
#define sz(x) (int) x.size()
#define f first
#define s second
#define nl ""\n""
typedef long long ll;
typedef pair<int, int> pii;
const int MOD = 1e9 + 7;
template <class T>
using pqg = priority_queue<T, vector<T>, greater<T>>;

int t, n, q, l, r;
string s, f;

struct segtree
{
    int size;
    vector<ll> sums;
    vector<ll> ops;

    void init(int n)
    {
        size = 1;
        while (size < n)
            size *= 2;
        sums.assign(2 * size, 0LL);
        ops.assign(2 * size, -1);
        ops[0] = 0;
    }

    void assign(int l, int r, ll v, int x, int lx, int rx)
    {
        if (lx >= l && rx <= r)
        {
            sums[x] = (ll)(rx - lx) * v;
            ops[x] = v;
            return;
        }
        if (lx >= r || rx <= l)
            return;
        int m = (lx + rx) / 2;
        if (ops[x] != -1)
        {
            sums[2 * x + 1] = sums[2 * x + 2] = (rx - lx) / 2 * ops[x];
            ops[2 * x + 1] = ops[x];
            ops[2 * x + 2] = ops[x];
            ops[x] = -1;
        }
        assign(l, r, v, 2 * x + 1, lx, m);
        assign(l, r, v, 2 * x + 2, m, rx);
        sums[x] = sums[2 * x + 1] + sums[2 * x + 2];
    }

    void assign(int l, int r, ll v)
    {
        assign(l, r, v, 0, 0, size);
    }

    ll sum(int l, int r, int x, int lx, int rx)
    {
        if (lx >= r || rx <= l)
            return 0;
        if (lx >= l && rx <= r)
            return sums[x];
        if (ops[x] != -1)
        {
            return ((ll)min(r, rx) - max(lx, l)) * ops[x];
        }
        int m = (lx + rx) / 2;
        return sum(l, r, 2 * x + 1, lx, m) + sum(l, r, 2 * x + 2, m, rx);
    }

    ll sum(int l, int r)
    {
        return sum(l, r, 0, 0, size);
    }
};


int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    // freopen(""input.txt"", ""r"", stdin);
    // freopen(""output.txt"", ""w"", stdout);

    cin >> t;
    while (t--)
    {
        vector<pii> vec;
        cin >> n >> q >> s >> f;
        rep(i, 1, q)
        {
            cin >> l >> r;
            vec.push_back({ l, r });
        }
        reverse(all(vec));
        segtree st;
        st.init(n + 1);
        rep(i, 0, n - 1)
        {
            if (f[i] == '1')
            {
                st.assign(i + 1, i + 2, 1);
            }
        }

        bool bad = false;
        trav(p, vec)
        {
            int l = p.f;
            int r = p.s;
            int sum = st.sum(l, r + 1);
            if ((r - l + 1) % 2 == 0 && sum == (r - l + 1) / 2)
            {
                bad = true;
                break;
            }
            if (sum <= (r - l + 1) / 2)
            {
                st.assign(l, r + 1, 0);
            }
            else
                st.assign(l, r + 1, 1);
        }

        rep(i, 0, n - 1)
        {
            if (s[i] - '0' != st.sum(i + 1, i + 2))
                bad = true;
        }
        cout << (bad ? ""NO"" : ""YES"") << nl;
    }
}

// 12345678910
// 0110001110
// 0110011111
// 0100011111
// 0100011111
// 0000111111
// 1111111111
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#ifdef Prateek
#include ""Prateek.h""
#else
#include <bits/stdc++.h>
using namespace std;
#define debug(...) 42
#endif
#define int ll
#define all(c) begin(c), end(c)
using ll = long long;
const int MOD = 1e9 + 7, N = 1e5 + 10;

template <typename T>
class SegTreeSum
{
public:
    vector<T> t, lazy, A;
    int n;

    SegTreeSum(int n)
    {
        this->n = n;
        this->t.assign(4 * n + 10, 0);
        this->lazy.assign(4 * n + 10, -1);
    }

    SegTreeSum(vector<T> a)
        : SegTreeSum(a.size())
    {
        this->A = a;
        build(1, 0, n - 1);
    }

    void build(int v, int tl, int tr)
    {
        if (tl == tr)
        {
            t[v] = A[tl];
            return;
        }
        int tm = (tl + tr) / 2;
        build(v << 1, tl, tm);
        build(v << 1 | 1, tm + 1, tr);
        t[v] = t[v << 1] + t[v << 1 | 1];
    }

    void push(int v, int tl, int tr)
    {
        if (lazy[v] != -1)
        {
            t[v] = (tr - tl + 1) * lazy[v];
            if (tl != tr)
            {
                lazy[v << 1] = lazy[v];
                lazy[v << 1 | 1] = lazy[v];
            }
            lazy[v] = -1;
        }
    }

    void update(int v, int tl, int tr, int l, int r, T val)
    {
        push(v, tl, tr);
        if (tl > r or tr < l)
            return;
        if (tl >= l and tr <= r)
        {
            lazy[v] = val;
            push(v, tl, tr);
            return;
        }
        int tm = (tl + tr) / 2;
        update(v << 1, tl, tm, l, r, val);
        update(v << 1 | 1, tm + 1, tr, l, r, val);
        t[v] = t[v << 1] + t[v << 1 | 1];
    }

    T query(int v, int tl, int tr, int l, int r)
    {
        if (tr < l or tl > r)
            return 0;
        push(v, tl, tr);
        if (tl >= l and tr <= r)
            return t[v];
        int tm = (tl + tr) / 2;
        return query(v << 1, tl, tm, l, r) + query(v << 1 | 1, tm + 1, tr, l, r);
    }

    T query(int l, int r)
    {
        return query(1, 0, n - 1, l, r);
    }

    T query(int p)
    {
        return query(1, 0, n - 1, p, p);
    }

    void update(int l, int r, T val)
    {
        update(1, 0, n - 1, l, r, val);
    }

    void update(int p, T val)
    {
        update(1, 0, n - 1, p, p, val);
    }
};

void test()
{
    int n, q;
    cin >> n >> q;
    string s, f;
    cin >> s >> f;
    vector<int> a(n);
    for (int i = 0; i < n; ++i)
    {
        a[i] = f[i] - '0';
    }
    SegTreeSum<int> st(a);
    vector<array<int, 2>> Q(q);
    for (auto & [ l, r ] : Q)
    {
        cin >> l >> r;
        --r, --l;
    }
    reverse(all(Q));
    for (auto & [ l, r ] : Q)
    {
        int v = st.query(l, r);
        if (2 * v == r - l + 1)
        {
            cout << ""NO\n"";
            return;
        }
        st.update(l, r, 2 * v > r - l + 1);
    }
    for (int i = 0; i < n; ++i)
    {
        if (st.query(i) != s[i] - '0')
        {
            cout << ""NO\n"";
            return;
        }
    }
    cout << ""YES\n"";
    return;
}

int32_t main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int tt = 1;
    cin >> tt;
    for (int t = 1; t <= tt; ++t)
    {
        test();
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define endl '\n'
#define __                                                                                         \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);
#define fi first
#define se second
#define pb push_back
#define all(x) (x).begin(), (x).end()
typedef long long int lli;
typedef long double Double;
typedef pair<int, int> pii;

const int mod = (int)1e9 + 7;
const int maxn = (int)1e5 + 5;
const int inf = (int)1e9 + 10;


struct SegmentTree
{
    int n;
    vector<int> st, lazy;

    SegmentTree(int n, string& s)
        : n(n)
        , st(4 * n)
        , lazy(4 * n, -1)
    {
        build(1, 0, n - 1, s);
    }

    int f(int i)
    {
        return st[2 * i] + st[2 * i + 1];
    }

    void build(int i, int ini, int fin, string& s)
    {
        if (ini == fin)
        {
            st[i] = s[ini] - '0';
            return;
        }

        int m = (ini + fin) / 2;
        build(2 * i, ini, m, s);
        build(2 * i + 1, m + 1, fin, s);
        st[i] = f(i);
    }

    void propagate(int i, int ini, int fin, int v)
    {
        st[i] = (fin - ini + 1) * v;
        if (ini != fin)
        {
            lazy[2 * i] = v;
            lazy[2 * i + 1] = v;
        }
    }

    void update(int i, int ini, int fin, int l, int r, int val)
    {
        if (lazy[i] != -1)
        {
            propagate(i, ini, fin, lazy[i]);
            lazy[i] = -1;
        }

        if (ini > r || fin < l)
            return;

        if (ini >= l && fin <= r)
        {
            propagate(i, ini, fin, val);
            return;
        }

        int m = (ini + fin) / 2;
        update(2 * i, ini, m, l, r, val);
        update(2 * i + 1, m + 1, fin, l, r, val);
        st[i] = f(i);
    }

    void update(int l, int r, int val)
    {
        update(1, 0, n - 1, l, r, val);
    }

    int query(int i, int ini, int fin, int l, int r)
    {
        if (lazy[i] != -1)
        {
            propagate(i, ini, fin, lazy[i]);
            lazy[i] = -1;
        }

        if (ini > r || fin < l)
            return 0;

        if (ini >= l && fin <= r)
        {
            return st[i];
        }

        int m = (ini + fin) / 2;
        return query(2 * i, ini, m, l, r) + query(2 * i + 1, m + 1, fin, l, r);
    }

    int query(int l, int r)
    {
        return query(1, 0, n - 1, l, r);
    }
};

void solve()
{
    int n, q;
    cin >> n >> q;
    string s, t;
    cin >> s >> t;

    vector<pii> range(q);
    for (int i = 0; i < q; i++)
    {
        cin >> range[i].fi >> range[i].se;
    }
    // debug(range);

    reverse(range.begin(), range.end());

    SegmentTree st(n, t);

    for (auto e : range)
    {
        int l, r;
        // debug(e);
        tie(l, r) = e;
        l--, r--;
        int cuantos = r - l + 1;
        int unos = st.query(l, r);
        if (cuantos % 2 == 0 && unos == cuantos / 2)
        {
            cout << ""NO\n"";
            return;
        }

        int ceros = cuantos - unos;

        // debug(l,r,unos,ceros,cuantos);
        if (unos < ceros)
        {
            st.update(l, r, 0);
        }
        else
        {
            st.update(l, r, 1);
        }
    }

    for (int i = 0; i < n; i++)
    {
        int c = s[i] - '0';
        int val = st.query(i, i);
        // cout << ""i = "" << i << "" c "" << c << "" val "" << val << endl;
        if (val != c)
        {
            cout << ""NO\n"";
            return;
        }
    }

    cout << ""YES\n"";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int t;
    cin >> t;
    while (t--)
        solve();

    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstring>
#include <algorithm>
#include <stack>
using namespace std;
const int maxn = 3e5 + 7;
typedef long long ll;
#define INFll 9223372036854775807
#define dbg(x) cout << #x << "" = "" << x << endl;
#define lowbit(n) (n & -n)
int t, n, m;
char str1[maxn], str2[maxn];
struct node
{
    int l, r;
    int sum;
    int tag;
} tree[maxn << 2];
pair<int, int> q[maxn];
void built(int rt, int l, int r)
{
    tree[rt].l = l;
    tree[rt].r = r;
    tree[rt].tag = -1;
    if (l == r)
    {
        if (str2[l] == '1')
            tree[rt].sum = 1;
        else
            tree[rt].sum = 0;
        return;
    }
    int mid = (l + r) >> 1;
    built(rt << 1, l, mid);
    built(rt << 1 | 1, mid + 1, r);
    tree[rt].sum = tree[rt << 1].sum + tree[rt << 1 | 1].sum;
}
void pushdown(int rt)
{
    if (tree[rt].tag != -1)
    {
        tree[rt << 1].sum = (tree[rt << 1].r - tree[rt << 1].l + 1) * tree[rt].tag;
        tree[rt << 1 | 1].sum = (tree[rt << 1 | 1].r - tree[rt << 1 | 1].l + 1) * tree[rt].tag;

        tree[rt << 1].tag = tree[rt << 1 | 1].tag = tree[rt].tag;
        tree[rt].tag = -1;
    }
}
void update(int rt, int l, int r, int k)
{
    if (tree[rt].l >= l && r >= tree[rt].r)
    {
        tree[rt].sum = k * (tree[rt].r - tree[rt].l + 1);
        tree[rt].tag = k;
        return;
    }
    pushdown(rt);
    int mid = (tree[rt].l + tree[rt].r) >> 1;
    if (l <= mid)
        update(rt << 1, l, r, k);
    if (r > mid)
        update(rt << 1 | 1, l, r, k);
    tree[rt].sum = tree[rt << 1].sum + tree[rt << 1 | 1].sum;
}
int query(int rt, int l, int r)
{
    if (tree[rt].l >= l && tree[rt].r <= r)
    {
        return tree[rt].sum;
    }
    pushdown(rt);
    int mid = (tree[rt].l + tree[rt].r) >> 1;
    int ans = 0;
    if (l <= mid)
        ans += query(rt << 1, l, r);
    if (r > mid)
        ans += query(rt << 1 | 1, l, r);
    return ans;
}
int main(int argc, char const* argv[])
{
    scanf(""%d"", &t);
    int num = 0;
    while (t--)
    {
        bool judge = true;
        scanf(""%d%d"", &n, &m);
        scanf(""%s%s"", str1 + 1, str2 + 1);
        built(1, 1, n);
        for (int i = 1; i <= m; i++)
        {
            int l, r;
            scanf(""%d%d"", &l, &r);
            q[i] = make_pair(l, r);
        }
        string s;
        for (int i = m; i >= 1; i--)
        {
            // dbg(i);
            int l, r;
            l = q[i].first, r = q[i].second;
            int num = query(1, l, r);
            char a[1];
            // a[1] = '\n';
            // dbg(num);
            if (num < (r - l + 1) * 1.0 / 2)
                update(1, l, r, 0);
            else if (r - l + 1 - num < (r - l + 1) * 1.0 / 2)
                update(1, l, r, 1);
            else if (num != 0 || num != r - l + 1)
            {
                judge = false;
                break;
            }
        }

        for (int i = 1; i <= n && judge; i++)
        {
            // dbg((char)(query(1, i, i) + '0'));
            if (str1[i] != query(1, i, i) + '0')
            {
                judge = false;
                break;
            }
        }

        if (judge)
            printf(""YES\n"");
        else
            printf(""NO\n"");
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t, n, q;
    cin >> t;
    while (t--)
    {
        string s, f;
        cin >> n >> q >> s >> f;
        int l[q], r[q];
        for (int i = 0; i < q; l[i++]--)
            cin >> l[i] >> r[i];
        map<int, bool> seg;
        for (int i = 0; i < n; ++i)
            seg[i] = f[i] - '0';
        bool ok = true;
        for (int i = q - 1; i >= 0; i--)
        {
            for (auto x : { l[i], r[i] })
            {
                bool v = prev(seg.upper_bound(x))->second;
                seg[x] = v;
            }
            int c[2] = {};
            for (auto it = seg.find(l[i]); it->first != r[i]; it = seg.erase(it))
                c[it->second] += next(it)->first - it->first;
            ok &= c[0] != c[1];
            seg[l[i]] = c[0] < c[1];
        }
        for (int i = 0; i < n; ++i)
            ok &= s[i] - '0' == prev(seg.upper_bound(i))->second;
        cout << (ok ? ""YES\n"" : ""NO\n"");
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define forn(i, s, t) for (register int i = (s); i <= (t); ++i)
#define form(i, s, t) for (register int i = (s); i >= (t); --i)
using namespace std;
const int N = 2e5 + 3, M = N << 1;
int t, n, q;
char s[N], f[N];
class SegTree
{
private:
    int val[M], L[M], R[M], tag[M], len[M], sl;
    inline void push_up(int p)
    {
        val[p] = val[L[p]] + val[R[p]];
    }
    inline void Opt(int p, int k)
    {
        val[p] = len[p] * k;
        tag[p] = k;
    }
    inline void push_down(int p)
    {
        Opt(L[p], tag[p]), Opt(R[p], tag[p]), tag[p] = -1;
    }

public:
    int rt;
    void Bld(int& p, int l, int r)
    {
        p = ++sl;
        tag[p] = -1, len[p] = r - l + 1;
        if (l == r)
            return (void)(val[p] = f[l] - '0');
        int mid = l + r >> 1;
        Bld(L[p], l, mid), Bld(R[p], mid + 1, r);
        push_up(p);
    }
    void Upd(int p, int l, int r, int nl, int nr, int k)
    {
        if (l <= nl && nr <= r)
            return Opt(p, k);
        int mid = nl + nr >> 1;
        (~tag[p]) && (push_down(p), 0);
        (l <= mid) && (Upd(L[p], l, r, nl, mid, k), 0);
        (r > mid) && (Upd(R[p], l, r, mid + 1, nr, k), 0);
        push_up(p);
    }
    int Qry(int p, int l, int r, int nl, int nr)
    {
        if (l <= nl && nr <= r)
            return val[p];
        int mid = nl + nr >> 1, res = 0;
        (~tag[p]) && (push_down(p), 0);
        (l <= mid) && (res += Qry(L[p], l, r, nl, mid));
        (r > mid) && (res += Qry(R[p], l, r, mid + 1, nr));
        return res;
    }
} T;
int l[N], r[N];
int main()
{
    scanf(""%d"", &t);
    while (t--)
    {
        scanf(""%d%d"", &n, &q);
        scanf(""%s%s"", s + 1, f + 1);
        forn(i, 1, q) scanf(""%d%d"", l + i, r + i);
        T.Bld(T.rt, 1, n);
        form(i, q, 1)
        {
            int tmp = T.Qry(T.rt, l[i], r[i], 1, n), len = r[i] - l[i] + 1;
            int mes = (len - tmp < tmp), num = (len - tmp < tmp) ? (len - tmp) : tmp;
            if (tmp * 2 == len)
            {
                puts(""NO"");
                goto ED;
            }
            T.Upd(T.rt, l[i], r[i], 1, n, mes);
        }
        forn(i, 1, n) if (s[i] - '0' != T.Qry(T.rt, i, i, 1, n))
        {
            puts(""NO"");
            goto ED;
        }
        puts(""YES"");
    ED:;
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define fi first
#define se second
#define mp make_pair
using namespace std;

int a[200010], b[200010], st[800010], lz[800010], n, q;
string s;
bool gagal;

void build(int v, int tl, int tr)
{
    lz[v] = -1;
    if (tl == tr)
    {
        st[v] = a[tl];
        return;
    }
    int mid = (tl + tr) / 2;
    build(v * 2, tl, mid);
    build(v * 2 + 1, mid + 1, tr);
    st[v] = st[v * 2] + st[v * 2 + 1];
    // cout<<v<<' '<<st[v]<<endl;
    return;
}

void push(int v, int rnl, int rnr)
{
    if (lz[v] == -1)
        return;
    st[v * 2] = lz[v] * rnl;
    lz[v * 2] = lz[v];
    st[v * 2 + 1] = lz[v] * rnr;
    lz[v * 2 + 1] = lz[v];
    lz[v] = -1;
}

void update(int v, int l, int r, int tl, int tr, int up)
{
    if (l > r)
        return;
    if (l == tl && r == tr)
    {
        lz[v] = up;
        st[v] = up * (r - l + 1);
        return;
    }
    int mid = (tl + tr) / 2;
    push(v, mid - tl + 1, tr - mid);
    update(v * 2, l, min(r, mid), tl, mid, up);
    update(v * 2 + 1, max(l, mid + 1), r, mid + 1, tr, up);
    st[v] = st[v * 2] + st[v * 2 + 1];
}

int get(int v, int l, int r, int tl, int tr)
{
    // cout<<v<<' '<<l<<' '<<r<<' '<<tl<<' '<<tr<<endl;
    if (r < l)
    {
        return 0;
    }
    if (tl == tr)
    {
        return st[v];
    }
    if ((l == tl) && (r == tr))
    {
        return st[v];
    }
    // cout<<v<<' '<<l<<' '<<r<<' '<<tl<<' '<<tr<<endl;
    int mid = (tl + tr) / 2;
    push(v, mid - tl + 1, tr - mid);
    return get(v * 2, l, min(r, mid), tl, mid) + get(v * 2 + 1, max(l, mid + 1), r, mid + 1, tr);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    // freopen(""namafile.in"",""r"",stdin);
    // freopen(""out1.out"",""w"",stdout);
    int t, l[200005], r[200005], sum;
    cin >> t;
    while (t--)
    {
        cin >> n >> q;
        cin >> s;
        for (int i = 1; i <= n; i++)
        {
            b[i] = (int)s[i - 1] - '0';
        }
        cin >> s;
        for (int i = 1; i <= n; i++)
        {
            a[i] = (int)s[i - 1] - '0';
        }
        for (int i = 1; i <= q; i++)
        {
            cin >> l[i] >> r[i];
        }
        build(1, 1, n);
        //		cout<<""selesai build""<<endl;
        //		for(int j=1;j<=n;j++){
        //			cout<<get(1,j,j,1,n)<<' ';
        //			cout<<endl;
        //		}
        //		cout<<endl;
        gagal = 0;
        for (int i = q; i >= 1; i--)
        {
            sum = get(1, l[i], r[i], 1, n);
            if (sum == 0 || sum == r[i] - l[i] + 1)
                continue;
            //			cout<<l[i]<<' '<<r[i]<<"" = ""<<sum<<endl;
            if (sum <= (r[i] - l[i]) / 2)
            {
                update(1, l[i], r[i], 1, n, 0);
            }
            else if (r[i] - l[i] + 1 - sum <= (r[i] - l[i]) / 2)
            {
                update(1, l[i], r[i], 1, n, 1);
            }
            else
            {
                gagal = 1;
                break;
            }
            //			for(int j=1;j<=n;j++){
            //				cout<<get(1,j,j,1,n)<<' ';
            //			}
            //			cout<<endl;
        }
        //		cout<<""gagal ""<<gagal<<endl;

        for (int i = 1; i <= n && !gagal; i++)
        {
            if (get(1, i, i, 1, n) != b[i])
            {
                gagal = 1;
            }
        }

        if (gagal)
            cout << ""NO"" << endl;
        else
            cout << ""YES"" << endl;
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define inf 0x3f3f3f3f
#define lson (id << 1)
#define rson (id << 1 | 1)
using namespace std;
typedef long long ll;
const int maxn = 2e5 + 10;
int s[maxn], f[maxn];
int sum[maxn << 2], lazy[maxn << 2], len[maxn << 2];
void push_up(int id)
{
    sum[id] = sum[lson] + sum[rson];
}
void build(int id, int l, int r)
{
    lazy[id] = -1, len[id] = r - l + 1;
    if (l == r)
    {
        sum[id] = f[l];
        return;
    }
    int mid = (l + r) >> 1;
    build(lson, l, mid);
    build(rson, mid + 1, r);
    push_up(id);
}
void push_down(int id)
{
    if (lazy[id] == -1)
        return;
    sum[lson] = lazy[id] * len[lson];
    sum[rson] = lazy[id] * len[rson];
    lazy[lson] = lazy[rson] = lazy[id];
    lazy[id] = -1;
}
void update(int id, int l, int r, int x, int y, int val)
{
    if (x <= l && y >= r)
    {
        //        printf(""debug:update id = %d l = %d r = %d x = %d y = %d val =
        //        %d\n"",id,l,r,x,y,val);
        sum[id] = len[id] * val;
        lazy[id] = val;
        return;
    }
    push_down(id);
    int mid = (l + r) >> 1;
    if (x <= mid)
        update(lson, l, mid, x, y, val);
    if (y > mid)
        update(rson, mid + 1, r, x, y, val);
    push_up(id);
}
int query(int id, int l, int r, int x, int y)
{
    if (x <= l && y >= r)
        return sum[id];
    int mid = (l + r) >> 1, ans = 0;
    push_down(id);
    if (x <= mid)
        ans += query(lson, l, mid, x, y);
    if (y > mid)
        ans += query(rson, mid + 1, r, x, y);
    return ans;
}
void pushAllDown(int id, int l, int r)
{
    if (l == r)
    {
        printf(""l = %d %d\n"", l, sum[id]);
        return;
    }
    int mid = (l + r) >> 1;
    push_down(id);
    pushAllDown(lson, l, mid);
    pushAllDown(rson, mid + 1, r);
}
typedef pair<int, int> pii;
pii ask[maxn];
int main()
{
    int T;
    scanf(""%d"", &T);
    while (T--)
    {
        int n, q;
        scanf(""%d%d"", &n, &q);
        for (int i = 1; i <= n; i++)
            scanf(""%1d"", &s[i]);
        for (int i = 1; i <= n; i++)
            scanf(""%1d"", &f[i]);
        build(1, 1, n);
        for (int i = 1; i <= q; i++)
            scanf(""%d%d"", &ask[i].first, &ask[i].second);
        bool flag = true;
        for (int i = q; i >= 1; i--)
        {
            int l = ask[i].first, r = ask[i].second, len = r - l + 1;
            int all = query(1, 1, n, l, r);
            if (len % 2 == 0 && all == len / 2)
            {
                flag = false;
                break;
            }
            len = (len - 1) / 2;
            //            pushAllDown(1,1,n);
            //            printf(""i = %d l = %d r = %d all = %d len = %d\n"",i,l,r,all,len);
            if (all > len)
                update(1, 1, n, l, r, 1);
            else
                update(1, 1, n, l, r, 0);
        }
        //        printf(""flag = %d\n"",flag);
        for (int i = 1; i <= n; i++)
        {
            int x = query(1, 1, n, i, i);
            //            printf(""i = %d x = %d\n"",i,x);
            if (x != s[i])
            {
                flag = false;
                break;
            }
        }
        printf(""%s\n"", flag ? ""YES"" : ""NO"");
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <vector>
#include <algorithm>

#define nyaa(neko...) fprintf(stderr, neko)

const int maxn = 2E+5 + 5;

int T, n, q, s[maxn], f[maxn];

namespace SGT
{
#define mid (lef + rig >> 1)
#define ls (u << 1)
#define rs (u << 1 | 1)

int val[maxn << 2], tag[maxn << 2];
inline void PushDown(int u, int lef, int rig)
{
    if (!~tag[u])
        return;

    val[ls] = tag[u] * (mid - lef + 1), tag[ls] = tag[u];
    val[rs] = tag[u] * (rig - mid), tag[rs] = tag[u];
    tag[u] = -1;
}

inline void Update(int nlef, int nrig, int nv, int u = 1, int lef = 1, int rig = n)
{
    if (nlef <= lef && nrig >= rig)
    {
        val[u] = (rig - lef + 1) * nv, tag[u] = nv;
        return;
    }

    PushDown(u, lef, rig);
    if (nlef <= mid)
        Update(nlef, nrig, nv, ls, lef, mid);
    if (nrig >= mid + 1)
        Update(nlef, nrig, nv, rs, mid + 1, rig);
    val[u] = val[ls] + val[rs];
}

inline int Query(int nlef, int nrig, int u = 1, int lef = 1, int rig = n)
{
    if (nlef <= lef && nrig >= rig)
        return val[u];

    PushDown(u, lef, rig);
    int res = 0;
    if (nlef <= mid)
        res += Query(nlef, nrig, ls, lef, mid);
    if (nrig >= mid + 1)
        res += Query(nlef, nrig, rs, mid + 1, rig);
    return res;
}

inline void Build(int u = 1, int lef = 1, int rig = n)
{
    tag[u] = -1, val[u] = 0;
    if (lef == rig)
        return;
    Build(ls, lef, mid), Build(rs, mid + 1, rig);
}
}

std::vector<std::pair<int, int> > qry;

int main()
{
    scanf(""%d"", &T);
    while (T-- > 0)
    {
        scanf(""%d%d"", &n, &q), SGT::Build(), qry.clear();
        for (int i = 1; i <= n; ++i)
            scanf(""%1d"", &s[i]);
        for (int i = 1, x; i <= n; ++i)
            scanf(""%1d"", &x), SGT::Update(i, i, x);

        for (int i = 1, l, r; i <= q; ++i)
            scanf(""%d%d"", &l, &r), qry.emplace_back(l, r);

        bool flag = 1;
        for (int i = q - 1; i >= 0; --i)
        {
            int l = qry[i].first, r = qry[i].second;
            int v = SGT::Query(l, r);

            if (v * 2 == r - l + 1)
            {
                flag = 0, puts(""NO"");
                break;
            }
            SGT::Update(l, r, v * 2 > r - l + 1);
        }

        if (flag)
        {
            for (int i = 1; i <= n; ++i)
                if (SGT::Query(i, i) != s[i])
                {
                    puts(""NO""), flag = 0;
                    break;
                }
            if (flag)
                puts(""YES"");
        }
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N = 222222;
const int M = 1 << 19;
int n, q, l[N], r[N];
char s[N], f[N];
int t[M];
void modify(int L, int R, int x, int k = 1, int l = 1, int r = n)
{
    if (L <= l && r <= R)
    {
        t[k] = (r - l + 1) * x;
        return;
    }
    int h = l + r >> 1;
    if (t[k] == 0)
        t[k << 1] = 0, t[k << 1 | 1] = 0;
    if (t[k] == r - l + 1)
        t[k << 1] = h - l + 1, t[k << 1 | 1] = r - h;
    if (L <= h)
        modify(L, R, x, k << 1, l, h);
    if (h < R)
        modify(L, R, x, k << 1 | 1, h + 1, r);
    t[k] = t[k << 1] + t[k << 1 | 1];
}
int query(int L, int R, int k = 1, int l = 1, int r = n)
{
    if (L <= l && r <= R)
        return t[k];
    int h = l + r >> 1, o = 0;
    if (t[k] == 0)
        t[k << 1] = 0, t[k << 1 | 1] = 0;
    if (t[k] == r - l + 1)
        t[k << 1] = h - l + 1, t[k << 1 | 1] = r - h;
    if (L <= h)
        o += query(L, R, k << 1, l, h);
    if (h < R)
        o += query(L, R, k << 1 | 1, h + 1, r);
    return o;
}
int main()
{
    int T, i, x, y, z;
    scanf(""%d"", &T);
    while (T--)
    {
        scanf(""%d%d%s%s"", &n, &q, s + 1, f + 1);
        for (i = 1; i <= q; i++)
            scanf(""%d%d"", l + i, r + i);
        modify(1, n, 0);
        for (i = 1; i <= n; i++)
            if (f[i] == '1')
                modify(i, i, 1);
        z = 1;
        for (i = q; i >= 1; i--)
        {
            x = query(l[i], r[i]);
            y = r[i] - l[i] + 1 - x;
            if (x == y)
            {
                z = 0;
                break;
            }
            if (x < y)
                modify(l[i], r[i], 0);
            else
                modify(l[i], r[i], 1);
        }
        for (i = 1; i <= n; i++)
            if ((s[i] - '0') != query(i, i))
                z = 0;
        if (z)
            cout << ""YES\n"";
        else
            cout << ""NO\n"";
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define x first
#define y second
using namespace std;
typedef long long ll;
typedef pair<int, int> PII;
const int N = 2e5 + 5;
PII p[N];
string s, t;
struct tree
{
    int l, r, lazy, sum;
} tr[N << 2];
void pushup(int u)
{
    tr[u].sum = tr[u << 1].sum + tr[u << 1 | 1].sum;
}
void pushdown(int u)
{
    tree &t = tr[u], &l = tr[u << 1], &r = tr[u << 1 | 1];
    if (tr[u].lazy > -1)
    {
        l.lazy = t.lazy;
        l.sum = (l.r - l.l + 1) * l.lazy;
        r.lazy = t.lazy;
        r.sum = (r.r - r.l + 1) * r.lazy;
        t.lazy = -1;
    }
}
void build(int u, int l, int r)
{
    if (l == r)
        tr[u] = { l, r, -1, t[l - 1] - '0' };
    else
    {
        int mid = l + r >> 1;
        tr[u] = { l, r, -1 };
        build(u << 1, l, mid);
        build(u << 1 | 1, mid + 1, r);
        pushup(u);
    }
}
void modify(int u, int l, int r, int x)
{
    if (tr[u].l > r || tr[u].r < l)
        return;
    if (tr[u].l >= l && tr[u].r <= r)
    {
        tr[u].sum = (tr[u].r - tr[u].l + 1) * x;
        tr[u].lazy = x;
        return;
    }
    pushdown(u);
    modify(u << 1, l, r, x);
    modify(u << 1 | 1, l, r, x);
    pushup(u);
}
int ask(int u, int l, int r)
{
    if (tr[u].l > r || tr[u].r < l)
        return 0;
    if (tr[u].l >= l && tr[u].r <= r)
        return tr[u].sum;
    pushdown(u);
    return ask(u << 1, l, r) + ask(u << 1 | 1, l, r);
}
int main()
{
    int T;
    cin >> T;
    while (T--)
    {
        int n, m, flag = 1;
        scanf(""%d%d"", &n, &m);
        cin >> s >> t;
        build(1, 1, n);
        for (int i = 0; i < m; i++)
            scanf(""%d%d"", &p[i].x, &p[i].y);
        for (int i = m - 1; ~i; i--)
        {
            int l = p[i].x, r = p[i].y;
            int q = ask(1, l, r), ls = r - l + 1;
            // cout << l << ' ' << r << ' ' << q << endl;
            if (2 * q == ls)
            {
                flag = 0;
                break;
            }
            else if (2 * q > ls)
                modify(1, l, r, 1);
            else
                modify(1, l, r, 0);
        }
        for (int i = 1; i <= n; i++)
            if (ask(1, i, i) != s[i - 1] - '0')
            {
                flag = 0;
                break;
            }
        if (flag)
            puts(""YES"");
        else
            puts(""NO"");
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define rep(i, a, n) for (int i = a; i < n; i++)
#define per(i, a, n) for (int i = n - 1; i >= a; i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define fi first
#define se second
#define SZ(x) ((int)(x).size())
typedef vector<int> VI;
typedef long long ll;
typedef pair<int, int> PII;
typedef double db;
mt19937 mrand(random_device{}());
const ll mod = 1000000007;
int rnd(int x)
{
    return mrand() % x;
}
ll powmod(ll a, ll b)
{
    ll res = 1;
    a %= mod;
    assert(b >= 0);
    for (; b; b >>= 1)
    {
        if (b & 1)
            res = res * a % mod;
        a = a * a % mod;
    }
    return res;
}
ll gcd(ll a, ll b)
{
    return b ? gcd(b, a % b) : a;
}
// head

const int N = 200010;

int val[N << 2], sum[N << 2];
char s[N], t[N];
PII a[N];

void build(int o, int l, int r)
{
    val[o] = -1;
    if (l == r)
    {
        val[o] = sum[o] = t[l] - '0';
        return;
    }
    int mid = (l + r) >> 1;
    build(o << 1, l, mid);
    build(o << 1 | 1, mid + 1, r);
    sum[o] = sum[o << 1] + sum[o << 1 | 1];
}

void pushdown(int o, int l, int r)
{
    if (val[o] >= 0)
    {
        val[o << 1] = val[o << 1 | 1] = val[o];
        int mid = (l + r) >> 1;
        sum[o << 1] = (mid - l + 1) * val[o];
        sum[o << 1 | 1] = (r - mid) * val[o];
        val[o] = -1;
    }
}

void update(int o, int l, int r, int L, int R, int v)
{
    if (L <= l && R >= r)
    {
        val[o] = v;
        sum[o] = v * (r - l + 1);
        return;
    }
    pushdown(o, l, r);
    int mid = (l + r) >> 1;
    if (L <= mid)
        update(o << 1, l, mid, L, R, v);
    if (R > mid)
        update(o << 1 | 1, mid + 1, r, L, R, v);
    sum[o] = sum[o << 1] + sum[o << 1 | 1];
}

int query(int o, int l, int r, int L, int R)
{
    if (L <= l && R >= r)
        return sum[o];
    pushdown(o, l, r);
    int res = 0;
    int mid = (l + r) >> 1;
    if (L <= mid)
        res += query(o << 1, l, mid, L, R);
    if (R > mid)
        res += query(o << 1 | 1, mid + 1, r, L, R);
    return res;
}

int main()
{
    int T;
    scanf(""%d"", &T);
    while (T--)
    {
        int n, q;
        scanf(""%d%d%s%s"", &n, &q, s + 1, t + 1);
        for (int i = 1; i <= q; i++)
            scanf(""%d%d"", &a[i].fi, &a[i].se);
        build(1, 1, n);
        bool ok = true;
        for (int i = q; i >= 1; i--)
        {
            int l = a[i].fi, r = a[i].se;
            int cnt = query(1, 1, n, l, r);
            // printf(""cnt=%d sum=%d l=%d r=%d\n"", cnt, sum[1], l, r);
            if (cnt <= (r - l) / 2)
                update(1, 1, n, l, r, 0);
            else if (r - l + 1 - cnt <= (r - l) / 2)
                update(1, 1, n, l, r, 1);
            else
            {
                ok = false;
                break;
            }
        }
        if (ok)
        {
            for (int i = 1; i <= n; i++)
            {
                // printf(""%d"", query(1, 1, n, i, i));
                if (query(1, 1, n, i, i) != s[i] - '0')
                {
                    ok = false;
                    break;
                }
            }
        }
        // printf(""\n"");
        if (ok)
            printf(""YES\n"");
        else
            printf(""NO\n"");
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <cstring>
#include <algorithm>
const int N = 1e6 + 10;
#define rint register int
#define rll register ll
typedef long long ll;
struct Tree
{
    int sum, tag, siz;
} tree[N];
#define lson (t << 1)
#define rson (t << 1 | 1)
#define mid ((l + r) >> 1)
inline void pushup(rint t)
{
    tree[t].sum = tree[lson].sum + tree[rson].sum;
}
inline void pushdown(rint t)
{
    if (~tree[t].tag)
    {
        tree[lson].sum = tree[lson].siz * tree[t].tag;
        tree[rson].sum = tree[rson].siz * tree[t].tag;
        tree[lson].tag = tree[rson].tag = tree[t].tag;
        tree[t].tag = -1;
    }
}
inline void update(rint t, rint l, rint r, rint cl, rint cr, rint w)
{
    if (cl <= l && r <= cr)
        return tree[t].sum = tree[t].siz * w, tree[t].tag = w, void();
    pushdown(t);
    if (cr <= mid)
        update(lson, l, mid, cl, cr, w);
    else if (cl > mid)
        update(rson, mid + 1, r, cl, cr, w);
    else
        update(lson, l, mid, cl, cr, w), update(rson, mid + 1, r, cl, cr, w);
    pushup(t);
}
inline int query(rint t, rint l, rint r, rint ql, rint qr)
{
    if (ql <= l && r <= qr)
        return tree[t].sum;
    pushdown(t);
    if (qr <= mid)
        return query(lson, l, mid, ql, qr);
    else if (ql > mid)
        return query(rson, mid + 1, r, ql, qr);
    else
        return query(lson, l, mid, ql, qr) + query(rson, mid + 1, r, ql, qr);
}
int n, m, l[N], r[N];
char S[N], T[N];
inline void build(rint t, rint l, rint r)
{
    tree[t].tag = -1;
    tree[t].siz = r - l + 1;
    if (l == r)
        return tree[t].sum = T[l] - '0', void();
    build(lson, l, mid);
    build(rson, mid + 1, r);
    pushup(t);
}
inline void Solve()
{
    scanf(""%d%d"", &n, &m);
    scanf(""%s"", S + 1);
    scanf(""%s"", T + 1);
    for (rint i = 1; i <= m; ++i)
        scanf(""%d%d"", &l[i], &r[i]);
    bool ok = 1;
    build(1, 1, n);
    for (rint i = m; i >= 1; --i)
    {
        rint cnt = query(1, 1, n, l[i], r[i]);
        if (r[i] - l[i] + 1 == cnt * 2)
            ok = 0;
        else if (cnt * 2 < r[i] - l[i] + 1)
            update(1, 1, n, l[i], r[i], 0);
        else
            update(1, 1, n, l[i], r[i], 1);
    }
    for (rint i = 1; i <= n; ++i)
    {
        if (query(1, 1, n, i, i) + '0' != S[i])
            ok = 0;
    }
    puts(ok ? ""YES"" : ""NO"");
}
int main()
{
    rint t;
    scanf(""%d"", &t);
    while (t--)
        Solve();
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

//#pragma GCC optimize(""Ofast,unroll-loops,no-stack-protector"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")


#define pb push_back
#define fi first
#define se second
#define ll long long
#define tp top()
#define fr front()
#define vi vector<int>
#define sz size()
#define rep(i, a, b) for (int i = a; i < b; ++i)
#define mem(a, b) memset(a, (b), sizeof(a))
#define clr(a) memset(a, 0, sizeof(a))
#define sqr(x) ((x) * (x))
#define all(v) v.begin(), v.end()

typedef pair<int, int> pii;
typedef pair<int, pii> pip;
typedef pair<pii, int> ppi;
typedef pair<pii, pii> ppp;


void base()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

#define N 200020
int st[4 * N], lazy[4 * N];
int n, m, l[N], r[N];
string s1, s2;

void merge(int v)
{
    st[v] = st[v << 1] + st[v << 1 | 1];
}

void propagate(int v, int l, int r)
{
    if (lazy[v] == -1)
        return;
    if (lazy[v] != -1)
    {
        st[v] = (r - l + 1) * lazy[v];
        if (l != r)
            lazy[v << 1] = lazy[v << 1 | 1] = lazy[v];
    }
    lazy[v] = -1;
}

void build(int v, int l, int r)
{
    lazy[v] = -1;
    if (l == r)
    {
        st[v] = s2[l] - '0';
        return;
    }
    int m = (l + r) >> 1;
    build(v << 1, l, m);
    build(v << 1 | 1, m + 1, r);
    merge(v);
}

void update(int v, int l, int r, int ss, int se, int val)
{
    propagate(v, l, r);
    if (ss > se)
        return;
    if (l == ss && r == se)
    {
        st[v] = val * (r - l + 1);
        if (l != r)
            lazy[v << 1] = lazy[v << 1 | 1] = val;
        return;
    }
    int m = (l + r) >> 1;
    update(v << 1, l, m, ss, min(se, m), val);
    update(v << 1 | 1, m + 1, r, max(m + 1, ss), se, val);
    merge(v);
}

int query(int v, int l, int r, int ss, int se)
{
    propagate(v, l, r);
    if (ss > se)
        return 0;
    if (l == ss && r == se)
        return st[v];
    int m = (l + r) >> 1;
    return query(v << 1, l, m, ss, min(se, m)) + query(v << 1 | 1, m + 1, r, max(m + 1, ss), se);
}

void solve()
{
    cin >> n >> m;
    cin >> s1 >> s2;
    rep(i, 0, m) cin >> l[i] >> r[i];
    build(1, 0, n - 1);

    for (int i = m - 1; i >= 0; i--)
    {

        int x = query(1, 0, n - 1, l[i] - 1, r[i] - 1);
        int range = r[i] - l[i] + 1;
        int inx = range - x;

        if (x == inx)
        {
            cout << ""NO\n"";
            return;
        }
        if (x > inx)
        {
            update(1, 0, n - 1, l[i] - 1, r[i] - 1, 1);
        }
        else
        {
            update(1, 0, n - 1, l[i] - 1, r[i] - 1, 0);
        }
    }

    rep(i, 0, n)
    {
        if (query(1, 0, n - 1, i, i) != s1[i] - '0')
        {
            cout << ""NO\n"";
            return;
        }
    }

    cout << ""YES\n"";
}

int main()
{
    base();
    //  freopen(""input.txt"", ""r"", stdin);
    //  freopen(""output.txt"", ""w"", stdout);
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin >> t;

    while (t--)
    {
        int n;
        cin >> n;

        vector<int> v(n);

        for (int i = 0; i < n; i++)
            cin >> v[i];


        sort(v.begin(), v.end(), greater<int>());

        int m = 1001;

        for (int i = 0; i < n - 1; i++)
        {
            if (v[i] - v[i + 1] < m)
                m = v[i] - v[i + 1];
        }

        cout << m << endl;
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int t, n, a[55];
int main()
{
    cin >> t;
    while (t--)
    {
        cin >> n;
        for (int i = 0; i < n; i++)
            cin >> a[i];
        sort(a, a + n);
        int mn = abs(a[1] - a[0]);
        for (int i = 2; i < n; i++)
            mn = min(mn, abs(a[i] - a[i - 1]));
        cout << mn << '\n';
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
#ifdef LOCALFLAG
    freopen(""input5.txt"", ""r"", stdin);
    freopen(""output5.txt"", ""w"", stdout);
#endif
    int t;
    cin >> t;
    int l;

    for (int i = 0; i < t; i++)
    {
        cin >> l;
        int arr[l];
        for (int j = 0; j < l; j++)
        {
            cin >> arr[j];
        }

        int n = sizeof(arr) / sizeof(arr[0]);
        sort(arr, arr + n);
        int m = arr[l - 1];
        int d = 0;
        for (int j = 0; j < l - 1; j++)
        {
            d = arr[j + 1] - arr[j];
            if (d < m)
            {
                m = d;
            }
        }
        cout << m << endl;
    }


    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

void solve()
{
    ll ans = 0, t, n, mnDiff = LONG_LONG_MAX;
    cin >> n;
    ll A[n];
    for (int i = 0; i < n; ++i)
        cin >> A[i];
    sort(A, A + n);
    for (int i = n - 1; i > 0; --i)
    {
        A[i] = abs(A[i] - A[i - 1]);
        mnDiff = min(mnDiff, A[i]);
    }
    cout << mnDiff << '\n';
}
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    ll tc;
    cin >> tc;
    while (tc--)
        solve();
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        int p;
        cin >> p;
        int a[p];
        for (int j = 0; j < p; j++)
        {
            cin >> a[j];
        }
        sort(a, a + p);
        int c = a[1] - a[0];
        int d;
        for (int j = 2; j < p; j++)
        {
            d = a[j] - a[j - 1];
            c = min(c, d);
        }
        cout << c << endl;
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <iomanip>
#include <algorithm>
using namespace std;

#define IOS                                                                                        \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define endl ""\n""
#define Max(x, y, z) max(x, max(y, z))
#define Min(x, y, z) min(x, min(y, z))
#define fr(i, s, e) for (i = s; i < e; i++)
#define rf(i, s, e) for (i = s - 1; i >= e; i--)
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define mod 1000000007
typedef long long ll;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
typedef vector<int> vi;
typedef vector<long long> vll;
typedef vector<pair<long long, long long> > vpll;


#define PI 3.141592653589793
#define MOD 1000000007
#include <string>
#include <cstring>
void solve();
ll tc = 0;

void solve()
{
    ll n;
    cin >> n;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];

    sort(a, a + n);
    ll mn = 1000;
    for (int i = 1; i < n; i++)
    {
        if (a[i] - a[i - 1] < mn)
            mn = a[i] - a[i - 1];
    }
    cout << mn << endl;
}


int main()
{
    ll t;
    cin >> t;
    while (t--)
        solve();

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t;

    cin >> t;
    while (t--)
    {
        int n;
        int count = 0;
        cin >> n;
        int arr[n];
        int arr1[n - 1];
        for (int i = 0; i < n; i++)
        {
            cin >> arr[i];
        }
        sort(arr, arr + n);
        for (int i = 0; i < n - 1; i++)
        {
            if (arr[i] == arr[i + 1])
            {
                count = 1;
                break;
            }
        }
        if (count == 1)
        {
            cout << 0 << endl;
        }
        else
        {
            for (int i = 0; i < n - 1; i++)
            {
                arr1[i] = abs(arr[i] - arr[i + 1]);
            }
            sort(arr1, arr1 + n - 1);
            cout << arr1[0] << endl;
        }
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*
Author : Ritesh Singh
*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ll long long
#define ff first
#define ss second
#define f(i, n) for (int i = 0; i < n; i++)
#define fa(i, a, b) for (int i = a; i < b; i++)
#define pb push_back
#define fast                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL)
#define vi vector<int>
#define vll vector<long long>
#define pi pair<int, int>
#define all(x) x.begin(), x.end()
const ll inf = 1e9;
const ll mod = 1000000007;
typedef tree<pair<ll, int>, null_type, less<pair<ll, int>>, rb_tree_tag,
    tree_order_statistics_node_update> pbds;
// Ordered set
// pbds s1
int32_t main()
{
    fast;
    ll T;
    T = 1;
    cin >> T;
    while (T--)
    {
        int n;
        cin >> n;
        vi arr(n);
        f(i, n) cin >> arr[i];
        sort(all(arr));
        int ans = INT_MAX;
        f(i, n - 1) ans = min(ans, arr[i + 1] - arr[i]);
        cout << ans << ""\n"";
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define pb push_back
const int INF = 1000000000;

void solve()
{
    // int a[1001]={0};
    int n;
    cin >> n;
    int b[n];
    for (int i = 0; i < n; i++)
    {
        cin >> b[i];
    }
    sort(b, b + n);
    int ans = INF;
    for (int i = 0; i < n - 1; i++)
    {
        if (b[i] == b[i + 1])
        {
            cout << 0 << endl;
            return;
        }
        ans = min(ans, b[i + 1] - b[i]);
    }
    cout << ans << endl;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int t;
    cin >> t;
    while (t--)
        solve();
#ifndef ONLINE_JUDGE
    cout << ""\nTime Elapsed: "" << 1.0 * clock() / CLOCKS_PER_SEC << "" sec\n"";
#endif

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int s[n];
        for (int i = 0; i < n; i++)
        {
            cin >> s[i];
        }
        sort(s, s + n);
        int res = INT_MAX;
        for (int i = 1; i < n; i++)
        {
            if ((s[i] - s[i - 1]) == 0)
            {
                res = 0;
                break;
            }
            else
            {
                if (res > (s[i] - s[i - 1]))
                {
                    res = (s[i] - s[i - 1]);
                }
            }
        }
        cout << res << endl;
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// Problem link :
#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define mp make_pair
#define pb push_back
#define fi first
#define si second
#define fastIO                                                                                     \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
#define F(a, n)                                                                                    \
    for (int i = 0; i < n; i++)                                                                    \
    {                                                                                              \
        cin >> a[i];                                                                               \
    }
#define F1(a, n)                                                                                   \
    for (int i = 1; i <= n; i++)                                                                   \
    {                                                                                              \
        cin >> a[i];                                                                               \
    }
#define P(a, n)                                                                                    \
    for (int i = 0; i < n; i++)                                                                    \
    {                                                                                              \
        cout << a[i] << ' ';                                                                       \
    }                                                                                              \
    cout << endl;
#define P1(a, n)                                                                                   \
    for (int i = 1; i <= n; i++)                                                                   \
    {                                                                                              \
        cout << a[i] << ' ';                                                                       \
    }                                                                                              \
    cout << endl;
#define NF(a, n, m)                                                                                \
    for (int i = 0; i < n; i++)                                                                    \
    {                                                                                              \
        for (int j = 0; j < m; j++)                                                                \
        {                                                                                          \
            cin >> a[i][j];                                                                        \
        }                                                                                          \
    }
#define NF1(a, n, m)                                                                               \
    for (int i = 1; i <= n; i++)                                                                   \
    {                                                                                              \
        for (int j = 1; j <= m; j++)                                                               \
        {                                                                                          \
            cin >> a[i][j];                                                                        \
        }                                                                                          \
    }
#define PNF(a, n, m)                                                                               \
    for (int i = 0; i < n; i++)                                                                    \
    {                                                                                              \
        for (int j = 0; j < m; j++)                                                                \
        {                                                                                          \
            cout << a[i][j] << ' ';                                                                \
        }                                                                                          \
        cout << endl;                                                                              \
    }                                                                                              \
    cout << endl;
#define PNF1(a, n, m)                                                                              \
    for (int i = 1; i <= n; i++)                                                                   \
    {                                                                                              \
        for (int j = 1; j <= m; j++)                                                               \
        {                                                                                          \
            cout << a[i][j] << ' ';                                                                \
        }                                                                                          \
        cout << endl;                                                                              \
    }                                                                                              \
    cout << endl;
#define AS 200001
#define mod 1000000007


int main()
{
    fastIO
#ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif

    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];

        int diff = INT_MAX;

        sort(a, a + n);
        for (int i = 0; i < n - 1; i++)
        {
            if ((a[i + 1] - a[i]) < diff)
            {
                diff = (a[i + 1] - a[i]);
            }
        }
        cout << diff << endl;
    }

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
main()
{
    int t; // number of test case
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        sort(a, a + n);
        int mn = 1000000;
        for (int i = 0; i < n - 1; i++)
        {
            mn = min(mn, abs((a[i] - a[i + 1])));
        }
        cout << abs(mn) << ""\n"";
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*
B. Honest Coach
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
There are n athletes in front of you. Athletes are numbered from 1 to n from left to right. You know
the strength of each athlete  the athlete number i has the strength si.

You want to split all athletes into two teams. Each team must have at least one athlete, and each
athlete must be exactly in one team.

You want the strongest athlete from the first team to differ as little as possible from the weakest
athlete from the second team. Formally, you want to split the athletes into two teams A and B so
that the value |max(A)min(B)| is as small as possible, where max(A) is the maximum strength of an
athlete from team A, and min(B) is the minimum strength of an athlete from team B.

For example, if n=5 and the strength of the athletes is s=[3,1,2,6,4], then one of the possible
split into teams is:

first team: A=[1,2,4],
second team: B=[3,6].
In this case, the value |max(A)min(B)| will be equal to |43|=1. This example illustrates one of
the ways of optimal split into two teams.

Print the minimum value |max(A)min(B)|.

Input
The first line contains an integer t (1t1000)  the number of test cases in the input. Then t test
cases follow.

Each test case consists of two lines.

The first line contains positive integer n (2n50)  number of athletes.

The second line contains n positive integers s1,s2,,sn (1si1000), where si  is the strength of
the i-th athlete. Please note that s values may not be distinct.

Output
For each test case print one integer  the minimum value of |max(A)min(B)| with the optimal split
of all athletes into two teams. Each of the athletes must be a member of exactly one of the two
teams.

Example
inputCopy
5
5
3 1 2 6 4
6
2 1 3 2 4 3
4
7 9 3 1
2
1 1000
3
100 150 200
outputCopy
1
0
2
999
50
Note
The first test case was explained in the statement. In the second test case, one of the optimal
splits is A=[2,1], B=[3,2,4,3], so the answer is |22|=0.
*/


#include <bits/stdc++.h>
#include <iostream>
using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, difference = 0, minimum = INT_MAX;
        cin >> n;
        int* a = new int[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];
        sort(a, a + n);
        for (int i = 1; i < n; i++)
        {
            difference = a[i] - a[i - 1];
            minimum = min(minimum, difference);
        }
        cout << minimum << endl;
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    long long n;
    cin >> n;
    while (n > 0)
    {

        int nn;
        cin >> nn;
        int s[100], d = 50000;
        for (int i = 0; i < nn; i++)
            cin >> s[i];

        sort(s, s + nn);
        for (int i = 1; i < nn; i++)
        {
            d = min(d, s[i] - s[i - 1]);
        }

        cout << d << endl;
        n--;
    }


    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int main()
{

    // #ifndef ONLINE_JUDGE
    // 	freopen(""input.txt"", ""r"", stdin);
    // 	freopen(""output.txt"", ""w"", stdout);
    // #endif

    int t, n;

    cin >> t;
    while (t--)
    {
        cin >> n;
        vector<int> v(n);
        for (int i = 0; i < n; i++)
        {
            cin >> v[i];
        }

        sort(v.begin(), v.end());
        int mini = 99999;
        for (int i = 0; i < n - 1; i++)
        {
            if (v[i + 1] - v[i] < mini)
                mini = v[i + 1] - v[i];
        }

        cout << mini << endl;
    }


    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ar array
#define ll long long
#define int long long int
#define ull unsigned long long
#define pb push_back
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define all(x) (x).begin(), (x).end()
#define uniq(v) (v).erase(unique(all(v)), (v).end())
#define sz(x) (int)((x).size())
#define fr first
#define sc second
#define pii pair<int, int>
#define rep(i, a, b) for (int i = a; i <= b; i++)
#define mem1(a) memset(a, -1, sizeof(a))
#define mem0(a) memset(a, 0, sizeof(a))
#define ppc __builtin_popcount
#define ppcll __builtin_popcountll
const int MAX_N = 1e5 + 1;
const int MOD = 1e9 + 7;
const int INF = 1e9;
const ll LINF = 1e18;
signed main()
{

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif


    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];
        int mini = INT_MAX;
        for (int i = 0; i < n; i++)
        {
            for (int j = i + 1; j < n; j++)
            {
                if (abs(a[j] - a[i]) < mini)
                {
                    mini = abs(a[j] - a[i]);
                }
            }
        }
        cout << mini << ""\n"";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t, n, a[50], mn, d;
    cin >> t;
    while (t--)
    {
        cin >> n;
        mn = 5000;
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        sort(a, a + n);
        for (int i = 0; i < n - 1; i++)
        {
            d = a[i + 1] - a[i];
            if (d < mn)
                mn = d;
        }
        cout << mn << '\n';
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define fastio ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL)
#define endl ""\n""
#define ll long long int
#define ld long double
#define pb push_back
#define mp make_pair
#define vll vector<ll>
#define vpll vector<pair<ll, ll> >
ld pi = 3.14159265358979323846;

using namespace std;

int main()
{
    fastio;
    ll t;
    cin >> t;
    while (t--)
    {
        ll n;
        cin >> n;
        vll v;
        for (ll i = 0; i < n; i++)
        {
            ll in;
            cin >> in;
            v.pb(in);
        }
        ll minx = 1e9;
        sort(v.begin(), v.end());
        for (ll i = 0; i < v.size() - 1; i++)
        {
            minx = min(minx, v[i + 1] - v[i]);
        }
        cout << minx << endl;
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
using namespace std;

int main()
{
    // code
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int s[n];
        for (int i = 0; i < n; i++)
            cin >> s[i];
        sort(s, s + n);
        int mini = s[1] - s[0];
        for (int i = 1; i < n; i++)
        {
            mini = min(mini, s[i] - s[i - 1]);
        }
        cout << mini << endl;
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <utility>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <unordered_set>
#include <unordered_map>
using namespace std;


void File()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen(""Input.txt"", ""r"", stdin);
    freopen(""Output.txt"", ""w"", stdout);
#endif
}
#define watch(x) cout << (#x) << "" = "" << x << endl
//#define ceil(x,y)                        (x+y-1)/y
//#define floor(x , y)                     (x / b)
//#define round(x , y)                     (x + b / 2) / b
#define lb lower_bound
#define ub upper_bound
#define ll long long
#define ull unsigned long long
#define fix(n) cout << fixed << setprecision(n);
#define all(a) a.begin(), a.end()
#define skip continue
#define loop(n) for (int i = 0; i < n; i++)
#define loop1(n) for (int i = 1; i <= n; i++)
#define endl ""\n""
#define stop return 0
#define EPS 1e-9

bool cmp(int a, int b)
{
    return a > b;
}
ll gcd(ll a, ll b)
{
    if (b == 0)
        return a;
    return gcd(b, a % b);
}


int main()
{
    File();
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        sort(all(a));
        int mini = 1e9;
        a.push_back(1e7);

        for (int i = 0; i < n; i++)
        {
            if (a[i + 1] - a[i] < mini)
                mini = a[i + 1] - a[i];
        }
        cout << mini << endl;
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <iostream>
#include <cmath>
#include <vector>
#include <numeric>
using namespace std;
/*
const int MAX_INT = 100;
template<class t>
class Stack{
private:
        t item[MAX_INT];
        int top;
public:
        void push(t element){
                top++;
                item[top] = element;
        }
        bool empty(){
                if(top == -1){
                        return true;
                }else{
                        return false;
                }
        }
        void pop(){
                if(empty()){
                        cout << ""Sorry this stack is empty."" << ""\n"";
                }else{
                        top--;
                }
        }
        void pop(t &element){
                if(empty()){
                        cout << ""Sorry this stack is empty."" << ""\n"";
                }else{
                        element = item[top];
                        top--;
                }
        }
        void getTop(t &stackTop){
                stackTop =  item[top];
                cout << stackTop << ""\n"";
        }
        void print(){
                for(int i = top; i>=0; i--){
                        cout << item[i] << "" "";
                }
        }
};
int counter[100001];
*/
int main()
{
    int t = 0;
    cin >> t;
    while (t--)
    {
        int n = 0;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++)
        {
            cin >> arr[i];
        }
        int ans = INT_MAX;
        sort(arr, arr + n);
        for (int i = 0; i < n - 1; i++)
        {
            int dif = arr[i + 1] - arr[i];
            ans = min(dif, ans);
        }
        cout << ans << ""\n"";
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define fastio                                                                                     \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL)

int main()
{
    fastio;
    ll t;
    cin >> t;
    while (t--)
    {
        ll n;
        cin >> n;
        ll* arr = new ll[n];
        for (ll i = 0; i < n; i++)
        {
            cin >> arr[i];
        }
        sort(arr, arr + n);
        ll min = INT_MAX;
        for (ll i = 1; i < n; i++)
        {
            if (arr[i] - arr[i - 1] < min)
                min = (arr[i] - arr[i - 1]);
        }
        cout << min << endl;
        delete[] arr;
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <stdio.h>

int* sort(int n, int ar[])
{

    for (int i = n - 1; i > 0; i--)
    {

        for (int j = 0; j < i; j++)
        {
            if (ar[j] > ar[i])
            {
                int r = ar[i];
                ar[i] = ar[j];
                ar[j] = r;
            }
        }
    }

    return ar;
}

int main()
{
    int t;
    scanf(""%d"", &t);

    for (int x = 0; x < t; ++x)
    {
        int n;
        scanf(""%d"", &n);

        int ar[n];
        for (int i = 0; i < n; ++i)
            scanf(""%d"", &ar[i]);

        sort(n, ar);

        int min = 2000;
        for (int i = 1; i < n; ++i)
        {
            if (ar[i] - ar[i - 1] < min)
            {
                min = ar[i] - ar[i - 1];
            }

            if (min == 0)
            {
                break;
            }
        }

        printf(""%d\n"", min);
    }

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define nl '\n'
#define optimise                                                                                   \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(NULL);

using namespace std;

typedef long long ll;

void solve()
{
    int n;
    cin >> n;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    sort(arr, arr + n);
    int minimum = INT_MAX;
    for (int i = 1; i < n; i++)
    {
        minimum = min(minimum, arr[i] - arr[i - 1]);
    }
    cout << minimum << nl;
}

int main()
{
    optimise int T;
    cin >> T;
    while (T--)
        solve();
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define fore(i, l, r)                                                                              \
    for (auto i = (l) - ((l) > (r)); i != (r) - ((l) > (r)); i += 1 - 2 * ((l) > (r)))
#define ceil(n, k) (((n) + ((k)-1)) / (k))
#define all(a) begin(a), end(a)
#define sz(a) int(a.size())
#define eb emplace_back
#define pb push_back
#define f first
#define s second

#ifdef LOCAL
#include ""../debug.h""
#else
#define debug(...)
#endif

using lli = long long;
using ld = long double;
using ii = pair<int, int>;
using vi = vector<int>;
using vii = vector<ii>;

const int N = 1e6 + 5;
const int inf = 1e9 + 5;
int n;
int a[N];

void testCase()
{
    cin >> n;

    fore(i, 0, n) cin >> a[i];

    int mn = inf;

    fore(i, 0, n) fore(j, i + 1, n) mn = min(mn, abs(a[i] - a[j]));

    cout << mn << '\n';
}

int main()
{
    cin.tie(0)->sync_with_stdio(0), cout.tie(0);

    int tc;
    cin >> tc;
    while (tc--)
        testCase();

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
template <class T>
using V = vector<T>;
template <class T, class U>
using M = unordered_map<T, U>;
using F = double;
using S = string;
using ll = long long;
using vi = V<int>;
#define endl '\n'
#define rep(i, n) for (int i = 0; i < n; i++)
#define repi(i, s, e) for (int i = s; i < e; i++)
#define all(v) v.begin(), v.end()
#define pb push_back
#define eb emplace_back
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    rep(ti, t)
    {
        int n;
        cin >> n;
        vi s(n);
        rep(i, n) cin >> s[i];
        sort(all(s));
        int a = 10000;
        rep(i, n - 1) a = min(a, s[i + 1] - s[i]);
        cout << a << endl;
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin >> t;
    for (int i = 0; i < t; i++)
    {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int& x : a)
        {
            cin >> x;
        }
        sort(a.begin(), a.end());
        int res = a[n - 1] - a[0];
        for (int i = 0; i < n; i++)
        {
            for (int j = i + 1; j < n; j++)
            {
                res = min(res, a[j] - a[i]);
            }
        }
        cout << res << endl;
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define debug(x)                                                                                   \
    if (true)                                                                                      \
        cout << #x << "" = "" << x << '\n';
#define diag(x)                                                                                    \
    if (true)                                                                                      \
        cout << x;
int _;
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    _ = 1;
    cin >> _;
    while (_--)
    {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++)
            cin >> a[i];
        sort(a.begin(), a.end());
        int val = a[1] - a[0];
        for (int i = 2; i < n; i++)
        {
            val = min(a[i] - a[i - 1], val);
        }
        cout << val << '\n';
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i, n) for (int i = 0; i < n; i++)

int main()
{
    int t;
    cin >> t;
    rep(i, t)
    {
        int n;
        cin >> n;
        int a[n];
        rep(j, n) cin >> a[j];
        sort(a, a + n);
        int mindif = 1000;
        rep(j, n - 1)
        {
            mindif = min(mindif, a[j + 1] - a[j]);
        }
        cout << mindif << endl;
    }
    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <cmath>
#include <list>
using namespace std;

#define ll long long int

void solve()
{
    ll n;
    cin >> n;
    ll a[100001];
    ll mini = 100000001;
    for (ll i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    sort(a, a + n);
    for (ll i = 1; i < n; i++)
    {
        mini = min(mini, a[i] - a[i - 1]);
    }
    cout << mini << endl;
}

int main(void)
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ll t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
typedef long long ll;
typedef unsigned long long ull;
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        ll n;
        cin >> n;
        vector<ll> s;
        for (int i = 0; i < n; i++)
        {
            ll x;
            cin >> x;
            s.pb(x);
        }
        vector<ll> a, b;
        sort(s.begin(), s.end());
        ll mini = s[1] - s[0];
        for (int i = 2; i < n; i++)
            mini = min(mini, s[i] - s[i - 1]);
        cout << mini << endl;
    }
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>


using namespace std;
int main()
{
    int t, n, x = 0, p = 0, z = 0, y = 10000;
    cin >> t;
    for (int i = 0; i < t; i++)
    {
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        for (int i = 0; i < n; i++)
        {
            for (int j = i + 1; j < n; j++)
            {
                x = abs(a[i] - a[j]);
                z = min(y, x);
                y = z;
            }
        }


        cout << z << endl;
        y = 10000;
    }

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
template <class T>
using V = vector<T>;
template <class T, class U>
using M = unordered_map<T, U>;
using F = double;
using S = string;
using ll = long long;
using vi = V<int>;
#define endl '\n'
#define rep(i, n) for (int i = 0; i < n; i++)
#define repi(i, s, e) for (int i = s; i < e; i++)
#define all(v) v.begin(), v.end()
#define pb push_back
#define eb emplace_back
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    rep(ti, t)
    {
        int n;
        cin >> n;
        int a = 4;
        while (1)
        {
            if (n % (a - 1) == 0)
                break;
            a *= 2;
        }
        cout << (n / (a - 1)) << endl;
    }
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define endl '\n'
#define int long long

main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int k = 1;
        for (int i = 0; i < 32; i++)
        {
            k <<= 1;
            k++;
            if (n % k == 0)
            {
                cout << n / k << endl;
                break;
            }
        }
    }
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

void solve()
{

    long long n;
    cin >> n;
    long long t = 1;
    for (long long i = 1;; i++)
    {
        t += pow(2.0, i);
        if (n % t == 0)
        {
            long long ans = n / t;
            cout << ans << endl;
            break;
        }
    }
}

int main()
{

    ios_base::sync_with_stdio(false);

    int testcase;
    cin >> testcase;
    for (int t = 1; t <= testcase; t++)
    {
        solve();
    }


    return 0;
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int findK(int sum)
{
    int k = 2;
    while (fmod(sum, pow(2, k) - 1) != 0)
    {
        k++;
    }

    return k;
}

int main()
{
    int n;
    vector<int> result;

    cin >> n;

    for (int i = 0; i < n; i++)
    {
        int a;
        cin >> a;
        int k = findK(a);
        int x = a / (pow(2, k) - 1);
        result.push_back(x);
    }

    for (auto&& i : result)
    {
        cout << i << endl;
    }


    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;

int main()
{
    int t;
    cin >> t;
    while (t-- > 0)
    {
        int n;
        cin >> n;
        long long int sum = 3, next = 4;
        while (n % sum != 0)
        {
            sum = sum + next;
            next = next * 2;
        }
        cout << n / sum << endl;
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
void solve()
{
    int n;
    cin >> n;
    for (int i = 1; i < 30; ++i)
    {
        int t = pow(2, i) - 1;
        if (n % t == 0 && t - 1)
        {
            cout << n / t;
            return;
        }
    }
}
int main()
{
    int t = 1;
    cin >> t;
    while (t--)
        solve(), cout << endl;
    return 0;
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    long long int t, x, k, i = 0, y;
    cin >> t;
    double p, n;
    while (t--)
    {
        cin >> n;
        for (k = 2; k < n; k++)
        {
            y = pow(2, k) - 1;
            p = n / y;
            x = n / y;
            if (x == p)
            {
                cout << x << endl;
                break;
            }
        }
    }
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define optimize()                                                                                 \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);

int main()
{

    optimize();
    int long long n, k, f, x;
    int a;
    cin >> a;
    for (int i = 0; i < a; i++)
    {

        k = 2;
        cin >> n;
        while (1)
        {
            f = pow(2, k) - 1;
            x = n / f;
            if ((x * f) == n)
            {
                cout << x << endl;
                break;
            }
            else
            {
                k++;
            }
        }
    }
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

void solve()
{
    ll n;
    cin >> n;

    ll div = 3, i = 2;
    while ((n % div) != 0)
    {
        div += pow(2, i);
        i++;
    }
    cout << n / div << '\n';
}

int main()
{
#ifdef RS_DEBUG
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif

    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int T;
    cin >> T;

    while (T--)
        solve();

    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin >> t;
    for (int j = 0; j < t; j++)
    {
        int n;
        cin >> n;
        int i = 3, k = 4;
        while (n % i != 0)
        {
            i += k;
            k *= 2;
        }
        cout << n / i << endl;
    }
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vl;
typedef vector<vl> vvl;

#define push push_back
#define all(v) v.begin(), v.end()

void __print(int x)
{
    cerr << x;
}
void __print(long x)
{
    cerr << x;
}
void __print(long long x)
{
    cerr << x;
}
void __print(unsigned x)
{
    cerr << x;
}
void __print(unsigned long x)
{
    cerr << x;
}
void __print(unsigned long long x)
{
    cerr << x;
}
void __print(float x)
{
    cerr << x;
}
void __print(double x)
{
    cerr << x;
}
void __print(long double x)
{
    cerr << x;
}
void __print(char x)
{
    cerr << '\'' << x << '\'';
}
void __print(const char* x)
{
    cerr << '\""' << x << '\""';
}
void __print(const string& x)
{
    cerr << '\""' << x << '\""';
}
void __print(bool x)
{
    cerr << (x ? ""true"" : ""false"");
}

template <typename T, typename V>
void __print(const pair<T, V>& x)
{
    cerr << '{';
    __print(x.first);
    cerr << ',';
    __print(x.second);
    cerr << '}';
}
template <typename T>
void __print(const T& x)
{
    int f = 0;
    cerr << '{';
    for (auto& i : x)
        cerr << (f++ ? "","" : """"), __print(i);
    cerr << ""}"";
}
void _print()
{
    cerr << ""]\n"";
}
template <typename T, typename... V>
void _print(T t, V... v)
{
    __print(t);
    if (sizeof...(v))
        cerr << "", "";
    _print(v...);
}
#ifndef ONLINE_JUDGE
#define debug(x...)                                                                                \
    cerr << ""["" << #x << ""] = ["";                                                                  \
    _print(x)
#else
#define debug(x...)
#endif

// x + 2x + 4x + 8x + .....
// x (1+2+4+8+....)
// x * (2^n - 1)/(2-1) = x * (2^n-1)

void solve(int cc)
{
    long long n;
    cin >> n;
    // x * (2^(k)-1) = n
    for (int k = 2; k < 36; k++)
    {
        long long factor = pow(2, k) - 1;

        if (n % factor == 0)
        {
            long long x = n / factor;
            cout << x << endl;
            return;
        }
    }
    assert(false);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int T;

    cin >> T;

    for (int i = 0; i < T; i++)
    {
        solve(i + 1);
    }

    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>

using namespace std;
// 1 2 4 8
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        long long int n;
        cin >> n;
        long long int sum = 3;
        long long int cur = 4;
        while (n % sum != 0)
        {
            sum += cur;
            cur = cur * 2;
        }
        cout << n / sum << endl;
    }

    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <complex>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <list>
#include <unordered_set>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<long long, long long> p32;
typedef pair<ll, ll> p64;
typedef vector<long long> v32;
typedef vector<ll> v64;
typedef vector<vector<long long>> vv32;
typedef vector<vector<ll>> vv64;
typedef vector<p32> vp32;
typedef vector<p64> vp64;
#define forn(i, n) for (ll i = 0; i < n; i++)
#define forsn(i, s, n) for (ll i = s; i < n; i++)
#define rforn(i, s) for (ll i = s; i >= 0; i--)
#define rforsn(i, s, n) for (ll i = s; i >= n; i--)
#define mp make_pair
#define pb push_back
#define INF 2e18
#define fast_cin()
#define all(x) (x).begin(), (x).end()
#define sz(x) ((ll)(x).size())


void solve()
{
    ll n;
    cin >> n;

    int l = 3;
    int k = 2;
    while (n % l != 0)
    {
        k++;
        l = pow(2, k) - 1;
    }
    cout << n / l << endl;
    return;
}


int main()
{
    fast_cin();
    ll q;
    cin >> q;
    for (ll i = 0; i < q; i++)
    {
        solve();
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int main()
{
    int n;
    int c = 1;
    scanf(""%d"", &n);
    int x[n];
    for (int i = 0; i < n; i++)
    {
        scanf(""%d"", &x[i]);
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = 3; j < x[i] + 1; j += pow(2, c))
        {
            c++;
            if (x[i] % j == 0 || x[i] == j)
            {
                printf(""%d\n"", x[i] / j);
                break;
            }
        }
        c = 1;
    }
    return 0;
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define fast                                                                                       \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define fi(a, b) for (int i = a; i < b; i++)
#define fj(a, b) for (int j = a; j < b; j++)
#define ff first
#define ss second
#define ll long long
#define ld long double
#define ull unsigned long long
#define bp(x) __builtin_popcount(x)
#define pr(x)                                                                                      \
    for (auto it : x)                                                                              \
        cout << it << "" "";                                                                         \
    cout << endl;
#define getMax(x) max_element(x.begin(), x.end())
#define getMin(x) min_element(x.begin(), x.end())
#define end ""\n""
typedef vector<int> vi;
typedef vector<pair<int, int> > vii;
typedef vector<long long> vl;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<pair<ll, ll> > vll;
// int dx[]={1,0,-1,0};
// int dy[]={0,1,0,-1};
// int dx[]={-1,0,1,1,1,0,-1,-1};
// int dy[]={-1,-1,-1,0,1,1,1,0};
map<int, int> mp;
ll gcd(ll a, ll b)
{
    if (a < b)
        swap(a, b);
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

ll lcm(ll a, ll b)
{
    return (a * b) / gcd(a, b);
}

void solve()
{
    int n;
    cin >> n;
    int sum = 3, t = 2;
    while (n % sum != 0)
    {
        t = t * 2;
        sum = sum + t;
    }
    cout << n / sum << endl;
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    fast;
    int t;
    cin >> t;
    while (t--)
        solve();
    return 0;
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    while (t--)
    {
        long long int n;
        cin >> n;
        long long int c = 4;
        long long int k = 3;
        long long int i = 3;
        while (n % k != 0)
        {
            k += c;
            c = pow(2, i);
            i++;
        }
        cout << n / k << endl;
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i, n) for (int i = 0; i < n; i++)

int main()
{
    int t;
    cin >> t;
    rep(i, t)
    {
        int temp;
        int k = 1;
        int total = 4;
        cin >> temp;
        while (1)
        {
            if (temp % (total - 1) == 0)
            {
                cout << temp / (total - 1) << endl;
                break;
            }
            total *= 2;
        }
    }
    return 0;
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

int main()
{

    int t, n;
    cin >> t;
    while (t--)
    {
        cin >> n;
        int p = 4;
        while (n % (p - 1))
        {
            p <<= 1;
        }
        cout << n / (p - 1) << endl;
    }

    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define fo(i, n) for (int i = 0; i < n; i++)
#define fok(i, k, n) for (i = k; i < n; i++)
#define pb push_back
#define FLASH ios_base::sync_with_stdio(false), cin.tie(NULL);
#define float long double
#define fre(input, output)                                                                         \
    freopen(""b_little_bit_of_everything.IN"", ""r"", stdin);                                          \
    freopen(""a_output.txt"", ""w"", stdout);
using namespace std;

void solve()
{
    long long int n;
    cin >> n;
    long long int d = 3, j = 2;
    bool k = true;
    while (k)
    {
        if (n % d == 0)
        {
            cout << n / d << '\n';
            k = false;
        }
        else
        {
            d = d + (pow(2, j));
            j++;
        }
    }
}
int main()
{
    // freopen(""b_little_bit_of_everything.IN"", ""r"", stdin);
    // freopen(""a_output.txt"",""w"", stdout);
    FLASH
    int t;
    cin >> t;
    while (t-- > 0)
    {
        solve();
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#define int long long
using namespace std;

main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    std::vector<int> V;
    int a = 1;
    for (int i = 0; i < 1000; i++)
    {
        V.push_back(a * 2 + 1);
        a = a * 2 + 1;
    }
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        for (int i = 0; i < V.size(); i++)
            if (n % V[i] == 0)
            {
                cout << n / V[i] << '\n';
                break;
            }
    }
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        long long int n, i, x;
        cin >> n;
        x = 1;
        for (i = 2; n > 1;)
        {
            x += i;
            if (n % x == 0)
            {
                cout << (n / x) << endl;
                break;
            }
            i *= 2;
        }
    }
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"// In the name of god let's gooooooooooooooooooooo
#include <bits/stdc++.h>
#define pb(s) push_back(s)
#define ll long long
using namespace std;
// Variables __________________________________________________________
int n;
int q;
// Fuinction __________________________________________________________
void input()
{
    cin >> n;
}
void solve()
{
    for (int i = 3;; i = (i * 2 + 1))
    {
        if (n % i == 0)
        {
            cout << n / i << endl;
            return;
        }
    }
}
// Main _______________________________________________________________
int main()
{
    ios_base::sync_with_stdio(0), cin.tie(), cout.tie();
    cin >> q;
    for (int i = 0; i < q; i++)
    {
        input();
        solve();
    }
    return 0;
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;


int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int k = 2;
        while (true)
        {
            int a = pow(2, k) - 1;
            if (n % a == 0 && n / a > 0)
            {
                cout << n / a << endl;
                break;
            }
            k++;
        }
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

#define ff first
#define ss second
#define int long long
#define pb push_back
#define mp make_pair
#define pii pair<int, int>
#define vi vector<int>
#define mii map<int, int>
#define pqb priority_queue<int>
#define pqs priority_queue<int, vi, greater<int> >
#define setbits(x) __builtin_popcountll(x)
#define zrobits(x) __builtin_ctzll(x)
#define mod 1000000007
#define inf 1e18
#define ps(x, y) fixed << setprecision(y) << x
#define mk(arr, n, type) type* arr = new type[n];
#define w(x)                                                                                       \
    int x;                                                                                         \
    cin >> x;                                                                                      \
    while (x--)
#define FIO                                                                                        \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0)
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;

int32_t main()
{
    FIO;
    w(t)
    {
        int n;
        cin >> n;

        int x;

        for (int k = 2; k <= 35; ++k)
        {
            int den = pow(2, k) - 1;

            if (n % den)
                continue;

            x = n / den;

            break;
        }

        cout << x << '\n';
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
float logn(float a, float b)
{
    return log(a) / log(b);
}
int main()
{
    ll t;
    cin >> t;
    while (t--)
    {
        ll int n;
        cin >> n;
        ll int k = ceil(logn((float)n, (float)2));
        ll int a = 2;
        while (a <= k)
        {
            ll int m = pow(2, a) - 1;
            if (n % m == 0)
            {
                cout << n / m;
                break;
            }
            a++;
        }
        cout << endl;
    }
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define endl ""\n""
#define int long long int
#define ll long long
#define F first
#define S second
#define pb push_back
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(), x.end()
#define mll unordered_map<ll, ll>
#define dec(v) sort(v.rbegin(), v.rend());
#define REP(i, n) for (int i = 0; i < (n); i++)
#define in(v)                                                                                      \
    for (auto& i : v)                                                                              \
        cin >> i;
#define out(v)                                                                                     \
    for (auto i : v)                                                                               \
        cout << i << "" "";
#define nl cout << endl;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<vi> vvi;
typedef vector<pii> vpii;
typedef vector<ll> vll;

#define deb(x) cout << "">"" << #x << '=' << x << endl;
#define setbits(n) __builtin_popcountll(n)
#define done                                                                                       \
    {                                                                                              \
        cout << ""-1"" << endl;                                                                      \
        return;                                                                                    \
    }

#define inf INT_MAX
#define ninf INT_MIN
const ll N = 2e5 + 5;
#define MOD 1000000009


void solve()
{
    int n;
    cin >> n;
    int p;
    for (int k = 2; k < 30; k++)
    {
        p = pow(2, k);
        if (n % (p - 1) == 0)
        {
            cout << (n / (p - 1)) << endl;
            break;
        }
    }
}

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    int t = 1;
    cin >> t;
    while (t--)
        solve();
    cerr << ""Time : "" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << ""ms\n"";
    return 0;
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;
#include <vector>
#include <climits>
#include <map>
#include <bits/stdc++.h>
typedef long long ll;
void solve()
{

    ll n;
    cin >> n;
    ll c = 1;
    ll sum = 1;
    ll ans;
    while (1)
    {
        c = 2 * c;
        sum = sum + c;
        if (n % sum == 0)
        {
            ans = n / sum;
            break;
        }
    }

    cout << ans;
}
int main()
{
    ll t;
    cin >> t;
    for (ll i = 0; i < t; i++)
    {
        solve();
        cout << endl;
    }
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define fr first
#define sc second
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define gg exit(0);
#define ember void
#define FAST                                                                                       \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
typedef long long ll;
typedef long double ld;
typedef double db;
using namespace std;
set<int> s;
vector<int> v;
map<int, int> us;

int main()
{
    FAST int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        for (int i = 2; i < 30; i++)
        {
            int q = (1 << i) - 1;
            if (n % q == 0)
            {
                cout << n / q << endl;
                break;
            }
        }
    }
    gg
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int test_cases;
    cin >> test_cases;
    while (test_cases--)
    {
        long long int wrappers, i, num;
        cin >> wrappers;
        for (i = 2; i < wrappers; i++)
        {
            num = pow(2, i);
            if (wrappers % (num - 1) == 0)
            {
                cout << wrappers / (num - 1) << endl;
                break;
            }
        }
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;


void solve()
{
    string s;
    cin >> s;
    int length = s.length();
    if (length > 10)
        cout << s[0] << s.length() - 2 << s[length - 1] << endl;
    else
        cout << s << endl;
}
/*


int main() {
        string s1, s2;
        cin >> s1 >> s2;
        int l1 = s1.length(), l2 = s2.length();
        for(int x = 0; x<min(l1, l2); x++) {
                int c1 = (s1[x] < 91)?s1[x]+32:s1[x];
                int c2 = (s2[x] < 91)?s2[x]+32:s2[x];
                if(c1 > c2) {
                        cout << 1 << endl;
                        return 0;
                }
                else if(c1 < c2) {
                        cout << -1 << endl;
                        return 0;
                }
        }
        cout << 0 << endl;
}

int main() {
        for(int i = 0; i<5; i++) {
                for(int j = 0; j<5; j++) {
                        int value;
                        cin >> value;
                        if(value) {
                                cout << abs(i - 2) + abs(j - 2) << endl;
                                return 0;
                        }
                }
        }
}
*/
/*
int main() {
        string s;
        cin >> s;
        int n = s.length();
        vector<int> ans;
        for(int x = 0; x<n; x++) {
                if(x % 2 == 0) {
                        ans.push_back(s[x] - 48);
                }

        }
        sort(ans.begin(), ans.end());
        for(int x = 0; x<ans.size()-1; x++)
                cout << ans[x] << ""+"";
        cout << ans[ans.size() - 1] << endl;
}
*/
/*

int main() {
        int n;
        cin >> n;
        string s;
        cin >> s;
        char out = s[0];
        int total = 0;
        for(int x = 1; x<s.length(); x++) {
                if(s[x] == out)
                        total++;
                else
                        out = s[x];
        }
        cout << total << endl;
}
*/

/*
int u[150];

int main() {
        string s;
        cin >> s;
        int total = 0;
        for(char c: s) {
                if(!u[c]) {
                        total++;
                        u[c] = 1;
                }
        }
        if(total % 2)
                cout << ""IGNORE HIM!"" << endl;
        else
                cout << ""CHAT WITH HER!"" << endl;
}
*/
/*
int main() {
        int k, n, w;
        cin >> k >> n >> w;
        cout << max(0, (w) * (w + 1) / 2 * k - n) << endl;
}
*/


bool srt(int a, int b)
{
    return a > b;
}

void ans()
{
    int n;
    cin >> n;
    ll amt = 1, k = 1;
    while (true)
    {
        amt += pow(2.0, k);
        if (!(n % amt))
        {
            cout << n / amt << endl;
            return;
        }
        k++;
    }
}


int main()
{
    int t;
    cin >> t;
    while (t--)
        ans();
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main()
{
    ios::sync_with_stdio(false);
    int T;
    cin >> T;
    while (T--)
    {
        ll n;
        cin >> n;
        for (int i = 2;; i++)
        {
            ll k = (1LL << i) - 1LL;
            if (n % k == 0)
            {
                cout << n / k << ""\n"";
                break;
            }
        }
    }
}
",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
#define fast                                                                                       \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0)

int32_t main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int i = 2;
        int j = 3;
        bool flag = false;
        while (flag == false)
        {
            if (n % j == 0)
            {
                cout << n / j << endl;
                flag = true;
            }
            else
            {
                i *= 2;
                j += i;
            }
        }
    }
    return 0;
}",1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#define ll long long int
using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    cin >> t;
    while (t--)
    {
        ll n;
        cin >> n;
        if (n % 2 == 0)
            cout << n / 2 - 1 << ""\n"";
        else
            cout << n / 2 << ""\n"";
    }
    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
//#define int long long int
#define ld double

#define eb emplace_back
#define pb push_back

#define vi vector<int>
#define vii vector<vi>
#define viii vector<vii>
#define vc vector<char>
#define vcc vector<vc>
#define vb vector<bool>
#define vbb vector<vb>

#define pa pair<int, int>
#define f first
#define s second

#define all(a) a.begin(), a.end()
#define mx(a) *max_element(all(a))
#define mn(a) *min_element(all(a))

using namespace std;
// const int inf=1e15;
// const int mod=998244353;

void solve()
{
    int n;
    cin >> n;
    vi a(n);
    vii edge(200), pref(200, vi(n + 1));
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        edge[a[i] - 1].pb(i);
        pref[a[i] - 1][i + 1]++;
    }
    for (int i = 0; i < 200; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            pref[i][j] += pref[i][j - 1];
            // cout<<pref[i][j]<<"" "";
        }
        // cout<<'\n';
    }
    int ans = 0;
    for (int i = 0; i < 200; i++)
    {
        if (edge[i].size() > 0)
        {
            int low = 0, high = edge[i].size() - 1;
            int cnt = 0;
            while (low <= high)
            {
                if (edge[i][low] == edge[i][high])
                {
                    cnt++;
                    ans = max(ans, cnt);
                }
                else
                {
                    cnt += 2;
                    int maxx = 0;
                    for (int j = 0; j < 200; j++)
                    {
                        int val = pref[j][edge[i][high]] - pref[j][edge[i][low] + 1];
                        maxx = max(maxx, val);
                    }
                    ans = max(ans, maxx + cnt);
                }
                low++;
                high--;
            }
        }
    }
    cout << ans << '\n';
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t, tt;
    cin >> t;
    tt = t;
    while (t--)
    {
        // cout<<""Case #""<<tt-t<<"": "";
        solve();
    }
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int t, n, a[200005];
int main()
{
    scanf(""%d"", &t);
    while (t--)
    {
        scanf(""%d"", &n);
        for (int i = 0; i < n; i++)
            scanf(""%d"", &a[i]);
        vector<vector<int> > cnt(200, vector<int>(n + 1));
        vector<vector<int> > pos(200);
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < 200; j++)
                cnt[j][i + 1] = cnt[j][i];
            ++cnt[a[i] - 1][i + 1];
            pos[a[i] - 1].push_back(i);
        }
        int ans = 0;
        for (int i = 0; i < 200; i++)
        {
            ans = max(ans, (int)pos[i].size());
            for (int j = 0; j < (int)(pos[i].size()) / 2; j++)
            {
                int l = pos[i][j] + 1, r = pos[i][(int)pos[i].size() - j - 1] - 1;
                for (int el = 0; el < 200; el++)
                {
                    int sum = cnt[el][r + 1] - cnt[el][l];
                    ans = max(ans, (j + 1) * 2 + sum);
                }
            }
        }
        printf(""%d\n"", ans);
    }
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while (t)
    {
        int n, maxi = 0;
        cin >> n;
        unordered_map<int, int> umap;
        set<int> s;
        for (int i = 0; i < n; i++)
        {
            int b;
            cin >> b;
            s.insert(b);
            umap[b]++;
            maxi = max(maxi, umap[b]);
        }
        if (s.size() - 1 >= maxi)
            cout << maxi << endl;
        else
        {
            int a = s.size();
            int b = min(a, maxi - 1);
            cout << b << endl;
        }
        t--;
    }
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 2005;
int T, n, ans, a[N], sum[N][30];
int main()
{
    scanf(""%d"", &T);
    while (T--)
    {
        ans = 0;
        scanf(""%d"", &n);
        for (int i = 1; i <= n; i++)
            scanf(""%d"", &a[i]);
        for (int i = 1; i <= 26; i++)
            sum[0][i] = 0;
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= 26; j++)
            {
                if (a[i] == j)
                    sum[i][j] = sum[i - 1][j] + 1;
                else
                    sum[i][j] = sum[i - 1][j];
            }
        }
        for (int i = 1; i <= n; i++)
        {
            for (int j = i; j <= n; j++)
            {
                int res1 = 0, res2 = 0;
                for (int k = 1; k <= 26; k++)
                {
                    res1 = max(res1, min(sum[i - 1][k], sum[n][k] - sum[j][k]));
                    res2 = max(res2, sum[j][k] - sum[i - 1][k]);
                }
                ans = max(ans, res1 * 2 + res2);
            }
        }
        printf(""%d\n"", ans);
    }
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"/**
 *  In The Name Of God
 *  author : Behradm
 *  Idvwhu wkdq idvw, Txlfnhu wkdq txlfn, L dp Oljkwqlqj, Vshhg, L dp Vshhg. :D :D
**/
#include ""bits/stdc++.h""

using namespace std;

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    int tt;
    cin >> tt;
    while (tt--)
    {
        int n;
        cin >> n;
        cout << n / 2 + n % 2 - 1 << '\n';
    }
    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long
#define forw(to, n) for (int i = to; i < n; i++)
#define back(n, down) for (int i = n - 1; i >= down; i--)
#define smallest(vec) *min_element(vec.begin(), vec.end())
#define biggest(vec) *max_element(vec.begin(), vec.end())
#define position(vec, element) find(vec.begin(), vec.end(), element) - vec.begin()
#define count(vec, element) count(vec.begin(), vec.end(), element)

void call()
{
    int n, a, b;
    cin >> n >> a >> b;

    string str = """";
    forw(0, b) str += 'a' + i;

    int j = 0;
    while (str.length() != a)
    {
        str += str[j % b];
        j++;
    }

    j = 0;
    while (str.length() != n)
    {
        str += str[j % a];
        j++;
    }

    cout << str << endl;
}

main()
{
    int T;
    cin >> T;

    while (T--)
    {
        call();
    }
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define endl ""\n""

int main()
{
    long long n;
    cin >> n;
    while (n--)
    {
        long long a;
        cin >> a;
        long long m = a / 2;
        if (a % 2 == 0)
        {
            m = m - 1;
        }
        else
        {
            m = a / 2;
        }
        cout << m << endl;
    }
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

#define int long long
#define double long double
#define ull unsigned long long
#define pii pair<int, int>
#define tiii tuple<int, int, int>
#define pll pair<long long, long long>
#define pdd pair<double, double>
#define s second
#define f first
#define pb push_back
#define oo 1000000000000000000ll


void solve()
{
    int n;
    cin >> n;
    vector<int> v(n), cnt(n + 1);
    for (int i = 0; i < n; ++i)
    {
        cin >> v[i];
        cnt[v[i]]++;
    }
    int mx_cnt = 0, distinct = 0;
    for (int i = 1; i <= n; ++i)
    {
        mx_cnt = max(mx_cnt, cnt[i]);
        if (cnt[i] > 0)
            distinct++;
    }

    if (mx_cnt <= distinct)
        distinct--;

    int ans = min({ n / 2, mx_cnt, distinct });
    cout << ans << ""\n"";
}


signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }


    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <map>
using namespace std;

bool check(map<int, int>& mp, int mid)
{
    int distinct = mp.size();
    if (distinct < mid)
    {
        return false;
    }
    int mx = 0;
    for (pair<int, int> p : mp)
    {
        mx = max(mx, p.second);
    }
    if (distinct == mid)
    {
        if (mx - 1 >= mid)
            return true;
        return false;
    }
    else
    {
        if (mx >= mid)
            return true;
    }
    return false;
}

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif

    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        map<int, int> mp;
        for (int i = 0; i < n; i++)
        {
            int x;
            cin >> x;
            mp[x]++;
        }
        int low = 1;
        int high = n / 2;
        int ans = 0;
        while (low <= high)
        {
            int mid = (low + high) / 2;
            if (check(mp, mid))
            {
                low = mid + 1;
                ans = max(ans, mid);
            }
            else
            {
                high = mid - 1;
            }
        }
        cout << ans << endl;
    }

    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb push_back
#define M 1e9 + 7
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        ll n, c = 0;
        cin >> n;
        ll a[n];
        map<ll, ll> m;
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
            m[a[i]]++;
        }
        for (auto it = m.begin(); it != m.end(); it++)
        {
            c = max(c, m[it->first]);
        }

        ll x = m.size() - 1;
        // cout << x << "" "" << c;
        if (c > x)
        {
            if (c > x + 1)
                cout << min(x + 1, n / 2);
            else
                cout << min(x, n / 2);
        }
        else if (c == x)
            cout << x;
        else
            cout << min(c, n / 2);
        cout << endl;
    }

    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <stdio.h>
int main()
{
    long long t, n;
    scanf(""%lld"", &t);
    for (int i = 1; i <= t; ++i)
    {
        scanf(""%lld"", &n);
        printf(""%lld\n"", (n - 1) / 2);
    }
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define rep(i, n) for (int i = 1; i <= (n); ++i)
#define debug(a) cout << #a << "" = "" << a << endl;
using namespace std;
typedef long long ll;
const int N = 2E5 + 10, M = 210;
int a[N];
vector<int> pos[M];
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        rep(i, M - 5) pos[i].clear();

        int n;
        scanf(""%d"", &n);
        rep(i, n) scanf(""%d"", &a[i]), pos[a[i]].push_back(i);

        int res = 0;
        rep(i, M - 5) res = max(res, (int)pos[i].size());

        rep(i, M - 5)
        {
            rep(j, pos[i].size() / 2)
            {
                int l = j - 1, r = pos[i].size() - l - 1;

                int L = pos[i][l], R = pos[i][r];
                rep(k, M - 5)
                {
                    auto indexl = upper_bound(pos[k].begin(), pos[k].end(), L);
                    auto indexr = --lower_bound(pos[k].begin(), pos[k].end(), R);
                    if (indexl > indexr)
                        continue;

                    int num = indexr - indexl + 1;
                    res = max(res, j * 2 + num);
                }
            }
        }

        printf(""%d\n"", res);
    }
    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define mst(x, a) memset(x, a, sizeof(x))
#define rep(x, l, u) for (long long x = l; x < u; x++)
#define rrep(x, l, u) for (long long x = l; x >= u; x--)
using namespace std;
const int N = 2020, M = 1e6 + 10;
int cnt[N][30];
void solve()
{
    mst(cnt, 0);
    int n;
    cin >> n;
    rep(i, 1, n + 1)
    {
        int x;
        cin >> x;
        rep(j, 1, 27) cnt[i][j] = cnt[i - 1][j];
        cnt[i][x]++;
    }
    int ans = 0;
    rep(i, 1, 27) ans = max(ans, cnt[n][i]);
    rep(i, 1, n + 1)
    {
        rep(j, i + 1, n + 1)
        {
            int lenlr = -1, lenmd = -1;
            rep(k, 1, 27)
            {
                int l = cnt[i][k];
                int r = cnt[n][k] - cnt[j - 1][k];
                lenlr = max(lenlr, min(l, r));
            }
            rep(k, 1, 27)
            {
                int m = cnt[j - 1][k] - cnt[i][k];
                lenmd = max(lenmd, m);
            }
            ans = max(ans, lenlr * 2 + lenmd);
        }
    }
    cout << ans << endl;
}
int main()
{
    int t;
    cin >> t;
    while (t--)
        solve();
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#pragma GCC optimize(""Ofast"")
#include <bits/stdc++.h>
#include <iostream>
#include <cmath>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;


#define mod 1000000007
#define one(x) __builtin_popcountll(x)
#define zero(x) __builtin_ctzll(x)
#define pp pair<ll, ll>
#define all(x) (x).begin(), (x).end()
#define removeDuplicates(a) a.resize(unique(all(a)) - a.begin())
template <class T>
using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long int ll;

const int mxn = 2e6 + 10;

ll b[mxn];
ll a[mxn];
array<ll, 2> arr[mxn];

ll freq[202020];
void subMain()
{
    ll n;
    cin >> n;
    for (ll i = 1; i <= n; i++)
    {
        freq[i] = 0;
    }
    for (ll i = 1; i <= n; i++)
    {
        cin >> a[i];
        freq[a[i]]++;
    }
    ll cnt = 0;
    for (ll i = 1; i <= n; i++)
    {
        if (freq[i])
            cnt++;
    }
    ll ans = 0;
    for (ll i = 1; i <= n; i++)
    {
        ans = max(ans, min(freq[i], cnt - 1));
        ans = max(ans, min(freq[i] - 1, cnt));
    }
    cout << ans << ""\n"";
}


int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);


    ll t, i = 0;
    cin >> t;
    while (t--)
    {
        // cout << ""Case #"" << i+1 << "": "";
        subMain();
        // i++;
    }
    // subMain();
    cerr << ""Time : "" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << ""ms\n"";
    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    long long n, t;
    cin >> n;
    for (int i = 0; i < n; ++i)
    {
        cin >> t;
        if (t % 2)
            ++t;
        cout << t / 2 - 1 << endl;
    }
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int test, num;
    cin >> test;
    while (test--)
    {
        cin >> num;
        if (num % 2 == 0)
        {
            cout << (num / 2) - 1 << endl;
        }
        else
        {
            cout << num / 2 << endl;
        }
    }
    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;
#include <vector>
#include <climits>
#include <map>
#include <bits/stdc++.h>
typedef long long ll;
void solve()
{
    ll a, n, b;
    cin >> n >> a >> b;
    string s = """";
    char d = 'a';
    for (ll i = 0; i < n; i++)
    {
        s = s + d;
        d++;
        if ((d - 'a') == b)
        {
            d = 'a';
        }
    }
    cout << s;
}
int main()
{
    ll t;
    cin >> t;
    for (ll i = 0; i < t; i++)
    {
        solve();
        cout << endl;
    }
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
#define pb push_back


int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        ll n;
        cin >> n;
        if (n == 1)
        {
            cout << 0 << endl;
        }
        if (n == 2)
        {
            cout << 0 << endl;
        }
        if (n > 2)
        {
            if (n % 2 == 0)
            {
                cout << (n / 2) - 1 << endl;
            }
            else
            {
                cout << (n / 2) << endl;
            }
        }
    }
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin >> t;
    int n, a, b;
    while (t--)
    {
        cin >> n >> a >> b;
        for (int i = 0; i < n;)
        {
            for (int j = 0; j < b && i < n; j++)
                cout << char('a' + j), i++;
        }
        cout << endl;
    }
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define fore(i, l, r)                                                                              \
    for (auto i = (l) - ((l) > (r)); i != (r) - ((l) > (r)); i += 1 - 2 * ((l) > (r)))
#define ceil(n, k) (((n) + ((k)-1)) / (k))
#define all(a) begin(a), end(a)
#define sz(a) int(a.size())
#define eb emplace_back
#define pb push_back
#define f first
#define s second

#ifdef LOCAL
#include ""../debug.h""
#else
#define debug(...)
#endif

using lli = long long;
using ld = long double;
using ii = pair<int, int>;
using vi = vector<int>;
using vii = vector<ii>;

int n;

template <class F>
int upperBound(int lo, int hi, F ok)
{
    while (lo + 1 < hi)
    {
        int mid = (lo + hi) >> 1;
        if (ok(mid))
            lo = mid;
        else
            hi = mid;
    }

    return ok(hi) ? hi : ok(lo) ? lo : -1;
}

const int L = 200;
const int N = 2e5;
int hi[L][N], a[N];

void testCase()
{
    cin >> n;

    fore(i, 0, n)
    {
        cin >> a[i];
        a[i]--;
    }

    int best = 0;

    fore(i, n, 0) fore(x, 0, L) hi[x][i] = (i == n - 1 ? 0 : hi[x][i + 1]) + (a[i] == x);

    int lo[L]{};
    fore(l, 0, n)
    {
        int left = ++lo[a[l]];

        int r = upperBound(l, n - 1, [&](int x)
            {
                return hi[a[l]][x] >= left;
            });

        if (r == -1 || r < l)
            continue;

        map<int, int> fr;
        int mx = 0;

        if (l < r)
            fore(x, 0, L) mx = max(mx, (l == n - 1 ? 0 : hi[x][l + 1]) - hi[x][r]);

        best = max(best, 2 * left + mx - (l == r));
    }

    cout << best << '\n';
}

int main()
{
    cin.tie(0)->sync_with_stdio(0), cout.tie(0);

    int tc;
    cin >> tc;
    while (tc--)
        testCase();

    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <algorithm>
#include <string>
#include <map>

using namespace std;
typedef long long int ll;


int main()
{

    int t;
    cin >> t;
    string str;
    scanf(""\n"");
    while (t--)
    {
        for (int i = 0; i < 9; i++)
        {
            getline(cin, str);
            for (int j = 0; j < 9; j++)
            {
                if (str[j] == '1')
                {
                    cout << 2;
                }
                else
                {
                    cout << str[j];
                }
            }
            cout << ""\n"";
            scanf(""\n"");
        }
    }


    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include ""bits/stdc++.h""
using namespace std;
#define ll long long int
#define rep(i, a, b) for (ll i = a; i < b; ++i)
#define BOOST                                                                                      \
    std::ios_base::sync_with_stdio(false);                                                         \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define pb push_back
#define all(v) v.begin(), v.end()
#define sl(a) a.size()
void solve()
{
    int n;
    cin >> n;
    vector<int> arr(n + 1);
    for (int i = 1; i <= n; ++i)
        cin >> arr[i];
    vector<vector<int>> pref(30, vector<int>(n + 1, 0));
    int ans = 0;
    for (int i = 1; i <= n; ++i)
    {
        for (int j = 1; j <= 26; ++j)
            pref[j][i] += pref[j][i - 1];
        pref[arr[i]][i]++;
    }
    for (int i = 1; i <= 26; ++i)
        ans = max(ans, pref[i][n]);
    for (int l = 1; l <= n; ++l)
    {
        for (int r = l; r <= n; ++r)
        {
            int start = 0, mid = 0;
            for (int k = 1; k <= 26; ++k)
            {
                mid = max(mid, pref[k][r] - pref[k][l - 1]);
                start = max(start, min(pref[k][l - 1], pref[k][n] - pref[k][r]) * 2);
            }
            ans = max(ans, start + mid);
        }
    }
    cout << ans << ""\n"";
}
int32_t main()
{
    BOOST
    int T = 1;
    cin >> T;
    while (T--)
        solve();
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t, i;
    cin >> t;
    while (t--)
    {
        long int n;
        cin >> n;
        if (n % 2 == 0)
        {
            cout << n / 2 - 1 << '\n';
        }
        else
        {
            cout << n / 2 << '\n';
        }
    }
    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t, n;
    cin >> t;
    while (t--)
    {
        cin >> n;
        int m, x, y, i, j, max = 0, a[n + 2];
        set<int> s;
        unordered_map<int, int> mp;
        mp.max_load_factor(0.25);
        mp.reserve(1024);
        for (int i = 0; i < n; i++)
        {
            cin >> a[i];
            s.insert(a[i]);
            mp[a[i]]++;
            if (mp[a[i]] > max)
            {
                max = mp[a[i]];
            }
        }
        if (max == s.size())
            cout << max - 1 << endl;
        else
        {
            if (max < s.size())
                cout << max << endl;
            else
                cout << s.size() << endl;
        }
    }
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin >> t;

    while (t--)
    {
        int n, a, b;
        cin >> n >> a >> b;

        int count = 0, i, ch = 97;
        string s = """";

        for (i = 0; i < n; ++i)
        {
            if (count == b)
            {
                ch = 97;
                count = 0;
            }
            s = s + (char)(ch);
            ch = ch + 1;
            count++;
        }

        cout << s << ""\n"";
    }
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
// #include <sstream>
// #include <sys/types.h>
// #include <sys/stat.h>
#define reset(a) memset(a, 0, sizeof(a))
#define ll int
#define ld long double
#define endl '\n'
#define AutoAC int main()
#define OO 1000000000000000000
#define F first
#define S second
#define pii pair<ll, ll>
#define pb push_back
#define nmax 200005
#define HUNGIT ""MIN""
#define MOD 1000000007


using namespace std;
mt19937 rd(chrono::steady_clock::now().time_since_epoch().count());
const int ntest = 50;

const ll M1 = 100000;
const ll M2 = 1000000000000000;


ll Max, n, a[nmax], f[nmax][201], pos[201];

ll Rand(ll l, ll r)
{
    return l + (1ll * (rd() % MOD) * (rd() % MOD)) % (r - l + 1);
}

void Gen(ll t)
{
    if (t == 0)
    {
        n = 2000;
        for (int i = 1; i <= n; i++)
            a[i] = Rand(1, 26);
    }
    else
    {
        n = 200000;
        for (int i = 1; i <= n; i++)
            a[i] = Rand(1, 200);
    }
}

void Reset()
{
    Max = 1;
    for (int i = 1; i <= 200; i++)
        pos[i] = n + 1;
}

void Solve()
{
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    Reset();
    if (n == 1 || (n == 2 && a[1] != a[2]))
    {
        cout << 1 << endl;
        return;
    }
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= 200; j++)
            f[i][j] = f[i - 1][j];
        f[i][a[i]]++;
    }
    a[n + 1] = 0;
    for (int i = 1; i <= n; i++)
    {
        while (a[pos[a[i]]] != a[i])
            pos[a[i]]--;
        int j = pos[a[i]];
        if (i >= j)
            continue;
        ll m = f[i][a[i]];
        Max = max(Max, 2 * m);
        if (j >= i + 2)
        {
            for (int k = 1; k <= 200; k++)
                Max = max(Max, 2 * m + f[j - 1][k] - f[i][k]);
        }
        pos[a[i]]--;
    }
    cout << Max << endl;
}

int main()
{
    ll t;
    cin >> t;
    while (t--)
        Solve();

    // const std::string baseFolderName = ""Test"";
    // for (int i = 1; i <= ntest; i++)
    // {
    // 	std::ostringstream folderName;
    // 	if(i < 10) folderName << baseFolderName << ""0"" << i;
    // 	else folderName << baseFolderName << i;
    // 	mkdir(folderName.str().c_str());
    // 	string m = ""C:\\Users\\Admin\\OneDrive\\Desktop\\tmp\\Test\\MIN\\"" + folderName.str() +
    // ""\\MIN.inp"";
    // 	freopen(m.c_str(), ""w"", stdout);

    // 	if(i <= ntest / 2)
    // 		Gen(0);
    // 	else Gen(1);

    // 	m = ""C:\\Users\\Admin\\OneDrive\\Desktop\\tmp\\Test\\MIN\\"" + folderName.str() +
    // ""\\MIN.out"";
    // 	freopen(m.c_str(), ""w"", stdout);
    // 	Solve();
    // }
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <string>
using namespace std;
int conv(char a)
{
    if (a == '0')
    {
        return 0;
    }
    else if (a == '1')
    {
        return 1;
    }

    else if (a == '2')
    {
        return 2;
    }
    else if (a == '2')
    {
        return 2;
    }
    else if (a == '3')
    {
        return 3;
    }
    else if (a == '4')
    {
        return 4;
    }
    else if (a == '5')
    {
        return 5;
    }
    else if (a == '6')
    {
        return 6;
    }
    else if (a == '7')
    {
        return 7;
    }
    else if (a == '8')
    {
        return 8;
    }
    else
    {
        return 9;
    }
}
int main()
{
    int n;
    cin >> n;
    vector<vector<vector<int>>> idk;
    for (int k = 0; k < n; k++)
    {
        vector<vector<int>> in;
        for (int i = 0; i < 9; i++)
        {

            string temp2;
            cin >> temp2;
            vector<int> temp;
            for (int j = 0; j < 9; j++)
            {

                temp.push_back(conv(temp2[j]));
            }

            in.push_back(temp);
        }
        vector<int> a{ 0, 0, 1, 3, 2, 6, 3, 1, 4, 4, 5, 7, 6, 2, 7, 5, 8, 8 };

        for (int i = 0; i < 17; i = i + 2)
        {
            if (in[a[i]][a[i + 1]] != 9)
            {
                in[a[i]][a[i + 1]] = in[a[i]][a[i + 1]] + 1;
            }
            else
            {
                in[a[i]][a[i + 1]] = 8;
            }
        }
        idk.push_back(in);
    }
    for (int k = 0; k < n; k++)
    {
        for (int i = 0; i < 9; i++)
        {
            for (int j = 0; j < 9; j++)
            {
                cout << idk[k][i][j];
            }
            cout << ""\n"";
        }
    }

    //    cout << ""Hello world!"" << endl;
    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;
int main()
{
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        unsigned long long a;
        cin >> a;
        if (a % 2)
        {
            a++;
        }
        cout << (a / 2) - 1 << endl;
    }
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    ll t;
    cin >> t;
    while (t--)
    {
        ll n;
        cin >> n;
        ll ar[n];
        set<ll> s;
        for (int i = 0; i < n; i++)
        {
            cin >> ar[i];
            s.insert(ar[i]);
        }
        ll c = 1, ele = -1, ma = 0;
        sort(ar, ar + n);
        for (int i = 0; i < n - 1; i++)
        {
            if (ar[i] == ar[i + 1])
            {
                c++;
            }
            else
            {
                if (ma < c)
                {
                    ma = c;
                    ele = ar[i];
                }
                c = 1;
            }
        }
        if (ma < c)
        {
            ma = c;
            ele = ar[n - 1];
        }
        ll p = n - ma;
        ll q = s.size();
        ll ans = 0;
        //  cout<<ma<<"" ma q ""<<q<<endl;
        if (q >= ma)
        {
            if (q == ma)
                ans = ma - 1;
            else
                ans = ma;
        }
        else
        {
            ans = q;
        }

        cout << ans << endl;
    }

    return 0;
}
",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
using namespace std;

string makeStr(int n, int a, int b)
{
    string res, substr;
    int counter = 96;
    for (int i = 0; i < b; i++)
    {
        counter++;
        substr += char(counter);
    }
    for (int i = b; i < a; i++)
    {
        substr += char(counter);
    }
    res += substr;
    for (int i = a; i < n; i++)
    {
        res.push_back(substr[i % a]);
    }
    return res;
}

int main()
{
    int n, a, b, t;
    string s;
    cin >> t;
    for (int i = 0; i < t; i++)
    {
        cin >> n >> a >> b;
        string res = makeStr(n, a, b);
        cout << res << endl;
    }

    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
using ll = long long;


int main()
{
    ll n, a;
    cin >> n;
    while (n--)
    {
        cin >> a;
        if (a == 1 || a == 2)
        {
            cout << ""0"" << endl;
        }
        else if (a % 2 == 0)
        {
            cout << a / 2 - 1 << endl;
        }
        else
        {
            cout << a / 2 << endl;
        }
    }
    return 0;
}",1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <string>
#include <sstream>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#include <complex>

using namespace std;

//#pragma GCC optimize(""Ofast"")
//#pragma GCC optimization(""unroll-loops, no-stack-protector"")
//#pragma GCC target(""avx,avx2,fma"")

long long mul_inv(long long a, long long b)
{
    long long b0 = b, t, q;
    long long x0 = 0, x1 = 1;
    if (b == 1)
        return 1;
    while (a > 1)
    {
        q = a / b;
        t = b, b = a % b, a = t;
        t = x0, x0 = x1 - q * x0, x1 = t;
    }
    if (x1 < 0)
        x1 += b0;
    return x1;
}

long long division(long long a, long long b, long long p)
{ // (a / b) mod p = ((a mod p) * (b^(-1) mod p)) mod p
    long long ans, inv;
    inv = mul_inv(b, p);
    ans = ((a % p) * inv) % p;
    return ans;
}


int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    long long n, i, j, k, ans, x1, x2, s, MOD = 998244353;
    cin >> n;
    vector<long long> p(n + 1), pp(n + 1);
    for (i = 1; i <= n; i++)
    {
        cin >> p[i];
        pp[i] = division(p[i], 100, MOD);
    }

    s = 1;
    x1 = 1;
    for (i = 1; i <= n - 1; i++)
    {
        s = (s * pp[i]) % MOD;
        x1 = (x1 + s) % MOD;
    }

    x2 = 1;
    for (i = 1; i <= n; i++)
        x2 = (x2 * pp[i]) % MOD;

    ans = division(x1, x2, MOD);
    cout << ans << ""\n"";


    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define print(a)                                                                                   \
    for (auto x : a)                                                                               \
        cout << x << "" "";                                                                          \
    cout << endl
#define print_upto(a, n)                                                                           \
    for (ll i = 1; i <= n; i++)                                                                    \
        cout << a[i] << "" "";                                                                       \
    cout << endl
#define take(a, n)                                                                                 \
    for (ll i = 1; i <= n; i++)                                                                    \
        cin >> a[i];

#define watch(x) cout << (#x) << "" is "" << (x) << ""\n""
#define watch2(x, y) cout << (#x) << "" is "" << (x) << "" and "" << (#y) << "" is "" << (y) << ""\n""
#define watch3(x, y, z)                                                                            \
    cout << (#x) << "" is "" << (x) << "" and "" << (#y) << "" is "" << (y) << "" and "" << (#z) << "" is "" \
         << (z) << ""\n""

#define ff first
#define ss second
#define null NULL
#define all(c) (c).begin(), (c).end()
#define nl ""\n""

#define ld long double
#define eb emplace_back
#define pb push_back
#define pf push_front
#define MOD 998244353
#define inf 1e17
// cout << fixed << setprecision(9) << ans << nl;

typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef pair<ll, ll> pll;
typedef map<ll, ll> mll;

const ll N = 200009;

// Mod Operations
ll fast_mod_exp(ll a, ll b, ll m = MOD)
{
    ll res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = (res * a) % m;

        a = (a * a) % m;
        b = b >> 1;
    }

    return res;
}

ll mod_inverse(ll a, ll m = MOD)
{
    // m is prime
    return fast_mod_exp(a, m - 2, m);
}
ll add(ll x, ll y, ll m = MOD)
{
    ll res = x + y;
    return (res >= m ? res - m : res);
}
ll mul(ll x, ll y, ll m = MOD)
{
    ll res = x * y;
    return (res >= m ? res % m : res);
}
ll sub(ll x, ll y, ll m = MOD)
{
    ll res = x - y;
    return (res < 0 ? res + m : res);
}
ll divide(ll x, ll y, ll m = MOD)
{
    return mul(x, mod_inverse(y, m));
}

void solve()
{
    ll n;
    cin >> n;

    ll a[n + 6];
    for (ll i = 1; i <= n; i++)
    {
        cin >> a[i];
    }

    ll p[n + 7];
    p[0] = 1;
    for (ll i = 1; i <= n; i++)
    {
        ll val = divide(a[i], 100);
        p[i] = mul(p[i - 1], val);
    }

    ll num = 0;
    for (ll i = 0; i < n; i++)
    {
        num = add(num, p[i]);
    }

    ll ans = divide(num, p[n]);
    cout << ans << nl;
}

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    ll t = 1;
    // cin >> t;

    while (t--)
    {
        solve();
    }

    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int P = 998244353;
int n, k, ans;
int inv(int x)
{
    int res = 1, y = P - 2;
    for (; y; y >>= 1, x = 1ll * x * x % P)
        if (y & 1)
            res = 1ll * res * x % P;
    return res;
}
int main()
{
    scanf(""%d"", &n);
    for (int i = 1, x; i <= n; i++)
    {
        scanf(""%d"", &x);
        ans = 100ll * (ans + 1) % P * inv(x) % P;
    }
    printf(""%d\n"", ans);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"//#pragma GCC optimize(2)
#include <bits/stdc++.h>

#define IOS                                                                                        \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(nullptr)
#define all(x) x.begin(), x.end()
#define pb push_back
#define eb emplace_back
#define mkp make_pair
#define lc(x) ((x) << 1)
#define rc(x) (((x) << 1) | 1)


using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double ld;

const ll LINF = 1e18;
const ll MOD = 998244353;
const int INF = 0x3f3f3f3f;
const int MAXM = 200050;
const int MAXN = 400050;
// 35000
ll mpow(ll a, ll n)
{
    ll ans = 1;
    while (n)
    {
        if (n & 1)
        {
            ans *= a;
            ans %= MOD;
        }
        a *= a;
        a %= MOD;
        n >>= 1;
    }
    return ans;
}
void mainwork(int T)
{
    int n;
    scanf(""%d"", &n);
    ll ans = 0, tmp;
    for (int i = 1; i <= n; i++)
    {
        scanf(""%lld"", &tmp);
        ans = (ans + 1) * 100ll % MOD * mpow(tmp, MOD - 2);
        ans %= MOD;
    }
    printf(""%lld\n"", ans);
}
signed main()
{
// IOS;
#ifndef ONLINE_JUDGE
// freopen(""./in.txt"",""r"",stdin);
// freopen(""out.txt"",""w"",stdout);
#endif
    int t = 1;
    // scanf(""%d"",&t);
    // prework();
    for (int i = 1; i <= t; i++)
    {
        mainwork(i);
    }
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;
const ll mo = 998244353;
const int e = 2e5 + 100;
int n;
ll p[e], ni100, t[e];
ll ksm(ll a, ll b)
{
    ll ret = 1ll;
    while (b != 1)
    {
        if (b & 1)
            ret *= a, ret %= mo;
        a = a * a;
        a %= mo;
        b /= 2;
    }
    return (ret * a) % mo;
}
int main()
{
    cin >> n;
    ni100 = ksm(100ll, mo - 2);
    // 	cout<<ni100<<""\n"";
    for (int i = 1; i <= n; i++)
    {
        scanf(""%d"", &p[i]);
        p[i] = (p[i] * ni100) % mo;
    }
    for (int i = 2; i <= n + 1; i++)
    {
        t[i] = (t[i - 1] + 1) * ksm(p[i - 1], mo - 2);
        t[i] %= mo;
    }
    cout << t[n + 1];
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#define ll long long
#define I inline

using namespace std;

I void chkmax(ll& x, ll y)
{
    x = x > y ? x : y;
}

I ll read()
{
    char c = getchar();
    ll ans = 0, f = 1;
    while (c < '0' || c > '9')
        f = (c = '-' ? -1 : 1), c = getchar();
    while (c >= '0' && c <= '9')
        (ans *= 10) += c - '0', c = getchar();
    return ans * f;
}

const ll maxn = 5e5 + 5, mod = 998244353;

ll ksm(ll base, ll k)
{
    ll ans = 1 % mod;
    for (; k; k >>= 1)
    {
        if (k & 1)
            ans *= base, ans %= mod;
        base *= base, base %= mod;
    }
    return ans;
}

ll n, m;
ll fm[105];

void init()
{
    for (ll i = 1; i <= 100; i++)
        fm[i] = ksm(i, mod - 2);
}

int main()
{
    init();
    n = read();
    ll f = 0;
    for (ll i = 1; i <= n; i++)
    {
        f = 100 * fm[read()] % mod * (f + 1) % mod;
    }
    printf(""%lld"", f);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <algorithm>

#define lc (p << 1)
#define rc (p << 1 | 1)

using namespace std;


const int N = 2e5 + 15, Mod = 998244353;
typedef long long ll;
ll p[N], inv100, A, B, mul[N];
int n;

inline ll Pow(ll x, ll y)
{
    ll res = 1;
    for (; y; y >>= 1, x = x * x % Mod)
        if (y & 1)
            res = res * x % Mod;
    return res;
}


signed main()
{
    scanf(""%d"", &n);
    inv100 = Pow(100, Mod - 2);
    mul[0] = 1;
    for (int i = 1; i <= n; ++i)
    {
        scanf(""%lld"", &p[i]);
        p[i] = p[i] * inv100 % Mod;
        mul[i] = mul[i - 1] * p[i] % Mod;
    }
    for (int i = 1; i <= n; ++i)
        A = (A + mul[i - 1] * (Mod - p[i] + 1) % Mod * i % Mod) % Mod;
    for (int i = 1; i <= n; ++i)
        B = (B + mul[i - 1] * (Mod - p[i] + 1) % Mod) % Mod;
    printf(""%lld\n"", (mul[n] * n + A) % Mod * Pow(Mod - B + 1, Mod - 2) % Mod);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int MAXN = 2e5 + 10, P = 998244353;
int n, p[MAXN];
LL f[MAXN];

int read()
{
    int sum = 0, fh = 1;
    char ch = getchar();
    while (ch < '0' || ch > '9')
    {
        if (ch == '-')
            fh = -1;
        ch = getchar();
    }
    while (ch >= '0' && ch <= '9')
    {
        sum = (sum << 3) + (sum << 1) + (ch ^ 48);
        ch = getchar();
    }
    return sum * fh;
}

LL ksm(LL a, LL b)
{
    LL ans = 1 % P;
    for (; b; b >>= 1)
    {
        if (b & 1)
            ans = ans * a % P;
        a = a * a % P;
    }
    return ans;
}

int main()
{
    n = read();
    for (int i = 1; i <= n; ++i)
        p[i] = read();
    for (int i = 1; i <= n; ++i)
        f[i] = 100ll * (f[i - 1] + 1) % P * ksm(p[i], P - 2) % P;
    printf(""%lld\n"", f[n]);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*
    dp[i] ihappy
    dp[n + 1] = -1;
    for(int i = 1; i <= n; i++)
        dp[i] = (pi/100) * (1 + dp[i + 1]) + (1 - pi/100) * (1 + dp[1]);
*/
#include <bits/stdc++.h>
#define md(x, y) ((x + y) >> 1)
#define ls(x) (x << 1)
#define rs(x) (x << 1 | 1)
using namespace std;
typedef long long ll;
typedef pair<ll, ll> P;
const double PI = acos(-1.0);
const double eps = 1e-6;
const int INF = 0x3f3f3f3f;
const int MAXN = 2e5 + 10;
const int MOD = 998244353;
ll INV;
ll n, p[MAXN];
P fac[MAXN];
ll qpow(ll x, ll k)
{
    ll ret = 1;
    while (k)
    {
        if (k & 1)
            ret = ret * x % MOD;
        k >>= 1;
        x = x * x % MOD;
    }
    return ret;
}
ll Div(ll a, ll b)
{
    return a * qpow(b, MOD - 2) % MOD;
}

int main()
{
    cin >> n;
    INV = qpow(100, MOD - 2);
    for (int i = 1; i <= n; i++)
        cin >> p[i];
    fac[n + 1] = { -1, 0 };
    for (int i = n; i >= 1; i--)
    {
        ll a = fac[i + 1].first;
        ll b = fac[i + 1].second;
        ll x = ((1 + p[i] * INV % MOD * a % MOD) % MOD + MOD) % MOD;
        ll y = ((100 - p[i]) * INV % MOD + p[i] * INV % MOD * b % MOD) % MOD;
        fac[i] = { x, y };
    }
    ll x = ((1 - fac[1].second) % MOD + MOD) % MOD;
    ll y = fac[1].first;
    cout << Div(y, x) + 1 << endl;
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
using namespace std::chrono;
const int mod = 998244353;
const int mex = 100005;
#define ll long long
#define test                                                                                       \
    int t;                                                                                         \
    cin >> t;                                                                                      \
    while (t--)
#define fast                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
#define fo(i, a, n) for (int i = a; i < n; i++)
#define rfo(i, a, b) for (int i = a; i >= b; i--)
#define bg begin()
#define en end()
#define fi first
#define se second
#define ub upper_bound
#define lb lower_bound
#define pb push_back
#define veci vector<int>
#define veclli vector<long long int>
#define all(x) x.begin(), x.end()
#define sci(x) scanf(""%d"", &x);
#define scc(x) scanf(""%c"", &x);
#define scs(x) scanf(""%s"", x);
#define debug(arr, n)                                                                              \
    for (int i = 0; i < n; i++)                                                                    \
        printf(""%d "", arr[i]);
#define sz(x) x.size()
#define loop(x) for (auto it = x.begin(); it != x.end(); it++)
#define int long long
#define pii pair<int, int>
int power(int a, int b)
{
    int ans = 1, f = a;
    while (b)
    {
        if (b & 1ll)
            ans = ans * f % mod;
        f = f * f % mod;
        b = b >> 1ll;
    }
    return ans % mod;
}
signed main()
{
    int hnv = power(100, mod - 2);
    int n;
    cin >> n;
    int p[n + 1];
    fo(i, 1, n + 1)
    {
        cin >> p[i];
        p[i] = p[i] * hnv % mod;
    }
    int ans = 0;
    int an = 1;
    fo(i, 1, n + 1)
    {
        ans = (ans + an % mod) % mod;
        an = an * p[i] % mod;
    }
    int ans2 = 0;
    an = 1;
    fo(i, 1, n + 1)
    {
        ans2 = (ans2 + (((1 - p[i] + mod) % mod) * an)) % mod;
        an = an * p[i] % mod;
    }
    ans2 = (1 - ans2 + mod) % mod;
    ans2 = power(ans2, mod - 2);
    ans = ans * ans2 % mod;
    cout << ans << endl;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*
    Washief Hossain Mugdho
    06 February 2021
    Codeforces 1265E
*/

#ifndef DEBUG
#pragma GCC optimize(""O2"")
#endif

#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define fastio ios_base::sync_with_stdio(0)
#define untie cin.tie(0)
#define rep(i, n) for (int i = 0; i < n; i++)
#define repe(i, n) for (int i = 1; i <= n; i++)
#define rrep(i, n) for (int i = n - 1; i >= 0; i--)
#define rrepe(i, n) for (int i = n; i > 0; i--)
#define ms(a, b) memset(a, b, sizeof a)
#define MOD 998244353

typedef long long ll;
typedef unsigned long long ull;

using namespace std;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vb = vector<bool>;
using vi = vector<int>;
using vl = vector<ll>;
using vvb = vector<vector<bool>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<ll>>;
using vpii = vector<pair<int, int>>;
using mii = map<int, int>;

/***********IO Utility**************/
template <typename... ArgTypes>
void print(ArgTypes... args);
template <typename... ArgTypes>
void input(ArgTypes&... args);
template <>
void print()
{
}
template <>
void input()
{
}
template <typename T, typename... ArgTypes>
void print(T t, ArgTypes... args)
{
    cout << t;
    print(args...);
}
template <typename T, typename... ArgTypes>
void input(T& t, ArgTypes&... args)
{
    cin >> t;
    input(args...);
}

int modPow(int x, int y)
{
    int res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = 1LL * res * x % MOD;
        x = 1LL * x * x % MOD;
        y >>= 1;
    }
    return res;
}

int main()
{
    fastio;
#ifdef LOCAL_OUTPUT
    freopen(LOCAL_OUTPUT, ""w"", stdout);
#endif
#ifdef LOCAL_INPUT
    freopen(LOCAL_INPUT, ""r"", stdin);
#endif
    vi inv(101);
    repe(i, 100) inv[i] = modPow(i, MOD - 2);
    int n;
    cin >> n;
    int res = 0;
    rep(i, n)
    {
        int x;
        cin >> x;
        int mul = 100LL * inv[x] % MOD;
        res = (1LL * res * mul % MOD + mul) % MOD;
    }
    cout << res << endl;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <algorithm>
using namespace std;
#define int long long
const int MOD = 998244353, N = 2e5 + 5;
int inv(int a, int b = MOD - 2)
{
    int res = 1;
    for (; b; b >>= 1, a = a * a % MOD)
        if (b & 1)
            res = res * a % MOD;
    return res;
}
int p[N], n, ans, f[N];
signed main(void)
{
    scanf(""%lld"", &n);
    for (int i = 1; i <= n; i++)
    {
        scanf(""%lld"", p + i);
        f[i] = (100 * inv(p[i]) % MOD * (f[i - 1] + 1)) % MOD;
    }
    printf(""%lld"", f[n]);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using ld = long double;

#define rep(i, a, b) for (auto i = (a); i < (b); ++i)
#define per(i, a, b) for (auto i = (b); i-- > (a);)
#define all(x) begin(x), end(x)
#define rall(x) (x).rbegin(), (x).rend()
#define sz(x) int((x).size())
#define lb(x...) lower_bound(x)
#define ub(x...) upper_bound(x)

template <class T>
bool ckmin(T& a, const T& b)
{
    return a > b ? a = b, 1 : 0;
}
template <class T>
bool ckmax(T& a, const T& b)
{
    return a < b ? a = b, 1 : 0;
}

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

const int M = (119 << 23) + 1, MX = 100 + 5;
int inv[MX];

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    inv[1] = 1;
    rep(i, 2, MX) inv[i] = M - 1ll * M / i * inv[M % i] % M;

    int n;
    cin >> n;
    ll ans = 0;
    rep(i, 0, n)
    {
        int p;
        cin >> p;
        ans = 100 * (ans + 1) % M;
        ans = ans * inv[p] % M;
    }
    cout << ans;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 998244353
ll power(ll a, ll b)
{
    if (b == 0)
        return 1;

    ll temp = power(a, b / 2);

    temp = (temp * temp) % mod;
    if (b % 2)
        temp = (temp * a) % mod;

    return temp;
}
int main()
{
    ll n;
    cin >> n;
    vector<ll> p(n);
    for (ll i = 0; i < n; i++)
    {
        cin >> p[i];
    }
    vector<ll> prefix(n), inversePower100(n + 1, 1), real(n + 1, 0), imaginary(n + 1, 0);
    ll temp = 1;
    ll power100 = 1;
    for (ll i = 0; i < n; i++)
    {
        temp = (temp * p[i]) % mod;
        prefix[i] = temp;
        power100 = (power100 * 100) % mod;
        inversePower100[i + 1] = power(power100, mod - 2);
    }

    for (ll i = n - 1; i >= 0; i--)
    {
        real[i] = (p[i] * (real[i + 1] + 1)) % mod;
        real[i] = (real[i] + 100 - p[i]) % mod;
        real[i] = (real[i] + mod) % mod;
        real[i] = (real[i] * inversePower100[1]) % mod;

        imaginary[i] = (p[i] * imaginary[i + 1]) % mod;
        imaginary[i] = (imaginary[i] + 100 - p[i]) % mod;
        imaginary[i] = (imaginary[i] + mod) % mod;
        imaginary[i] = (imaginary[i] * inversePower100[1]) % mod;
    }
    ll days = (real[0] * power((1 - imaginary[0] + mod) % mod, mod - 2)) % mod;

    cout << days;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <cctype>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <queue>
#define fs(i, x, y) for (int i = (x), _ = (y); i <= _; ++i)
#define fn(i, x, y) for (int i = (x), _ = (y); i >= _; --i)
#define tor(i, v, x) for (int i = head[x], v = to[i]; i; i = nxt[i], v = to[i])
#define ls(x) ch[x][0]
#define rs(x) ch[x][1]
#define mpi(x, y) make_pair(x, y)
#define pi pair<int, int>
#define DEBUG printf(""%s %d\n"", __FUNCTION__, __LINE__)
using namespace std;
typedef long long ll;
typedef double db;
template <typename T>
void read(T& x)
{
    x = 0;
    char ch = getchar();
    bool f = 0;
    while (ch < '0' || ch > '9')
    {
        if (ch == '-')
            f = 1;
        ch = getchar();
    }
    while (ch >= '0' && ch <= '9')
        x = (x << 1) + (x << 3) + ch - '0', ch = getchar();
    x = f ? -x : x;
}

const int N = 1e6, P = 998244353;
int n, iv;
int a[N];

int qw(int a, int b)
{
    int ans = 1;
    for (; b; a = (ll)a * a % P, b >>= 1)
        (b & 1) && (ans = (ll)ans * a % P);
    return ans;
}

signed main()
{
    read(n);
    iv = qw(100, P - 2);
    fs(i, 1, n) read(a[i]), a[i] = (ll)a[i] * iv % P;
    int c = 0, num = 0;
    fn(i, n, 1)
    {
        c = ((ll)c * a[i] % P + 1) % P;
        num = ((ll)num * a[i] + 1 - a[i] + P) % P;
    }
    num = (P + 1 - num) % P;
    printf(""%lld\n"", (ll)c * qw(num, P - 2) % P);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

class Modular
{
public:
    static const int64_t kMod = 998244353;

    Modular() = default;
    Modular(int64_t value)
        : value_(value % kMod)
    {
    }

    int64_t& value()
    {
        return value_;
    }

    int64_t value() const
    {
        return value_;
    }

    Modular& operator+=(Modular other)
    {
        value_ = (value_ + other.value_) % kMod;

        return *this;
    }

    Modular& operator-=(Modular other)
    {
        value_ = (value_ - other.value_) % kMod;

        return *this;
    }

    Modular& operator*=(Modular other)
    {
        value_ = (value_ * other.value_) % kMod;

        return *this;
    }

    Modular Inv() const
    {
        const int64_t kPow = kMod - 2;
        Modular mul(value_);
        Modular result = 1;
        for (int i = 0; i < 63; i++)
        {
            if (kPow & (1LL << i))
            {
                result *= mul;
            }
            mul *= mul;
        }

        return result;
    }

    Modular& operator/=(Modular other)
    {
        value_ = (value_ * other.Inv().value()) % kMod;

        return *this;
    }

private:
    int64_t value_;
};

Modular operator+(Modular a, Modular b)
{
    return a += b;
}

Modular operator-(Modular a, Modular b)
{
    return a -= b;
}

Modular operator*(Modular a, Modular b)
{
    return a *= b;
}

Modular operator/(Modular a, Modular b)
{
    return a /= b;
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);

    int n;
    cin >> n;
    Modular k = 0;
    for (int i = 0; i < n; i++)
    {
        Modular p;
        cin >> p.value();
        p /= 100;
        k = (k + 1) / p;
    }

    cout << k.value() << ""\n"";

    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb push_back
#define mp make_pair
#define deb(x) cout << #x << "" "" << x << ""\n"";
#define MAX 9223372036854775807
#define MIN -9223372036854775807
#define PI 3.141592653589
#define setbits(n) __builtin_popcountll(n)
#define mkunique(a) a.resize(unique(a.begin(), a.end()) - a.begin());
const ll mod = 998244353;

ll mpow(ll x, ll y)
{
    ll res = 1;
    x = x % mod;
    while (y > 0)
    {
        if (y & 1)
            res = (res * x) % mod;
        y = y >> 1;
        x = (x * x) % mod;
    }
    return res;
}

ll modInv(ll n)
{
    return mpow(n, mod - 2);
}

const int N = 2e5 + 10;
vector<ll> a(N);
pair<ll, ll> dp[N];
ll n;
bool vis[N];
ll minv = modInv(100);

pair<ll, ll> go(ll pos)
{
    if (pos == n)
        return { 1, 0 };
    if (vis[pos])
        return dp[pos];
    vis[pos] = true;
    pair<ll, ll> v = go(pos + 1);
    ll succ = 1 + a[pos] * minv % mod * v.first % mod;
    ll loose = ((100 - a[pos]) * minv % mod + a[pos] * minv % mod * v.second % mod) % mod;
    return dp[pos] = { succ, loose };
}

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll T = clock();

    cin >> n;
    for (ll i = 0; i < n; i++)
        cin >> a[i];
    memset(vis, false, sizeof(vis));
    pair<ll, ll> p = go(0);
    ll div = (1 - p.second % mod + mod) % mod;
    // cout<<p.first<<"" ""<<div<<"" "";
    cout << p.first * modInv(div) % mod - 1;


    cerr << ""\n\nTIME: "" << (double)(clock() - T) / CLOCKS_PER_SEC << "" sec\n"";
    T = clock();
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int N = 2e5 + 9;
const ll mod = 998244353;
int n, a[N];
ll inv[N], dp[N];

int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%d"", &a[i]);
    inv[0] = inv[1] = 1;
    for (int i = 2; i <= 100; i++)
        inv[i] = inv[mod % i] * (mod - mod / i) % mod;
    dp[1] = 1;
    for (int i = 1; i <= n; i++)
    {
        dp[i + 1] = (1ll + dp[i] * 100ll % mod * inv[a[i]]) % mod;
    }
    printf(""%lld\n"", dp[n + 1] - 1);
    return 0;
}
/*
dp[i+1]=1+dp[i]*100/pi
*/",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pll;

#define all(x) (x).begin(), (x).end()
#define X first
#define Y second
#define sep ' '
#define endl '\n'
#define debug(x) cerr << #x << "": "" << x << endl;

ll poww(ll a, ll b, ll md)
{
    return (
        !b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll INF = 8e18;
const ll MOD = 998244353; // 1e9 + 9;

ll pref[MAXN], n, P[MAXN];

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin >> n;
    pref[0] = 1;

    ll ans = 1;
    for (int i = 1; i <= n; i++)
    {
        cin >> P[i];
        P[i] = P[i] * poww(100, MOD - 2, MOD) % MOD;
        pref[i] = pref[i - 1] * P[i] % MOD;
        if (i != n)
            ans += pref[i];
        ans %= MOD;
    }

    ans = poww(pref[n], MOD - 2, MOD) * ans % MOD;
    cout << ans << endl;
    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;
const int p = 998244353, inv100 = 828542813, MAXN = 2e5 + 10;
int n, q[MAXN], add, ans, inv;
inline int ksm(int a, int b)
{
    int res = 1;
    while (b)
    {
        if (b & 1)
            res = (ll)res * a % p;
        a = (ll)a * a % p;
        b >>= 1;
    }
    return res;
}
inline int read()
{
    int sum = 0;
    char ch = getchar();
    while (ch < '0' || ch > '9')
        ch = getchar();
    while (ch >= '0' && ch <= '9')
        sum = sum * 10 + ch - 48, ch = getchar();
    return sum;
}
int main()
{
    n = read();
    int i;
    for (i = 1; i <= n; i++)
        q[i] = (ll)read() * inv100 % p;
    ans = add = 1;
    for (i = 1; i <= n - 1; i++)
    {
        add = (ll)add * q[i] % p;
        ans = (ans + add) % p;
    }
    add = (ll)add * q[n] % p;
    inv = ksm(add, p - 2);
    ans = (ll)ans * inv % p;
    cout << ans;
    return 0;
    ;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
const int N = 2e5 + 5, M = 998244353;
int n, ans, f[N], p[N];
void exgcd(int x, int y, int& a, int& b)
{
    if (!y)
    {
        a = 1;
        b = 0;
        return;
    }
    exgcd(y, x % y, b, a);
    b -= x / y * a;
}
int inv(int a)
{
    int x = 0, y = 0;
    exgcd(a, M, x, y);
    return (x % M + M) % M;
}
int main()
{
    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%d"", p + i);
    for (int i = 1; i <= n; i++)
        f[i] = 1LL * (f[i - 1] + 1) * inv(p[i]) % M * 100 % M;
    for (int i = 1; i <= n; i++)
        ans = (ans + 1LL * f[i] * inv(n) % M) % M;
    printf(""%d\n"", f[n]);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define int long long

int n;
int p;
int mod = 998244353;
int ans;

int read()
{
    int x = 0;
    char ch = getchar();
    while (!isdigit(ch))
    {
        ch = getchar();
    }
    while (isdigit(ch))
    {
        x = (x << 1) + (x << 3) + (ch ^ 48);
        ch = getchar();
    }
    return x;
}

int mul(int x, int y)
{
    int res = 1;
    while (y)
    {
        if (y & 1)
            res = res * x % mod;
        x = x * x % mod;
        y >>= 1;
    }
    return res;
}

signed main()
{
    n = read();
    for (register int i = 1; i <= n; ++i)
    {
        p = read();
        int x = mul(p, mod - 2);
        ans = (ans * x % mod * 100 + x * 100 % mod) % mod;
    }
    printf(""%d"", ans);
    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define int long long

const int N = 2e5 + 10;
const int Mod = 998244353;

int n, a[N], f[N];

int power(int x, int y = Mod - 2, int res = 1)
{
    for (; y; y >>= 1, x = 1ll * x * x % Mod)
    {
        if (y & 1)
        {
            res = 1ll * res * x % Mod;
        }
    }
    return res;
}

signed main()
{
    ios::sync_with_stdio(0);
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
    }
    f[1] = 100 * power(a[1]) % Mod;
    for (int i = 2; i <= n; i++)
    {
        f[i] = 1ll * (f[i - 1] + 1) * power(a[i]) % Mod * 100 % Mod;
    }
    cout << f[n] << ""\n"";
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;

#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
#define endl ""\n""

#define FIO                                                                                        \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);

using namespace std;
typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
const int N = 1e3 + 5, mod = 998244353;
ll add(ll a, ll b)
{
    return (a + b + mod) % mod;
}
ll mul(ll a, ll b)
{
    return (a * b) % mod;
}
ll fastpow(ll b, int p)
{
    if (p == 0)
        return 1;
    ll ans = fastpow(b, p / 2);
    ans = mul(ans, ans);
    if (p % 2)
        ans = mul(ans, b);
    return ans;
}
ll inv(int x)
{
    return fastpow(x, mod - 2);
}

int main()
{
    FIO

        ll ans
        = 1,
        hun = inv(100), inf = 1, total = 1, sum = 0;
    int n;
    cin >> n;

    for (int i = 0; i < n; i++)
    {

        int p;
        cin >> p;
        sum = add(sum, ans);
        ans = mul(ans, mul(p, hun));
    }
    ans = mul(sum, inv(ans));
    cout << ans << endl;


    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
int read()
{
    int ch = getchar(), num = 0;
    while (ch < 48 || ch > 57)
        ch = getchar();
    while (ch >= 48 && ch <= 57)
        num = (num << 3) + (num << 1) + (ch ^ 48), ch = getchar();
    return num;
}
const int maxn = 200005;
const long long mod = 998244353ll, inv = 828542813ll; // inv=pow(100,mod-2)
int n;
long long p[maxn], s[maxn];
long long pow(long long a, long long b)
{
    long long num = 1ll;
    while (b)
    {
        if (b & 1)
            num = num * a % mod;
        a = a * a % mod;
        b >>= 1;
    }
    return num;
}
int main()
{
    n = read();
    s[0] = 1;
    for (int i = 1; i <= n; i++)
    {
        p[i] = read() * inv % mod;
        s[i] = s[i - 1] * p[i] % mod;
    }
    long long a = 1, b = s[n];
    for (int i = 1; i < n; i++)
        a = (a + s[i]) % mod;
    printf(""%lld"", a * pow(b, mod - 2) % mod);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#pragma GCC optimize(""O3"")
#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>
#define int long long
#define all(z) z.begin(), z.end()
#define rall(z) z.rbegin(), z.rend()
#define pb push_back
#define eb emplace_back
using namespace std;
using vi = vector<int>;
using vc = vector<char>;
using pii = pair<int, int>;
using vvi = vector<vector<int>>;


class int2
{
    static constexpr int mod{ 998244353 };

    using value_type = long long;

    value_type x;

public:
    int2(value_type _x = 0)
        : x(_x)
    {
    }

    int2& operator+=(int2 rhs)
    {
        x += rhs.x;
        x %= mod;
        return *this;
    }

    int2& operator-=(int2 rhs)
    {
        x += mod - rhs.x;
        x %= mod;
        return *this;
    }

    int2& operator*=(int2 rhs)
    {
        x *= rhs.x;
        x %= mod;
        return *this;
    }

    int2& operator/=(int2 rhs)
    {
        int2 inv_rhs{ 1 };
        int n{ mod - 2 };

        while (n > 0)
        {
            if (n & 1)
                inv_rhs *= rhs;
            rhs *= rhs;
            n >>= 1;
        }

        *this *= inv_rhs;
        return *this;
    }

    friend int2 operator+(int2 lhs, int2 rhs)
    {
        return lhs += rhs;
    }
    friend int2 operator-(int2 lhs, int2 rhs)
    {
        return lhs -= rhs;
    }
    friend int2 operator*(int2 lhs, int2 rhs)
    {
        return lhs *= rhs;
    }
    friend int2 operator/(int2 lhs, int2 rhs)
    {
        return lhs /= rhs;
    }

    friend istream& operator>>(istream& is, int2& obj)
    {
        is >> obj.x;
        obj.x %= mod;
        obj.x += mod;
        obj.x %= mod;
        return is;
    }

    friend ostream& operator<<(ostream& os, int2 obj)
    {
        os << obj.x;
        return os;
    }
};


signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;

    vector<int2> p(n);
    for (int i = 0; i < n; i++)
    {
        cin >> p[i];
        p[i] /= 100;
    }

    int2 E = 0;

    int2 cf = 1;
    for (int i = 0; i < n; i++)
    {
        E += (i + 1) * cf * (1 - p[i]);
        cf *= p[i];
    }
    for (int i = 0; i < n; i++)
        E /= p[i];
    E += n;

    cout << E;

    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
using namespace std;
constexpr int md = (int)998244353; // 

inline int add(int a, int b)
{
    a += b;
    if (a >= md)
        a -= md;
    return a;
}

inline int sub(int a, int b)
{
    a -= b;
    if (a < 0)
        a += md;
    return a;
}

inline int mul(int a, int b)
{
    return (int)((long long)a * b % md);
}

inline int powmod(int a, long long b)
{
    int res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = mul(res, a);
        a = mul(a, a);
        b >>= 1;
    }
    return res;
}

inline int inv(int a)
{
    a %= md;
    if (a < 0)
        a += md;
    int b = md, u = 0, v = 1;
    while (a)
    {
        int t = b / a;
        b -= t * a;
        swap(a, b);
        u -= t * v;
        swap(u, v);
    }
    assert(b == 1);
    if (u < 0)
        u += md;
    return u;
}

int32_t main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    int n;
    cin >> n;
    vector<int> p(n);
    for (auto& i : p)
    {
        cin >> i;
    }
    vector<int> dp(n);
    int pre = 0;
    for (int i = 0; i < n; i++)
    {
        int x = mul(100 - p[i], 1 + pre);
        x = add(x, p[i]);
        dp[i] = mul(x, inv(p[i]));
        pre = add(pre, dp[i]);
    }
    int res = 0;
    for (int i = 0; i < n; i++)
    {
        res = add(res, dp[i]);
    }
    cout << res;
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define MAX_N 1000000

using namespace std;

typedef long long lint;

const lint MOD = 998244353;

int n;
int p[MAX_N + 1];

lint inv[100 + 1];
lint dp[MAX_N + 1];

void readFile()
{
    cin >> n;

    assert(n >= 1 && n <= MAX_N);

    for (int i = 1; i <= n; i++)
    {
        cin >> p[i];

        assert(p[i] >= 1 && p[i] <= 100);
    }
}

void euclid(lint a, lint b, lint& x, lint& y, lint& d)
{
    if (b == 0)
    {
        x = 1;
        y = 0;

        d = a;

        return;
    }

    lint xx, yy, qq = a / b;
    euclid(b, a % b, xx, yy, d);
    x = yy;
    y = xx - yy * qq;
}

void poz(lint& x)
{
    if (x < 0)
    {
        x = MOD + x % MOD;
    }
}

void getInv()
{
    for (int i = 1; i <= 100; i++)
    {
        lint x, y, d;
        euclid(i, MOD, x, y, d);
        poz(x);

        inv[i] = x;
    }
}

void getRez()
{
    dp[0] = 0;

    for (int i = 1; i <= n; i++)
    {
        dp[i] = (dp[i - 1] + 1) % MOD * 100 % MOD * inv[p[i]] % MOD;
        // modd(dp[i]);
    }
}

void solve()
{
    getInv();

    getRez();
}

void printFile()
{
    cout << dp[n] << ""\n"";

    assert(dp[n] >= 0 && dp[n] < MOD);
}

int main()
{
    readFile();

    solve();

    printFile();

    return 0;
}
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"//#pragma GCC optimize(2)
#include <cstdio>
#include <iostream>
#include <string>
#include <cstring>
#include <map>
#include <cmath>
#include <cctype>
#include <vector>
#include <set>
#include <queue>
#include <algorithm>
#include <sstream>
#include <ctime>
#include <cstdlib>
#define X first
#define Y second
#define L (u << 1)
#define R (u << 1 | 1)
#define pb push_back
#define mk make_pair
#define Mid (tr[u].l + tr[u].r >> 1)
#define Len(u) (tr[u].r - tr[u].l + 1)
#define random(a, b) ((a) + rand() % ((b) - (a) + 1))
#define db puts(""---"")
using namespace std;

// void rd_cre() { freopen(""d://dp//data.txt"",""w"",stdout); srand(time(NULL)); }
// void rd_ac() { freopen(""d://dp//data.txt"",""r"",stdin); freopen(""d://dp//AC.txt"",""w"",stdout); }
// void rd_wa() { freopen(""d://dp//data.txt"",""r"",stdin); freopen(""d://dp//WA.txt"",""w"",stdout); }

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int, int> PII;

const int N = 1000010, mod = 998244353, INF = 0x3f3f3f3f;
const double eps = 1e-6;

int n;
LL p[N], f[N];

LL qmi(LL a, LL b)
{
    LL ans = 1;
    while (b)
    {
        if (b & 1)
            ans = ans * a % mod;
        a = a * a % mod;
        b >>= 1;
    }
    return ans % mod;
}

int main()
{
    //	ios::sync_with_stdio(false);
    //	cin.tie(0);

    scanf(""%d"", &n);
    for (int i = 1; i <= n; i++)
        scanf(""%ld"", &p[i]);
    for (int i = 1; i <= n; i++)
        f[i] = 100 * (1 + f[i - 1]) % mod * qmi(p[i], mod - 2) % mod;
    printf(""%lld\n"", f[n] % mod);


    return 0;
}
/*

*/
",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <cstdio>
#include <algorithm>
using namespace std;
const int N = 2e5 + 5, mod = 998244353;
int n;
long long fpow(long long a, long long b)
{
    long long res = 1;
    while (b)
    {
        if (b & 1)
        {
            res = (res * a) % mod;
        }
        b >>= 1;
        a = (a * a) % mod;
    }
    return res % mod;
}
int main()
{
    scanf(""%d"", &n);
    long long inv = fpow(100, mod - 2);
    long long p, f = 0;
    for (int i = 1; i <= n; i++)
    {
        scanf(""%lld"", &p);
        p = (p * inv) % mod;
        f = (f + 1) * fpow(p, mod - 2) % mod;
    }
    printf(""%lld\n"", f);
    return 0;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define int long long
const int N = 1000005;
const int mod = 998244353;

int p[N], n, f[N];

int qpow(int p, int q)
{
    return (q & 1 ? p : 1) * (q ? qpow(p * p % mod, q / 2) : 1) % mod;
}

int inv(int p)
{
    return qpow(p, mod - 2);
}

signed main()
{
    ios::sync_with_stdio(false);

    cin >> n;

    for (int i = 1; i <= n; i++)
        cin >> p[i];

    for (int i = 2; i <= n + 1; i++)
        f[i] = 100 * inv(p[i - 1]) % mod * (1 + f[i - 1]) % mod;

    cout << f[n + 1] << endl;
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define _USE_MATH_DEFINES
using namespace std;

#define ll long long int
#define ld double
#define pb push_back
#define eb emplace_back
#define rep(i, j, n) for (ll i = j; i < n; i++)
#define pre(i, j, n) for (ll i = j; i >= n; i--)
#define all(x) x.begin(), x.end()
typedef pair<int, int> pii;
typedef pair<ll, ll> pl;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<double> vd;
typedef vector<bool> vb;
typedef pair<ll, ll> pll;
#define br ""\n""
#define ff first
#define ss second
#define debug(a...)                                                                                \
    cout << #a << "": "";                                                                            \
    for (auto it : a)                                                                              \
        cout << it << "" "";                                                                         \
    cout << endl;
#define MAXIM 10005
ll MAX = 2e5 + 1;
ll mod = 998244353LL;
const string no = ""NO"", yes = ""YES"";

ll bin_exp(ll a, ll b)
{
    a = a % mod;
    ll ans = 1;
    while (b > 0)
    {
        if (b & 1 == 1)
            ans = (a * ans) % mod;
        a = (a * a) % mod;
        b = b >> 1;
    }
    return ans;
}

ll mod_inv(ll n)
{
    ll a = bin_exp(n, mod - 2);
    return a;
}

ll sub(ll a, ll b)
{
    return ((a - b + mod) % mod);
}

ll mul(ll a, ll b)
{
    return ((a * b) % mod);
}

ll add(ll a, ll b)
{
    return ((a + b + mod) % mod);
}

void solve()
{
    ll n;
    cin >> n;
    vll v(n);
    rep(i, 0, n)
    {
        cin >> v[i];
        v[i] = mul(v[i], mod_inv(100));
    }
    ll c1 = sub(1, v[n - 1]);
    ll c2 = 1;
    // ti = 1 + p*(c2 + c1*t) + (1 - p)*t;
    // ti = 1 + p*c2 + p*c1*t + (1 - p)*t
    // c2 = 1 + p*c2
    // c1 = p*c1 + 1 - p
    pre(i, n - 2, 0)
    {
        ll temp1 = mul(v[i], c1);
        ll temp2 = sub(1, v[i]);
        ll temp3 = mul(v[i], c2);
        c1 = add(temp1, temp2);
        c2 = add(1, temp3);
    }
    ll temp1 = sub(1, c1);
    ll ans = mul(c2, mod_inv(temp1));
    cout << ans << br;
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif

    ll t = 1;
    // cin >> t;
    rep(i, 0, t)
    {
        // cout << ""Case #"" << i + 1 << "": "";
        solve();
        // test();
    }
}",1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cmath>
#include <iterator>
#include <map>
#include <set>
#include <tuple>
#include <queue>

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    // ifstream in(""input.txt"");
    // cin.rdbuf(in.rdbuf());
    int T;
    cin >> T;
    for (int t = 0; t < T; ++t)
    {
        int n;
        cin >> n;
        vector<pair<int, int>> P(n);
        vector<int> L(n), R(n);
        for (int i = 0; i < n; ++i)
        {
            cin >> L[i] >> R[i];
            P[i] = { L[i], R[i] };
        }
        sort(L.begin(), L.end());
        sort(R.begin(), R.end());
        int res = 0;
        for (auto[l, r] : P)
        {
            int a = distance(R.begin(), lower_bound(R.begin(), R.end(), l));
            int b = n - distance(L.begin(), upper_bound(L.begin(), L.end(), r));
            res = max(res, n - a - b);
        }
        cout << n - res << endl;
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <unordered_map>
#include <vector>
#include <deque>
#include <queue>
#include <string>
#include <map>
#include <set>
using namespace std;
typedef long long LL;
typedef pair<int, int> PII;
const int N = 200010;
PII sz[N];
int l[N], r[N];
int main(void)
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        for (int i = 1; i <= n; i++)
            cin >> sz[i].first >> sz[i].second, l[i] = sz[i].first, r[i] = sz[i].second;
        sort(l + 1, l + n + 1), sort(r + 1, r + n + 1);
        int ans = 0x3f3f3f3f;
        // 1 2 2 1
        for (int i = 1; i <= n; i++)
        {
            int l1 = 1, r1 = n;
            int x1 = 0;
            while (l1 < r1)
            {
                int mid = l1 + r1 + 1 >> 1;
                if (r[mid] < sz[i].first)
                    l1 = mid;
                else
                    r1 = mid - 1;
            }
            if (r[l1] < sz[i].first)
                x1 += l1;
            l1 = 1, r1 = n;
            while (l1 < r1)
            {
                int mid = l1 + r1 >> 1;
                if (l[mid] > sz[i].second)
                    r1 = mid;
                else
                    l1 = mid + 1;
            }
            if (l[l1] > sz[i].second)
                x1 += n - l1 + 1;
            ans = min(ans, x1);
        }
        cout << ans << endl;
    }
    // system(""pause"");
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vector<pair<int, int> > arr(n);
        vector<int> left(n), right(n);
        for (int i = 0; i < n; i++)
        {
            cin >> arr[i].first >> arr[i].second;
            left[i] = arr[i].first;
            right[i] = arr[i].second;
        }
        sort(left.begin(), left.end());
        sort(right.begin(), right.end());

        int ans = n - 1;
        for (int i = 0; i < n; i++)
        {
            int l = lower_bound(right.begin(), right.end(), arr[i].first) - right.begin();
            int r;
            int temp = (upper_bound(left.begin(), left.end(), arr[i].second) - left.begin());
            r = max(0, n - temp);
            ans = min(ans, l + r);
        }
        cout << ans << endl;
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define me(a, x) memset(a, x, sizeof(a))
#define sf scanf
#define pf printf
#define rep(i, x, y) for (int i = x; i <= y; i++)
#define per(i, x, y) for (int i = x; i >= y; i--)
#define gcd __gcd
#define pb push_back
#define IOS                                                                                        \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define debug(x) cout << ""x="" << x << endl
const int mod = 1e9 + 7;
const int INF = 0x3f3f3f3f;
const ll llINF = 9223372036854775807;
const int maxn = 2e5 + 10;
const double pi = acos(-1.0);
using namespace std;
int n;
struct jie
{
    int l, r;
} a[maxn];
void solve()
{
    cin >> n;
    vector<int> L;
    vector<int> R;
    rep(i, 1, n)
    {
        cin >> a[i].l >> a[i].r;
        L.pb(a[i].l);
        R.pb(a[i].r);
    }
    sort(L.begin(), L.end());
    sort(R.begin(), R.end());
    int ans = INF;
    rep(i, 1, n)
    {
        int cntL = a[i].l;
        int cntR = a[i].r;
        int res = 0;
        int t = upper_bound(L.begin(), L.end(), cntR) - L.begin();
        res += n - t;
        t = lower_bound(R.begin(), R.end(), cntL) - R.begin();
        res += t;
        ans = min(ans, res);
    }
    cout << ans << endl;
}

int main()
{
    //	IOS;
    int _;
    sf(""%d"", &_);
    while (_--)
    {
        solve();
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define FAST                                                                                       \
    std::ios_base::sync_with_stdio(false);                                                         \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define ll long long
#define endl ""\n""
#define fo(i, n) for (i = 0; i < (n); i++)
#define fo1(i, n) for (i = 1; i < (n); i++)
#define maxn 1000000007
#define vc vector
#define all(v) v.begin(), v.end()
#define pb push_back
#define mp make_pair
#define INT_MX 1e18
#define F first
#define S second
int main()
{
    FAST ll t = 1;
    cin >> t;
    while (t--)
    {
        ll n, i, l, r;
        cin >> n;
        vc<pair<ll, ll>> p(n);
        vc<ll> l1, rr;
        fo(i, n)
        {
            cin >> l >> r;
            p[i] = mp(l, r);
            l1.pb(l);
            rr.pb(r);
        }
        sort(all(l1));
        sort(all(rr));
        ll ans = n;
        fo(i, n)
        {
            ll a = l1.end() - upper_bound(l1.begin(), l1.end(), p[i].S);
            ll b = lower_bound(rr.begin(), rr.end(), p[i].F) - rr.begin();
            ans = min(ans, a + b);
        }
        cout << ans << endl;
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"// KDB G.O.A.T MID
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pb push_back
#define pf push_front
#define f first
#define se second
#define io ios_base::sync_with_stdio(false), cin.tie(NULL)
#define MAXN 100009
#define in insert
#define lb lower_bound
#define ub upper_bound
#define pi pair<int, int>
#define pp pair<double, double>
#define N 109
#define MOD 998244353
signed main()
{
    io;
    int t;
    cin >> t;
    while (t--)
    {
        int i, j, n, mini = 1e9;
        cin >> n;
        pi a[n];
        std::vector<int> l, r;
        for (i = 0; i < n; i++)
            cin >> a[i].f >> a[i].se;
        for (i = 0; i < n; i++)
            l.pb(a[i].f), r.pb(a[i].se);
        sort(l.begin(), l.end());
        sort(r.begin(), r.end());
        for (i = 0; i < n; i++)
        {
            int x = lb(r.begin(), r.end(), a[i].f) - r.begin();
            int y = ub(l.begin(), l.end(), a[i].se) - l.begin();
            y = n - y;
            mini = min(mini, x + y);
        }
        cout << mini << ""\n"";
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int x, T, n, l[200000], r[200000], a[200000], b[200000];
int main()
{
    cin >> T;
    while (T--)
    {
        cin >> n;
        for (int i = 0; i < n; i++)
        {
            cin >> l[i] >> r[i];
            a[i] = l[i];
            b[i] = r[i];
        }

        sort(a, a + n);
        sort(b, b + n);
        x = 0;
        for (int i = 0; i < n; i++)
            x = max(x, int(n - (lower_bound(b, b + n, l[i]) - b - 1)
                           - (n + 1 - (upper_bound(a, a + n, r[i]) - a))));

        cout << n - x << endl;
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
const int dx[4] = { 0, 1, 0, -1 }, dy[4] = { 1, 0, -1, 0 };
const int inf = 0x3f3f3f3f;
const ll linf = 0x3f3f3f3f3f3f3f3f;
const ll mod = 1e9 + 7;
// const ll mod = 998244353;

ll ksm(ll x, ll k)
{
    ll ret = 1;
    while (k)
    {
        if (k & 1)
            ret = ret * x % mod;
        x = x * x % mod, k >>= 1;
    }
    return ret;
}

ll prime[10000005], pcnt, phi[10000005];
bool mark[10000005];
inline void pre(ll n)
{
    mark[1] = 1;
    for (ll i = 2; i <= n; i++)
    {
        if (!mark[i])
            prime[++pcnt] = i /*,phi[i]=i-1*/;
        for (ll j = 1; j <= pcnt; j++)
        {
            ll k = i * prime[j];
            if (k > n)
                break;
            mark[k] = 1;
            if (i % prime[j] == 0)
            {
                //				phi[k]=phi[i]*prime[j];
                break;
            }
            //			else	phi[k]=phi[i]*(prime[j]-1);
        }
    }
}

pair<int, int> a[200005];
int l[200005], r[200005];

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int T = 1;
    cin >> T;
    while (T--)
    {
        int n;
        cin >> n;
        for (int i = 1; i <= n; i++)
            cin >> l[i] >> r[i], a[i].first = l[i], a[i].second = r[i];
        sort(l + 1, l + n + 1);
        sort(r + 1, r + n + 1);
        int ans = inf;
        for (int i = 1; i <= n; i++)
        {
            int pos1 = upper_bound(l + 1, l + n + 1, a[i].second) - l;
            int pos2 = lower_bound(r + 1, r + n + 1, a[i].first) - r;
            pos2--;
            ans = min(ans, n - pos1 + 1 + pos2);
        }
        cout << ans << ""\n"";
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define int long long
using namespace std;
const int maxn = 200005;
typedef struct a
{
    int l, r;
    bool operator<(const a& o) const
    {
        return l < o.l || (l == o.l && r < o.r);
    }
} per;
int t, n, cha[maxn], l[maxn], num[maxn];
per si[maxn];
signed main()
{
    cin >> t;
    while (t--)
    {
        cin >> n;
        for (int i = 1; i <= n; ++i)
            scanf(""%lld%lld"", &si[i].l, &si[i].r);
        sort(si + 1, si + 1 + n);
        for (int i = 1; i <= n; ++i)
        {
            l[i] = si[i].l;
            cha[i] = 0;
            num[i] = 0;
        }
        for (int i = 1; i <= n; ++i)
        {
            int temp = upper_bound(l + i + 1, l + n + 1, si[i].r) - l;
            if (l[temp] > si[i].r || temp > n)
                temp--;
            // cout<<temp<<""\n"";
            if (temp > i)
            {
                num[i] += (temp - i);
                cha[i + 1] += 1;
                cha[temp + 1] -= 1;
            }
        }
        // for(int i=1;i<=n;++i) cout<<num[i]<<' ';
        // cout<<""\n"";
        // for(int i=1;i<=n;++i) cout<<cha[i]<<' ';
        // cout<<""\n"";
        int maxnum = 0, temp = 0;
        for (int i = 1; i <= n; ++i)
        {
            temp += cha[i];
            if (num[i] + temp > maxnum)
                maxnum = num[i] + temp;
        }
        cout << n - maxnum - 1 << ""\n"";
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"//
// author  : Abhishek
//
#include <bits/stdc++.h>

#define fastIO                                                                                     \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
#define ll long long
#define db double
#define deb(x) cout << #x << "": "" << x << ""\n""
#define all(x) x.begin(), x.end()
#define fo(i, n) for (i = 0; i < n; i++)
#define Fo(i, k, n) for (i = k; i < n; i++)

using namespace std;

const ll MOD = 1000000007;
const ll N = 300500;

/*
4
3
1 4
2 3
3 6
4
1 2
2 3
3 5
4 5
5
1 2
3 8
4 5
6 7
9 10
5
1 5
2 4
3 5
3 8
4 8

*/

void solve()
{
    ll t = 1, cs = 1;
    cin >> (t);
    while (t--)
    {

        ll i, j, k, n, m, x, y, a, b, l, r;
        cin >> n;
        vector<pair<ll, ll>> arr(n);
        vector<ll> start(n);
        fo(i, n)
        {
            cin >> arr[i].first >> arr[i].second;
            start[i] = arr[i].first;
        }
        sort(all(arr));
        sort(all(start));
        vector<ll> ct(n, 0);
        ll ans = 1;

        vector<ll> pre(n, 0);

        fo(i, n)
        {
            ll last = upper_bound(all(start), arr[i].second) - start.begin();
            //            deb(i);
            //            deb(last);
            ll in = last - i - 1;
            ct[i] += in;
            pre[i]++;
            if (last < n)
            {
                pre[last]--;
            }
        }

        Fo(i, 1, n) pre[i] += pre[i - 1];
        fo(i, n) ct[i] += pre[i];

        //        fo(i, n) cout << ct[i] << "" "";
        //        cout << ""\n"";

        cout << n - (*max_element(all(ct))) << ""\n"";
    }
}


int main()
{
    fastIO solve();
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long long int ll;
ll mod = 1e9 + 7;
const int N = 2e5 + 5;
long long fac[N + 1];
long long power(long long x, ll y, ll p)
{
    ll res = 1; // Initialize result

    x = x % p; // Update x if it is more than or

    while (y > 0)
    {
        if (y & 1)
            res = (res * x) % p;
        y = y >> 1; // y = y/2
        x = (x * x) % p;
    }
    return res;
}
ll modInverse(ll n, ll p)
{
    return power(n, p - 2, p);
}

long long nCr(long long n, ll r, ll p)
{
    // If n<r, then nCr should return 0
    if (n < r)
        return 0;
    // Base case
    if (r == 0)
        return 1;
    return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) % p;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vector<pair<int, int> > a(n);
        vector<int> s(n), e(n);
        for (int i = 0; i < n; i++)
        {
            cin >> a[i].first >> a[i].second;
            s[i] = a[i].first;
            e[i] = a[i].second;
        }
        sort(s.begin(), s.end());
        sort(e.begin(), e.end());
        int ans = INT_MAX;
        for (int i = 0; i < n; i++)
        {
            int u = a[i].first;
            int v = a[i].second;
            int cnt = 0;
            int idx = lower_bound(e.begin(), e.end(), u) - e.begin();
            cnt += idx;
            idx = n - (upper_bound(s.begin(), s.end(), v) - s.begin());
            cnt += idx;
            ans = min(ans, cnt);
        }
        cout << ans << endl;
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#pragma gcc optimize(""Ofast"")
#include ""bits/stdc++.h""
using namespace std;

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int T;
    cin >> T;
    while (T--)
    {
        int n;
        cin >> n;
        vector<int> l(n), r(n), v;
        for (int i = 0; i < n; ++i)
        {
            cin >> l[i] >> r[i];
            v.emplace_back(l[i]);
            v.emplace_back(r[i]);
        }
        sort(v.begin(), v.end());
        v.resize(unique(v.begin(), v.end()) - v.begin());
        for (int i = 0; i < n; ++i)
        {
            l[i] = lower_bound(v.begin(), v.end(), l[i]) - v.begin();
            r[i] = lower_bound(v.begin(), v.end(), r[i]) - v.begin();
        }
        int sz = n << 1;
        vector<vector<int>> Q(sz << 1);
        vector<int> S(sz << 1);
        auto add = [&](int i, int v)
        {
            for (S[i += sz] += v; i >>= 1;)
                S[i] = S[i << 1] + S[i << 1 | 1];
        };
        auto query = [&](int l, int r)
        {
            int res = 0;
            for (l += sz, r += sz; l < r; l >>= 1, r >>= 1)
            {
                if (l & 1)
                    res += S[l++];
                if (r & 1)
                    res += S[--r];
            }
            return res;
        };
        for (int i = 0; i < n; ++i)
        {
            add(l[i], 1);
            Q[r[i]].emplace_back(l[i]);
        }
        int ans = n;
        for (int i = 0; i < Q.size(); ++i)
        {
            if (Q[i].empty())
                continue;
            for (auto& l : Q[i])
                ans = min(ans, n - query(l, i + 1));
            for (auto& l : Q[i])
                add(l, -1), add(i, 1);
        }
        cout << ans << '\n';
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<bool> vb;
typedef map<int, int> mii;
typedef pair<int, int> ii;

#define INF 0x3f3f3f3f
#define INFLL 0x3f3f3f3f3f3f3f3f
#define each(x, s) for (auto& x : s)
#define loop(x) for (int i = 0; i < x; i++)
#define vloop(v, x) for (int v = 0; v < x; v++)
#define avg(l, r) l + (r - l) / 2
#define iter(a) a.begin(), a.end()
#define riter(a) a.rbegin(), a.rend()
#define endl ""\n""

const ll mod = 1000000007;
const double EPS = 1e-7;
const double PI = acos(-1);

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int t;
    cin >> t;
    loop(t)
    {
        int n;
        cin >> n;
        vector<ii> a(n);
        loop(n)
        {
            cin >> a[i].first >> a[i].second;
        }
        sort(iter(a));
        int ans = 0, prev = 0;
        priority_queue<int> q;
        loop(n)
        {
            auto & [ l, r ] = a[i];
            while (!q.empty() and -q.top() < l)
                prev--, q.pop();
            int x = lower_bound(iter(a), ii(r, INF)) - a.begin();
            ans = max(ans, prev + x - i);
            prev++;
            q.push(-r);
        }
        cout << n - ans << endl;
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int lli;
#define len(c) (int)(c.size())
#define has(c, e) (c.find(e) != c.end())
#define endl '\n'
#define brkl ' '

void boost()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

int solve()
{
    int n;
    cin >> n;
    vector<pair<int, int>> v(n);
    for (auto& e : v)
        cin >> e.first >> e.second;
    vector<int> s{}, e{};
    for (auto& a : v)
    {
        s.push_back(a.first);
        e.push_back(a.second);
    }
    sort(s.begin(), s.end());
    sort(e.begin(), e.end());
    int ans = n - 1;
    for (auto& a : v)
    {
        int l = lower_bound(e.begin(), e.end(), a.first) - e.begin();
        int r = n - (lower_bound(s.begin(), s.end(), a.second + 1) - s.begin());
        ans = min(ans, l + r);
    }
    return ans;
}

int main()
{
    boost();
    int t;
    cin >> t;
    while (t--)
    {
        cout << solve() << endl;
    }
    return (0);
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"// #include<iostream>
// #include<bits/stdc++.h>
// #include<vector>
// #include<algorithm>
// #include<string>
// #include<cmath>
// #include<iomanip>
// #include<numeric>
// #include<set>
// // #include<pair>
// #include<cctype>


/**** BE SPECIFIC WITH YOUR GOAL ******/
/**** TRY TO DRY RUN YOUR CODE AS YOU CAN ****/

#include <bits/stdc++.h>
#include <iostream>

using namespace std;

#define rep(i, a, b) for (int i = a; i < b; i++)
#define repp(i, a, b) for (int i = a; i >= b; i--)
#define ll long long int
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define vi vector<ll>
#define vpi vector<pair<ll, ll> >
#define all(x) (x.begin(), x.end())
#define IOS                                                                                        \
    ios::sync_with_stdio(0);                                                                       \
    cin.tie(0);                                                                                    \
    cout.tie(0)
#define setpre cout << fixed << setprecision(10)
#define sumv(a) accumulate(all(a), 0)
#define lb lower_bound
#define ub upper_bound
#define mod 1000000007
#define INF 1000000000000000000LL
#define PI 3.14159265358979


const int N = 1000005;
ll modd = 998244353;
vector<bool> isprime(N);
void seive()
{
    isprime[0] = false;
    isprime[1] = false;

    for (int i = 2; i * i <= 1e6; i++)
    {
        if (isprime[i])
        {
            for (int j = i * i; j <= 1e6; j += i)
            {
                isprime[j] = false;
            }
        }
    }
}
/*** START YOUR CODE USING ABOVE SHORTS ***/

void Reverse_Matrix()
{
    ll n;
    cin >> n;
    vpi v;
    ll a[n], b[n];
    for (int i = 0; i < n; i++)
    {
        cin >> a[i] >> b[i];
        v.pb({ a[i], b[i] });
    }
    sort(a, a + n);
    sort(b, b + n);

    ll ans = n;
    rep(i, 0, n)
    {
        ll left = v[i].F;
        ll right = v[i].S;
        ll cntl = ub(a, a + n, right) - a;
        ll cntr = lb(b, b + n, left) - b;
        cntl = n - cntl;
        if (cntl < 0)
            cntl = 0;
        // cout<<cntr<<"" ""<<cntl<<endl;
        ans = min(ans, cntr + cntl);
    }
    cout << ans << endl;
}

int main()
{
    IOS;
    int TEST;
    TEST = 1;
    cin >> TEST;
    while (TEST--)
    {
        Reverse_Matrix();
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define all(x) (x).begin(), (x).end()
#define fi first
#define se second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define ppb pop_back()
using lli = long long int;
using li = long int;
using namespace std;
const lli MOD{ 1000000007 };
const lli INF{ (false ? (INT_MAX - 1) / 2 : (lli)1e18 + 5) };
const lli N{ (lli)1e6 + 5 };

/*lli fac[200000] ;

lli power(lli x, lli y, lli MOD)
{
    if(y == 0) return 1 ;
    lli p = power(x, y/2, MOD) % MOD ;
    p = (p * p) % MOD ;
    return (!(y & 1))? p : (x * p) % MOD ;
}
lli modInverse(lli a, lli MOD)
{
    return power(a, MOD - 2, MOD) ;
}
lli nCr(lli n,lli r)
{
    if(n < r) return 0 ;
    else if(r == 0) return 1 ;
    lli ret{fac[n]%MOD} ;
    ret *= modInverse(fac[r], MOD) ;
    ret %= MOD ;
    ret *= modInverse(fac[n-r], MOD) ;
    ret %= MOD ;
    return ret ;
}*/
/*vector<bool> isPrime(N,true) ;
void Sieve()
{
    isPrime[1] = 0 ;
    for(int i{2} ; i*i < N ; ++i)
       {
           if(isPrime[i])
           {
               int var{i*i} ;
               while(var <= N)
                isPrime[var] = 0, var += i ;
           }
       }
}*/

int main()
{
    cout << setprecision(15);
    cin.tie(nullptr)->sync_with_stdio(false);
    /*fac[0] = 1 ;
    for(lli i{1} ; i < 200000 ; i++)
       fac[i] = (fac[i-1]*i)%MOD ;*/
    li T{ 1 };
    cin >> T;
    while (T--)
    {
        lli n{};
        cin >> n;
        vector<pair<lli, lli>> arr(n);
        vector<lli> byL(n), byR(n);
        for (auto& i : arr)
        {
            cin >> i.fi >> i.se;
            byL.pb(i.fi);
            byR.pb(i.se);
        }
        sort(all(byL));
        sort(all(byR));
        lli ans{ INF };
        for (lli i{}; i < n; ++i)
        {
            lli l{ lower_bound(all(byR), arr[i].fi) - byR.begin() };
            lli r{ n - (lower_bound(all(byL), arr[i].se + 1) - byL.begin()) };
            ans = min(ans, l + r);
        }
        cout << ans << '\n';
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ll long long
#define ull unsigned long long
#define pll pair<long long, long long>
#define ordered_set tree<pll, null_type, less<pll>, rb_tree_tag, tree_order_statistics_node_update>
#define pb push_back
#define pf push_front
#define pof pop_front
#define pob pop_back
#define gcd __gcd
#define ub upper_bound
#define lb lower_bound
#define fr first
#define sc second
#define bs binary_search
#define mp make_pair
#define all(v) v.begin(), v.end()
#define rep(i, a, b) for (i = a; i <= b; i++)
#define repr(i, a, b) for (i = a; i >= b; i--)
#define Ndigits floor(log10(N) + 1)
#define N 100001
#define M 998244353
#define pi 3.141592653589793238
#define FASTIO                                                                                     \
    std::ios_base::sync_with_stdio(false);                                                         \
    cin.tie(0);                                                                                    \
    cout.tie(0);

int main()
{
    FASTIO
    ll t;
    cin >> t;
    while (t--)
    {
        ll n, i, j, k, ans = 1e7, val;
        cin >> n;
        vector<pll> a(n);
        ordered_set aage, piche;
        rep(i, 0, n - 1) cin >> a[i].fr >> a[i].sc;
        sort(all(a));
        repr(i, n - 1, 0) aage.insert({ a[i].fr, i });
        rep(i, 0, n - 1)
        {
            aage.erase({ a[i].fr, i });
            val = piche.order_of_key({ a[i].fr, 0 });
            val += (aage.size() - aage.order_of_key({ a[i].sc + 1, 0 }));
            ans = min(ans, val);
            piche.insert({ a[i].sc, i });
        }
        cout << ans << ""\n"";
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define me(a, b) memset(a, b, sizeof(a))
#define IOS() ios::sync_with_stdio(false), cin.tie(0)
#define endl '\n'

typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
const int INF = 0x3f3f3f3f;
const int maxn = 2e5 + 5;
const ll mod = 1e9 + 7;

int li[maxn], ri[maxn];

void solve()
{
    int n;
    cin >> n;
    vector<pii> a(n);

    int i = 0;
    for (pii& p : a)
    {
        cin >> p.first >> p.second;
        li[i] = p.first;
        ri[i] = p.second;
        ++i;
    }
    sort(li, li + n);
    sort(ri, ri + n);
    int ans = n;
    for (const pii& p : a)
    {
        int d = upper_bound(ri, ri + n, p.first - 1) - ri + n
            - (upper_bound(li, li + n, p.second) - li);
        ans = min(ans, d);
    }
    cout << ans << endl;
}

int main()
{
    IOS();
    int T;
    cin >> T;
    while (T--)
        solve();
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*Allah Vorosha*/
#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define in insert
#define rev reverse
#define all(x) (x).begin(), (x).end()
#define all2(x) (x).rbegin(), (x).rend()
#define sz(v) (int) v.size()
#define yes cout << ""YES\n""
#define no cout << ""NO\n"";
#define take                                                                                       \
    for (auto& it : a)                                                                             \
        cin >> it;
#define vi vector<int>
#define vii vector<pair<int, int> >
#define vl vector<ll>
#define fi first
#define se second
#define l_b lower_bound
#define u_b upper_bound
#define ios                                                                                        \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie();                                                                                     \
    cout.tie();

using namespace std;

template <class T>
void read(T& x)
{
    cin >> x;
}
template <class T, class... U>
void read(T& x, U&... u)
{
    read(x);
    read(u...);
}
template <class T>
void print1(const T& x)
{
    cout << x << '\n';
}
template <class T, class... U>
void print1(const T& x, const U&... u)
{
    print1(x);
    print1(u...);
}
template <class T>
void print2(const T& x)
{
    cout << x << ' ';
}
template <class T, class... U>
void print2(const T& x, const U&... u)
{
    print2(x);
    print2(u...);
}

const int N = 1e2 + 5, mod = 1e9 + 7, M = 5e5 + 5;
const ll inf = 9223372036854775807;
int cs = 1;

int dx[] = { 0, 0, 1, -1 }, dy[] = { 1, -1, 0, 0 };
// int n, m;

bool valid(int x, int y)
{
    // return (x >= 0 && x < n && y >= 0 && y < m);
}

bool vis[55][55];

void solve()
{
    int n;
    cin >> n;
    vector<int> l(n), r(n);
    for (int i = 0; i < n; i++)
    {
        cin >> l[i] >> r[i];
    }
    auto l2 = l, r2 = r;
    sort(l2.begin(), l2.end());
    sort(r2.begin(), r2.end());
    int ans = 1e9;
    for (int i = 0; i < n; i++)
    {
        int x = l_b(r2.begin(), r2.end(), l[i]) - r2.begin(),
            y = u_b(l2.begin(), l2.end(), r[i]) - l2.begin();
        // print2(x, n - y);
        // cout << endl;
        ans = min(ans, (x + n - y));
    }
    cout << ans << '\n';
}

int main()
{
    ios;
    int tc;
    read(tc);
    while (tc--)
        solve();
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iomanip>
#include <set>
#include <map>
#include <vector>
#include <iostream>
#include <algorithm>

#define ll long long
#define f first
#define s second
#define pii pair<int, int>
#define pb push_back

using namespace std;

const int N = 1e6 * 2 + 100;
const int INF = 1e9 + 100;

vector<pii> v;
int ind[N], add[N], maxi[N];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int q;
    cin >> q;

    while (q--)
    {
        int n;
        cin >> n;
        v.clear();

        for (int i = 0; i < n; i++)
        {
            int a, b;
            cin >> a >> b;
            v.pb({ a, -(i + 1) });
            v.pb({ b, (i + 1) });
        }

        sort(v.begin(), v.end());

        int j = 0, k = 0, ans = 0;
        for (int i = 0; i < v.size(); i++)
        {
            if (v[i].second < 0)
                ind[-v[i].second] = j++;
            add[i] = 0;
        }
        j = 0;
        for (int i = 0; i < v.size(); i++)
        {
            // cout << v[i].first << "" "" << v[i].second << ""\n"";
            if (v[i].second < 0)
            {
                k++;
                j++;
                add[ind[-v[i].second]] = k - j + 1;
                // cout << add[ind[-v[i].second]] << "" "" << add[j] << "" "" << j << ""\n"";
            }
            else
            {
                j--;
                ans = max(k - add[ind[v[i].second]], ans);
                add[ind[v[i].second]] = -1;
            }
        }

        cout << n - ans - 1 << ""\n"";
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"/// https://vjudge.net/contest/429073#problem/G
#include <bits/stdc++.h>
using namespace std;
const int MAX = 2e5 + 10;
const int INF = 2e9;
struct Line
{
    int fr, ba;
} line[MAX];
int f[MAX], b[MAX];
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        for (int i = 0; i < n; i++)
        {
            cin >> line[i].fr >> line[i].ba;
            f[i] = line[i].fr;
            b[i] = line[i].ba;
        }
        sort(f, f + n);
        sort(b, b + n);
        int ans = INF;
        for (int i = 0; i < n; i++)
        {
            int p = upper_bound(f, f + n, line[i].ba) - f;
            int m = lower_bound(b, b + n, line[i].fr) - b;
            int re = n - p + m;
            ans = min(re, ans);
        }
        cout << ans << endl;
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
const int maxn = 2 * 1e5 + 5;
int l[maxn], r[maxn];
vector<pair<int, int>> seg;
void solve()
{
    int n;
    scanf(""%d"", &n);
    for (int i = 0; i < n; ++i)
    {
        scanf(""%d %d"", l + i, r + i);
        seg.push_back(make_pair(l[i], r[i]));
    }
    sort(l, l + n);
    sort(r, r + n);
    int ret = 0x3f3f3f;
    for (int i = 0; i < n; ++i)
    {
        int br = upper_bound(l, l + n, seg[i].second) - l;
        int bl = lower_bound(r, r + n, seg[i].first) - r;
        ret = min(ret, n - br + bl);
    }
    printf(""%d\n"", ret);
    seg.clear();
    return;
}

int main()
{
    int T;
    scanf(""%d"", &T);
    while (T--)
    {
        solve();
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

pair<int, int> a[(int)2e5 + 5];
vector<int> l;
vector<int> r;

void solve()
{
    int t, n;
    cin >> t;
    while (t--)
    {
        l.clear();
        r.clear();
        cin >> n;
        for (int i = 0; i < n; i++)
        {
            cin >> a[i].first >> a[i].second;
            l.push_back(a[i].first);
            r.push_back(a[i].second);
        }
        sort(l.begin(), l.end());
        sort(r.begin(), r.end());
        int res = 0x3f3f3f3f;
        for (int i = 0, dl, dr; i < n; i++)
        {
            dl = upper_bound(l.begin(), l.end(), a[i].second) - l.begin();
            dr = lower_bound(r.begin(), r.end(), a[i].first) - r.begin();
            res = min(res, n - dl + dr);
        }
        cout << res << '\n';
    }
}

int main()
{
    solve();
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"// Problem ID - 1462F

#include <bits/stdc++.h>
#include <climits>
using namespace std;
void solve();

#ifdef RUDR_DEBUG
#include ""/mnt/uv/dev/Snippets & Implementation/debug.h""
#else
#define debug(...)
#endif

#define ll long long

const int MAX_N = 100001;
const int MOD = 1000 * 1000 * 1000 + 7;
const int INF = 1000 * 1000 * 1000;
const ll LINF = 1ll * 1000000 * 1000000 * 1000000;

int main()
{

    ios_base::sync_with_stdio(false);
#ifndef DEBUG
    cin.tie(NULL);
#endif

    int t = 1;
    /*is Single Test case?*/ cin >> t;
    for (int i = 0; i < t; ++i)
    {
        solve();
        cout << ""\n"";
    }

    cerr << ""time taken : "" << (float)clock() / CLOCKS_PER_SEC << "" secs""
         << ""\n"";
    return 0;
}

void solve()
{

    int n;
    cin >> n;
    vector<pair<int, int>> seg(n, { 0, 0 });
    vector<int> l(n, 0), r(n, 0);

    for (int i = 0; i < n; ++i)
    {
        cin >> seg[i].first >> seg[i].second;
        l[i] = seg[i].first;
        r[i] = seg[i].second;
    }

    sort(l.begin(), l.end());
    sort(r.begin(), r.end());

    int ans = INT_MAX;
    for (auto segment : seg)
    {
        int temp = 0;
        temp += lower_bound(r.begin(), r.end(), segment.first) - r.begin();
        temp += l.end() - upper_bound(l.begin(), l.end(), segment.second);
        ans = min(ans, temp);
    }

    cout << ans;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define Min(a, b, c) min(a, min(b, c))
#define Max(a, b, c) max(a, max(b, c))
#define fi first
#define se second
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

const int INF = 0x3f3f3f3f;
const double pi = 3.141592653589793;
const double eps = 1e-8;

int raw[400010];
int q[200010];
int c[400010];
map<int, int> val;

struct node
{
    int l, r;
    bool operator<(const node& b) const
    {
        return this->r < b.r;
    }
};
node a[200010];

void add(int x, int m)
{
    for (; x <= m; x += x & -x)
        c[x] += 1;
}

int ask(int x, int m)
{
    int ans = 0;
    for (; x; x -= x & -x)
        ans += c[x];
    return ans;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, m = 0;
        scanf(""%d"", &n);
        for (int i = 1; i <= n; i++)
        {
            scanf(""%d%d"", &a[i].l, &a[i].r);
            raw[++m] = a[i].l, raw[++m] = a[i].r;
        }
        sort(raw + 1, raw + m + 1);
        m = unique(raw + 1, raw + m + 1) - raw - 1;
        for (int i = 1; i <= m; i++)
            val[raw[i]] = i, c[i] = 0;
        sort(a + 1, a + n + 1);
        int len = 0;
        for (int i = 1; i <= n; i++)
            q[++len] = val[a[i].r];
        int ans = INF;
        for (int i = n; i >= 1; i--)
        {
            int res = 0;
            res += n - i - ask(val[a[i].r], m);
            int l = 0, r = i - 1;
            int x = val[a[i].l];
            while (l < r)
            {
                int mid = l + r + 1 >> 1;
                if (q[mid] < x)
                    l = mid;
                else
                    r = mid - 1;
            }
            res += l;
            ans = min(ans, res);
            add(val[a[i].l], m);
        }
        cout << ans << endl;
    }
    // system(""pause"");
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef vector<ll> vll;
#define fi first
#define print(v)                                                                                   \
    for (ll i : v)                                                                                 \
    cout << i << ss
#define se second
#define pb push_back
#define nn ""\n""
#define all(p) p.begin(), p.end()
#define zz(v) (ll) v.size()
#define S(a) scanf(""%lld"", &a)
#define SS(a, b) scanf(""%lld %lld"", &a, &b)
#define SSS(a, b, c) scanf(""%lld %lld %lld"", &a, &b, &c)
#define ss ' '
#define pii pair<ll, ll>
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) (a * b) / gcd(a, b)
const double eps = 1e-7;

const ll N = 60;


int main()
{

    ll t;
    cin >> t;
    while (t--)
    {
        ll n;
        vll a, b;
        cin >> n;
        ll l[n], r[n];
        for (ll i = 0; i < n; i++)
        {
            cin >> l[i] >> r[i];
            a.pb(l[i]);
            b.pb(r[i]);
        }
        sort(all(a));
        sort(all(b));
        ll ans = n - 1;
        for (ll i = 0; i < n; i++)
        {
            ll z1 = lower_bound(all(b), l[i]) - b.begin();

            ll z2 = a.end() - upper_bound(all(a), r[i]);

            ans = min(ans, z1 + z2);
        }

        cout << ans << nn;
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define vi vector<int>
#define ll long long
#define all(x) x.begin(), x.end()
#define F_OR(i, a, b, step) for (int i = (a); (step) > 0 ? i < (b) : i > (b); i += (step))
#define EACH(x, a) for (auto& x : a)
#define BUG(x)                                                                                     \
    {                                                                                              \
        cout << #x << "" = "" << x;                                                                  \
    }
template <class T>
void print(T& x)
{
    for (auto& it : x)
    {
        cout << it << "" "";
    }
    cout << ""\n"";
};

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    // freopen(""input.txt"", ""r"", stdin);
    // freopen(""output.txt"", ""w"", stdout);
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vector<pair<int, int>> a(n), b(n);
        F_OR(i, 0, n, 1)
        {
            int l, r;
            cin >> l >> r;
            a[i] = { l, r };
            b[i] = { r, l };
        }
        sort(all(a)); // sort theo l
        sort(all(b)); // sort theo r
        vi c(n), d(n);
        F_OR(i, 0, n, 1)
        {
            c[i] = a[i].first;
            d[i] = b[i].first;
        }
        int res = INT_MAX;
        F_OR(i, 0, n, 1)
        {
            // a = {l, r}
            // l => lb -1 cua b
            int l, r;
            l = a[i].first;
            r = a[i].second;
            auto ia = lower_bound(all(d), l);
            auto ib = upper_bound(all(c), r);
            if (ia == d.begin())
            {
                if (ib == c.end())
                {
                    res = 0;
                    break;
                }
                else
                {
                    int tmp = c.end() - ib;
                    res = min(res, tmp);
                }
            }
            else
            {
                ia--;
                if (ib == c.end())
                {
                    int tmp = ia - d.begin() + 1;
                    res = min(res, tmp);
                }
                else
                {
                    int tmp = ia - d.begin() + 1;
                    tmp += c.end() - ib;
                    res = min(res, tmp);
                }
            }
        }
        cout << res << '\n';
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <algorithm>
using namespace std;

const int N = 2e5 + 10;
pair<int, int> a[N];
vector<int> l, r;

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        for (int i = 1; i <= n; i++)
        {
            cin >> a[i].first >> a[i].second;
            l.push_back(a[i].first);
            r.push_back(a[i].second);
        }
        sort(l.begin(), l.end());
        sort(r.begin(), r.end());
        int res = 0x3f3f3f3f;
        for (int i = 1; i <= n; i++)
        {
            int dl = upper_bound(l.begin(), l.end(), a[i].second) - l.begin();
            int dr = lower_bound(r.begin(), r.end(), a[i].first) - r.begin();
            res = min(res, n - dl + dr);
        }
        cout << res << endl;
        l.clear();
        r.clear();
    }
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define asc(i, a, n) for (I i = a; i < n; i++)
#define dsc(i, a, n) for (I i = n - 1; i >= a; i--)
#define forw(it, x) for (A it = (x).begin(); it != (x).end(); it++)
#define bacw(it, x) for (A it = (x).rbegin(); it != (x).rend(); it++)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define lb(x) lower_bound(x)
#define ub(x) upper_bound(x)
#define fbo(x) find_by_order(x)
#define ook(x) order_of_key(x)
#define all(x) (x).begin(), (x).end()
#define sz(x) (I)((x).size())
#define clr(x) (x).clear()
#define U unsigned
#define I long long int
#define S string
#define C char
#define D long double
#define A auto
#define B bool
#define CM(x) complex<x>
#define V(x) vector<x>
#define P(x, y) pair<x, y>
#define OS(x) set<x>
#define US(x) unordered_set<x>
#define OMS(x) multiset<x>
#define UMS(x) unordered_multiset<x>
#define OM(x, y) map<x, y>
#define UM(x, y) unordered_map<x, y>
#define OMM(x, y) multimap<x, y>
#define UMM(x, y) unordered_multimap<x, y>
#define L(x) list<x>
#define PBS(x) tree<x, null_type, less<I>, rb_tree_tag, tree_order_statistics_node_update>
#define PBM(x, y) tree<x, y, less<I>, rb_tree_tag, tree_order_statistics_node_update>
#define pi (D) acos(-1)
#define md 1000000007
int main()
{
    srand(time(NULL));
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    I t;
    cin >> t;
    while (t--)
    {
        I n;
        cin >> n;
        I l[n];
        I r[n];
        OMM(I, I) st, en;
        asc(i, 0, n)
        {
            cin >> l[i] >> r[i];
            st.insert(mp(l[i], 0));
            en.insert(mp(r[i], 0));
        }
        I cnt = 1;
        forw(it, st)
        {
            (*it).se = cnt++;
        }
        cnt = 1;
        forw(it, en)
        {
            (*it).se = cnt++;
        }
        I ans = 0;
        asc(i, 0, n)
        {
            A it = st.ub(r[i]);
            it--;
            I tot = (*it).se;
            it = en.lb(l[i]);
            if (it != en.begin())
            {
                it--;
                tot -= (*it).se;
            }
            ans = max(ans, tot);
        }
        cout << n - ans << ""\n"";
    }
    return 0;
}",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define all(ALL_coll) (ALL_coll).begin(), (ALL_coll).end()
#define sz(SZ_coll) ((int)(SZ_coll).size())

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;

    while (t--)
    {
        int n;
        cin >> n;
        vector<int> ll(n);
        vector<int> rr(n);
        for (int i = 0; i < n; ++i)
            cin >> ll[i] >> rr[i];

        vector<int> lls(ll);
        vector<int> rrs(rr);
        sort(all(lls));
        sort(all(rrs));

        int mx = -1;
        for (int i = 0; i < n; ++i)
        {
            int left = lower_bound(all(rrs), ll[i]) - rrs.begin();
            int right = lls.end() - upper_bound(all(lls), rr[i]);
            mx = max(mx, n - left - right);
        }
        cout << n - mx << endl;
    }
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
#define fast                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(nullptr), cout.tie(nullptr)
#define FIO                                                                                        \
    freopen(""input.txt"", ""r"", stdin);                                                              \
    freopen(""output.txt"", ""w"", stdout);
#define gcd __gcd
#define pi acos(-1)
#define sp "" ""
#define LL long long
#define pii pair<int, int>
#define mod (long long)(1000000000 + 7)
#define SET(n) fixed << setprecision(n)
int ioo = INT_MAX;
LL Loo = LONG_LONG_MAX;

LL power(LL fa, LL n)
{
    LL k = 1;
    while (n)
    {
        if (n % 2)
            k = (k * fa) % mod;
        fa = (fa * fa) % mod;
        n /= 2;
    }
    return k;
}

pair<int, int> a[200005];
int p1[200005], p2[200005];
int cnt[200005];
int n;

int main()
{
    fast;

    int q;
    cin >> q;
    while (q--)
    {
        cin >> n;
        for (int i = 1; i <= n; i++)
        {
            cin >> a[i].first >> a[i].second;
            cnt[i] = 0;
        }

        sort(a + 1, a + n + 1);
        for (int i = 1; i <= n; i++)
            p1[i] = a[i].first, p2[i] = a[i].second;

        int ans = n - 1;

        for (int i = 1; i <= n; i++)
        {
            int idx = (int)(upper_bound(p1 + i, p1 + n + 1, p2[i]) - p1);
            cnt[idx] += -1;
            cnt[i] += cnt[i - 1];
            idx--;
            ans = min(ans, n - (cnt[i] + idx - i + 1));

            cnt[i] += 1;
        }
        cout << ans << endl;
    }
    return 0;
}
",1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main()
{
    //   cout << ""Hello World"" << endl;
    // unordered_map<long long, int> m;
    int n;
    cin >> n;
    vector<int> a(n);
    vector<pair<int, int> > v;
    int k = 0;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        v.push_back(make_pair(a[i], i + 1));
        // m[a[i]]=i+1;
    }
    int b[n];
    int ans[n];
    int p = 0;
    int c = 0;
    sort(v.begin(), v.end());
    for (auto x : v)
    {
        // cout<<x.first<<"" "";
        // k+= (p*x.first)+1;
        b[c] = x.first;
        // p++;
        a[c++] = x.second;
    }
    for (int i = 0; i < n; i++)
    {
        k += (p * b[n - 1 - i]) + 1;
        p++;
    }
    cout << k << endl;
    for (int i = 0; i < n; i++)
        cout << a[n - i - 1] << "" "";
    cout << endl;

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define AIDAR ASADULLIN
#define all(x) x.begin(), x.end()
#define pii pair<int, int>
#define ll long long
using namespace std;


signed main()
{
    cin.tie(0), cout.tie(0), ios_base::sync_with_stdio(0);
#ifdef _AIDARASADULLIN
    freopen(""aidar"", ""r"", stdin);
    freopen(""asadullin"", ""w"", stdout);
#endif
    int n;
    cin >> n;
    vector<pii> a;
    for (int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        a.emplace_back(x, i);
    }
    sort(all(a));
    int cnt = 0;
    for (int i = n - 1; i >= 0; i--)
    {
        cnt += (n - 1 - i) * a[i].first + 1;
    }
    cout << cnt << '\n';
    for (int i = n - 1; i >= 0; i--)
    {
        cout << a[i].second + 1 << "" "";
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main()
{
    int s = 0;
    int n;
    cin >> n;
    vector<pair<int, int>> v(n);

    for (int i = 0; i < n; i++)
    {
        cin >> v[i].first;
        v[i].second = i;
    }

    sort(v.begin(), v.end(), std::greater<pair<int, int>>());

    for (int i = 0; i < n; i++)
    {
        s += v[i].first * i + 1;
    }
    cout << s << endl;
    for (auto p : v)
    {
        cout << p.second + 1 << "" "";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin >> n;
    int a[n];
    vector<pair<int, int>> v;

    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        v.push_back({ a[i], i });
    }
    vector<int> l;
    sort(v.rbegin(), v.rend());
    int z = 0;
    for (int i = 0; i < n; i++)
    {
        z = z + (v[i].first) * i;
        l.push_back(v[i].second);
    }
    cout << z + n << endl;
    for (auto x : l)
    {
        cout << x + 1 << "" "";
    }


    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"/*
           
       Submitted by Pooh__7__
       Author : Poorva Shinde
       Pune University, India , Pune
       created 25.03.2021
       codeforces #710 Div 3 [1]
*/

#include <bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
using namespace std;
// using namespace __gnu_pbds;

#define loop(i, a, b) for (int i = (a); i < (b); i++)
#define loop_last(i, a, b) for (int i = (a); i <= (b); i++)
#define loopRev(i, b, a) for (int i = (b - 1); i >= (a); i--)
#define rl(i, arr)                                                                                 \
    for (int i : arr)                                                                              \
        cout << i;
#define rl_space(i, arr)                                                                           \
    for (int i : arr)                                                                              \
        cout << i << "" "";
#define nl printf(""\n"")
#define d double
#define mod 1000000007
#define ll long long
#define vi vector<int>
#define vvi vector<vector<int> >
#define pb push_back
#define ump unordered_map
#define mp map
#define str string
#define MAX 200005
#define sf(n) scanf(""%d"", &n)
#define sfld(t) scanf(""%lld"", &t)
#define sfc(t) scanf(""%c"", &t)
#define sfs(t) scanf(""%s"", t)
#define pf(n) printf(""%d"", n)
#define pfld(n) printf(""%lld"", n)
#define pfc(t) printf(""%c"", t)
#define pfs(s) printf(""%s"", s)
#define all(a) a.begin(), a.end()

void file_i_o()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
}


int main()
{
    int x, n;
    sf(n);
    vector<pair<int, int> > a;
    loop(i, 0, n)
    {
        cin >> x;
        a.pb(make_pair(x, i + 1));
    }
    sort(a.begin(), a.end(), greater<pair<int, int> >());
    int sum = 0;
    x = 0;
    loop(i, 0, n)
    {
        sum += (a[i].first) * x + 1;
        x++;
    }
    pf(sum);
    nl;
    loop(i, 0, n)
    {
        cout << a[i].second << "" "";
    }
    nl;
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin >> n;
    int a[n], b[n];
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        b[i] = a[i];
    }
    sort(a, a + n);
    for (int i = 0; i < n / 2; i++)
        swap(a[i], a[n - 1 - i]);
    int sum = 1, x = 1;
    for (int i = 1; i < n; i++)
    {
        sum = sum + a[i] * x + 1;
        x++;
    }
    cout << sum << endl;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (a[i] == b[j])
            {
                cout << j + 1 << "" "";
                b[j] = 0;
                break;
            }
        }
    }

    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define _ ios_base::sync_with_stdio(false);
#define read freopen(""file.txt"", ""r"", stdin);
using namespace std;
const int sz = 1e4;
pair<int, int> a[sz];

int main()
{
    _
        // read
        int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i].first, a[i].second = i + 1;

    sort(a, a + n);

    int ans = 0;
    for (int i = n - 1; i >= 0; i--)
        ans += (n - 1 - i) * a[i].first + 1;

    cout << ans << '\n';
    for (int i = n - 1; i >= 0; i--)
        cout << a[i].second << ' ';
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main()
{
    int t, ans = 0;
    cin >> t;
    vector<pair<int, int>> v;
    vector<int> index;
    for (int i = 0; i < t; i++)
    {
        int m;
        cin >> m;
        v.push_back(make_pair(m, i));
    }
    sort(v.begin(), v.end());
    reverse(v.begin(), v.end());
    for (int i = 0; i < t; i++)
    {
        ans = ans + 1 + v[i].first * i;
        index.push_back(v[i].second);
    }
    cout << ans << endl;
    for (auto a : index)
        cout << a + 1 << "" "";
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"///   BISMILLAHIR RAHMANIR RAHEEM

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned int uint;
typedef unsigned long long ull;

#define PB push_back
#define endl '\n'
#define all(a) (a).begin(), (a).end()
#define PI = acos(-1);
#define fix fixed << setprecision(10)

/**************************************************************start*********************************************************/

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    // freopen(""input.txt"",""r"",stdin); freopen(""output.txt"",""w"",stdout);


    int n;
    cin >> n;

    vector<pair<int, int> > vec;

    for (int i = 0; i < n; i++)
    {
        int a;
        cin >> a;
        vec.PB({ a, i + 1 });
    }

    int ans = 0;

    sort(vec.rbegin(), vec.rend());

    for (int i = 0; i < vec.size(); i++)
    {

        ans += (i * vec[i].first) + 1;
    }
    cout << ans << endl;

    for (auto u : vec)
    {
        cout << u.second << "" "";
    }
    return 0;
}

///   ALHAMDULILLAH
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define itn int
#define int long long
#define ull unsigned long long
#define EdwardJk return 0;
using namespace std;
int32_t main()
{
    int a;
    cin >> a;
    ;
    int ans = 0;
    pair<int, int> pr[a];
    for (int i = 0; i < a; i++)
    {
        int x;
        cin >> x;
        pr[i] = { x, i + 1 };
    }
    sort(pr, pr + a);
    reverse(pr, pr + a);
    for (int i = 0; i < a; i++)
    {
        int z = pr[i].first * i + 1;
        ans += z;
    }
    cout << ans << ""\n"";
    for (int i = 0; i < a; i++)
    {
        cout << pr[i].second << "" "";
    }
    EdwardJk
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    /*
    int n;
    cin>>n;
    pair <int,int> par[n];
    for(int i=0;i<n;i++){
        int x;cin>>x;
        par[i].first=x;
        par[i].second=i+1;
    }
    sort(par,par+n);
    for(int i=0;i<n;i++){
        cout<<par[i].second<<"" "";
    }
    */
    int t;
    cin >> t;
    pair<int, int> pa[t];
    for (int i = 0; i < t; i++)
    {
        int x;
        cin >> x;
        pa[i].first = x;
        pa[i].second = i + 1;
    }
    sort(pa, pa + t);
    reverse(pa, pa + t);
    int y = 0;
    for (int i = 0; i < t; i++)
    {
        y += (pa[i].first * i) + 1;
    }
    cout << y << endl;
    for (int i = 0; i < t; i++)
    {
        cout << pa[i].second << "" "";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <fstream>
#define cy cout << ""YES"" << endl
#define cn cout << ""NO"" << endl
#define ll long long int
#define pb push_back
#define mod 1000000007
#define thakkar                                                                                    \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);                                                                                 \
    cout.tie(NULL);
using namespace std;
ll nCr1[1001][1001];
ll nCr(ll n, ll r)
{
    if (nCr1[n][r])
        return nCr1[n][r];
    if (r == 1)
        return nCr1[n][r] = n;
    if (n == r)
        return nCr1[n][r] = 1;
    if (r == 0)
        return nCr1[n][r] = 1;
    return nCr1[n][r] = (nCr(n - 1, r) + nCr(n - 1, r - 1)) % mod;
}
bool prime(ll n)
{
    ll i;
    for (i = 2; i <= sqrt(n); i++)
    {
        if (n % i == 0)
            return false;
    }
    return true;
}
int main()
{
    thakkar ll n, i, a, x = 0, s = 0;
    vector<pair<ll, ll>> v;
    cin >> n;
    for (i = 1; i <= n; i++)
    {
        cin >> a;
        v.pb({ a, i });
    }
    sort(v.begin(), v.end());
    for (i = v.size() - 1; i >= 0; i--)
    {
        s += v[i].first * x + 1;
        x++;
    }
    cout << s << endl;
    for (i = v.size() - 1; i >= 0; i--)
        cout << v[i].second << "" "";
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<ll, ll> P;
#define fi first
#define se second
#define N 214514
#define all(x) (x).begin(), (x).end()
const ll mod = 1000000007;
const ll inf = 1000000000000000000;

int main()
{
    ll n;
    cin >> n;
    vector<P> v(n);
    vector<ll> ans(n);
    for (int i = 0; i < n; i++)
    {
        cin >> v[i].first;
        v[i].second = i + 1;
    }
    sort(all(v), greater<P>());
    ll num = 0;
    for (int i = 0; i < n; i++)
    {
        ans[i] = v[i].second;
        num += v[i].first * i + 1;
    }
    cout << num << endl;
    for (ll x : ans)
        cout << x << ' ';
    cout << endl;
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin >> n;
    int a[n];
    vector<pair<int, int> > v;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        v.push_back(make_pair(a[i], i + 1));
    }
    sort(v.begin(), v.end());
    reverse(v.begin(), v.end());
    int sum = 0;


    for (int i = 1; i < n; i++)
    {
        sum += (v[i].first * i + 1);
    }
    cout << sum + 1 << endl;
    for (int i = 0; i < v.size(); i++)
    {
        cout << v[i].second << "" "";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int const N = 1005;
int x, ans;
pair<int, int> p[N];
int main()
{
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        int y;
        cin >> y;
        p[i].first = y;
        p[i].second = i + 1;
    }
    sort(p, p + n);
    reverse(p, p + n);
    for (int i = 0; i < n; i++)
    {
        ans += (p[i].first * x) + 1;
        x++;
    }

    cout << ans << endl;
    for (int i = 0; i < n; i++)
    {
        cout << p[i].second << "" "";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"//#include<bits/stdc++.h>
#include <iostream>
#include <algorithm>
using namespace std;
int main()
{
    int can_amount, sum = 0;
    cin >> can_amount;
    pair<int, int> sorted_can_details[can_amount];
    for (int i = 0; i < can_amount; i += 1)
    {
        cin >> sorted_can_details[i].first;
    }

    for (int i = 0; i < can_amount; i += 1)
    {
        sorted_can_details[i].second = i + 1;
    }

    sort(sorted_can_details, sorted_can_details + can_amount);
    reverse(sorted_can_details, sorted_can_details + can_amount);

    for (int i = 0; i < can_amount; i += 1)
    {
        sum += (sorted_can_details[i].first * i) + 1;
    }

    cout << sum << endl;

    for (int i = 0; i < can_amount; i += 1)
    {
        cout << sorted_can_details[i].second << ' ';
    }
    cout << endl;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define double long double
#define int long long int
#define vi vector<int>
#define vii vector<pair<int, int> >
#define pi pair<int, int>
#define fast                                                                                       \
    ios_base::sync_with_stdio(false);                                                              \
    cin.tie(NULL);
#define pb push_back
#define pf push_front
#define deb(x) cerr << #x << "" : "" << x << endl;
#define fi first
#define se second
#define mi map<int, int>
#define PI 3.141592653589
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define f(i, x, n) for (int i = x; i < n; i++)
#define rf(i, x, n) for (int i = n; i >= x; i--)
#define check(x) cerr << #x << "" : "" << x << endl;
#define ordered_set                                                                                \
    tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
#define fbo find_by_order
#define ook order_of_key
#define baar exit(0)
#define yes cout << ""Yes\n"";
#define no cout << ""No\n"";
const int INF = 1e9 + 5;
using namespace __gnu_pbds;
using namespace std;
int powmod(int base, int exponent, int mod)
{
    int ans = 1;
    while (exponent)
    {
        if (exponent & 1)
            ans = (ans * base) % mod;
        base = (base * base) % mod;
        exponent /= 2;
    }
    return ans;
}
signed main()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    fast int n;
    cin >> n;
    vii v(n);
    f(i, 0, n)
    {
        cin >> v[i].first;
        v[i].second = i;
    }
    int sum = 0;
    sort(rall(v));
    f(i, 0, n) sum += (i * v[i].first + 1);
    cout << sum << endl;
    f(i, 0, n)
    {
        cout << v[i].se + 1 << "" "";
    }

    cerr << ""\ntime taken : "" << (float)clock() / CLOCKS_PER_SEC << "" secs"" << endl;
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define pb push_back

int main()
{

    int n;
    cin >> n;
    vector<int> v, v1, v2;
    for (int i = 0; i < n; i++)
    {
        int l;
        cin >> l;
        v.push_back(l);
        v1.push_back(l);
    }
    sort(v.rbegin(), v.rend());
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (v[i] == v1[j])
            {
                v1[j] = 0;
                v2.push_back(j + 1);
                break;
            }
        }
    }
    long sum = 0;
    for (int i = 0; i < v2.size(); i++)
    {
        sum += (i * v[i] + 1);
    }
    cout << sum << endl;
    for (int i = 0; i < v2.size(); i++)

    {
        cout << v2[i] << "" "";
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
bool comp(pair<int, int> a, pair<int, int> b)
{
    return a.second > b.second;
}
int main(int argc, char const* argv[])
{
    //  cout<<""ready\n"";
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    pair<int, int> arr[n];
    for (int i = 0; i < n; i++)
    {
        arr[i].first = i;
        cin >> arr[i].second;
    }
    sort(arr, arr + n, comp);
    int sum = 0;
    for (int i = 0; i < n; i++)
    {
        sum += arr[i].second * i + 1;
    }
    cout << sum << ""\n"";
    for (auto i : arr)
    {
        cout << i.first + 1 << "" "";
    }
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <iostream>
#include <vector>
using namespace std;

int main()
{

    int n;
    cin >> n;

    vector<int> v;
    v.resize(n + 5);
    for (int i = 0; i < n; ++i)
        cin >> v[i];
    vector<int> idxS;
    int mn = 0;


    for (int i = 0; i < n; ++i)
    {
        int mx = 0, idx = i;
        for (int j = 0; j < n; ++j)
        {
            if (v[j] == -1)
                continue;

            if (v[j] > mx)
            {
                mx = v[j];
                idx = j;
            }
        }
        mn += v[idx] * i + 1;
        v[idx] = -1;
        idxS.push_back(idx + 1);
    }
    cout << mn << endl;
    for (int i = 0; i < (int)idxS.size(); ++i)
    {
        cout << idxS[i] << ' ';
    }
    cout << '\n';

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define fr first
#define sc second
#define pb push_back
#define sz(c) c.size()
#define pu push
#define po pop
#define ins insert
#define srt(v) sort(v.begin(), v.end())
#define rep(i, a, b) for (int i = a; i < b; i++)
#define rep2(i, a, b) for (int i = a; i >= b; i--)
#define mem0(a) memset(a, 0, sizeof(a))
#define mem1(a) memset(a, 1, sizeof(a))

int main()
{
    int n;
    cin >> n;
    vector<pair<int, int> > a(n);
    rep(i, 0, n)
    {
        int v;
        cin >> v;
        a[i].fr = v;
        a[i].sc = i;
    }
    srt(a);
    vector<int> te;
    ll ans = 0;
    int tr = 1;
    rep2(i, n - 1, 0)
    {
        ans += (a[i].fr) * 1ll * (tr - 1) + 1;
        te.pb(a[i].sc + 1);
        tr++;
    }
    cout << ans << endl;
    rep(i, 0, n) cout << te[i] << "" "";
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin >> n;
    vector<pair<int, int>> v;
    int temp;
    for (int i = 0; i < n; i++)
    {
        cin >> temp;
        v.push_back(make_pair(temp, i + 1));
    }

    sort(v.begin(), v.end());
    int ans = 0, j = 0;
    for (int i = n - 1; i >= 0; i--)
    {
        ans += v[i].first * j + 1;
        j++;
    }
    cout << ans << endl;
    for (int i = n - 1; i >= 0; i--)
    {
        cout << v[i].second << "" "";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
#define f first
#define s second
#define mod 1000000007
#define N 1000043
#define mp(a, b) make_pair(a, b)
#define pb(a) push_back(a)
#define loop(a, b) for (int i = a; i < b; i++)
#define test                                                                                       \
    int t;                                                                                         \
    cin >> t;                                                                                      \
    while (t--)
#define pll pair<ll, ll>

using namespace std;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n;
    cin >> n;
    vector<pll> vec(n);
    loop(0, n)
    {
        cin >> vec[i].f;
        vec[i].s = i + 1;
    }
    sort(vec.rbegin(), vec.rend());
    ll cnt = 0, ans = 0;
    vector<int> res;
    for (auto i : vec)
    {
        ans += (i.f * cnt + 1);
        cnt++;
        res.pb(i.s);
    }
    cout << ans << endl;
    for (auto i : res)
        cout << i << "" "";
    cout << endl;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n, cnt = 0;
    cin >> n;
    pair<int, int> arr[n];
    for (int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        arr[i] = { x, i + 1 };
    }
    sort(arr, arr + n);
    reverse(arr, arr + n);
    for (int i = 0; i < n; i++)
    {
        cnt += arr[i].first * i + 1;
    }
    cout << cnt << endl;
    for (int i = 0; i < n; i++)
        cout << arr[i].second << "" "";
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stddef.h>
#include <ctype.h>

#define N 1010

int n, ans, a[N], b[N];
char used[N];

int main(void)
{
    scanf(""%d"", &n);

    for (int i = 0; i < n; i++)
        scanf(""%d"", a + i);

    for (int i = 0; i < n; i++)
    {
        int k = -1;

        for (int j = 0; j < n; j++)
        {
            if (!used[j] && (k == -1 || a[k] < a[j]))
                k = j;
        }

        used[k] = 1;
        b[i] = k + 1;
        ans += a[k] * i + 1;
    }

    printf(""%d\n"", ans);

    for (int i = 0; i < n; i++)
        printf(""%d "", b[i]);

    return (0);
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored ""-Wconversion""
#pragma GCC diagnostic ignored ""-Wimplicit-fallthrough""
#pragma GCC diagnostic ignored ""-Wsign-compare""
#pragma GCC diagnostic ignored ""-Wshadow""
#define Fast                                                                                       \
    ios::sync_with_stdio(false);                                                                   \
    cin.tie(0);                                                                                    \
    cout.tie(0);                                                                                   \
    cin.exceptions(ios::badbit | ios::failbit);
#define all(x) (x).begin(), (x).end()
#define inf LLONG_MAX
typedef long long int ll;
typedef long double ld;
using namespace std;
const ll mod = 1000000007ll;

ll n, ans = 0;
;

int main()
{
    Fast
        // freopen(""socdist1.in"", ""r"", stdin);
        // freopen(""socdist1.out"", ""w"", stdout);
        cin
        >> n;
    vector<pair<ll, ll>> a(n);
    for (ll i = 0; i < n; i++)
    {
        ll x;
        cin >> x;
        a[i] = make_pair(x, i + 1);
    }
    sort(all(a));
    reverse(all(a));
    for (ll i = 0; i < n; i++)
    {
        ans += (a[i].first * i + 1);
    }
    cout << ans << endl;
    for (auto[x, y] : a)
    {
        cout << y << "" "";
    }
    cout << endl;
    return 0;
}

// Why is it that when you awake to the world of realities you nearly always feel, sometimes very
// vividly, that the vanished dream has carried with it some enigma which you have failed to solve?",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
#define ff first
#define ss second
#define MP make_pair
#define PB push_back
#define ll long long
#define f(i, x, n) for (ll i = x; i < n; i++)
#define ld long double
#define sorta(a, n) sort(a, a + n);
#define sortve(v) sort(v.begin(), v.end());
#define sortvdec(v) sort(v.begin(), v.end(), greater<ll>());
#define inarr(arr, n)                                                                              \
    for (long long i = 0; i < n; i++)                                                              \
        cin >> arr[i];
#define prinarr(arr)                                                                               \
    {                                                                                              \
        for (long long x : arr)                                                                    \
            cout << x << "" "";                                                                      \
    }                                                                                              \
    cout << ""\n"";
#define cout1(a) cout << a << ""\n"";
#define cout2(a, b) cout << a << "" "" << b << ""\n"";
#define cout3(a, b, c) cout << a << "" "" << b << "" "" << c << ""\n"";
#define maxE(v) *max_element(v.begin(), v.end())
#define minE(v) *min_element(v.begin(), v.end())
#define sumV(v, x) accumulate(v.begin(), v.end(), x)
#define setprec(n) cout << fixed << setprecision(8) << n << ""\n"";
#define slower(s) transform(s.begin(), s.end(), s.begin(), ::tolower);
#define supper(s) transform(s.begin(), s.end(), s.begin(), ::toupper);
const int mod = 1000000007;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;

const ll N = 1e6 + 3;
vector<ll> adj[N];
bool visited[N];
ll dis[N];


ll isPrime(ll n)
{
    if (n <= 1)
        return 0;
    for (int i = 2; i * i <= n; i++)
    {
        if (n % i == 0)
        {
            return 0;
            break;
        }
    }
    return 1;
}


int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    ll n;
    cin >> n;
    ll a[n];
    inarr(a, n) vector<ll> v, v2;
    v.assign(a, a + n);
    sortvdec(v);
    ll shot = 0;
    f(i, 0, n)
    {
        f(j, 0, n)
        {
            if (v[i] == a[j] && find(v2.begin(), v2.end(), j + 1) == v2.end())
            {
                v2.push_back(j + 1);
                break;
            }
        }
        shot += ((v[i] * i) + 1);
    }
    cout1(shot) prinarr(v2)
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define fastio                                                                                     \
    ios_base::sync_with_stdio(0);                                                                  \
    cin.tie(0);                                                                                    \
    cout.tie(0);
#define endl ""\n""
#define Endl ""\n""
#define ENDL ""\n""
#define fi first
#define se second
#define be begin()
#define en end()
#define pb push_back
#define bpi __builtin_popcount
#define bpll __builtin_popcountll
#define uol to_ulong()
#define uoll to_ullong()
typedef long long ll;
typedef long double ld;
int x;
vector<int> vw[1000];

int main()
{
    // freopen(""frequency.in"",""r"",stdin);
    fastio


        int n;
    cin >> n;
    vector<pair<int, int>> v;
    for (int i = 1; i <= n; i++)
    {
        int a;
        cin >> a;
        v.pb({ a, i });
    }
    sort(v.rbegin(), v.rend());
    ll s = 0;
    for (int i = 0; i < v.size(); i++)
    {
        s += v[i].fi * (i) + 1;
    }
    cout << s << endl;
    for (int i = 0; i < v.size(); i++)
    {
        cout << v[i].se << "" "";
    }

    return 0;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;

#define ld long double
#define M 100000000000000000000000000
#define INF 922337203
#define endl '\n'
#define nl cout << '\n'
#define fout fflush(stdout)
#define ull unsigned long long
#define ui unsigned int
#define ll long long
#define ld long double
#define um unordered_map
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pil pair<int, long long>
#define pli pair<long long, int>
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vi>
#define vvll vector<vll>
#define vs vector<string>
#define vpii vector<pii>
#define vpll vector<pll>
#define vpil vector<pil>
#define vpli vector<pli>
#define pb push_back
#define pf push_front
#define mp make_pair
#define ff first
#define ss second
#define fok(i, k, n) for (ll i = k; i < n; i++)
#define fo(i, n) for (ll i = 0; i < n; i++)
#define Fo(i, n) for (ll i = n; i >= 0; i--)

ll binpow(ll a, ll b)
{ // power of big numbers (binary exponentiation)
    ll res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}

ll binpow_mod(ll a, ll b, ll m)
{ // power of big numbers mod m (binary exponentiation)
    a %= m;
    ll res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = res * a % m;
        a = a * a % m;
        b >>= 1;
    }
    return res;
}

ll bsearch(ll arr[], ll l, ll r, ll x) // binary search
{
    if (r >= l)
    {
        ll mid = l + (r - l) / 2;
        if (arr[mid] == x)
            return mid;
        if (arr[mid] > x)
            return bsearch(arr, l, mid - 1, x);
        return bsearch(arr, mid + 1, r, x);
    }
    return -1;
}

ll first(ll arr[], ll low, ll high, ll x, ll n)
{
    if (high >= low)
    {
        ll mid = low + (high - low) / 2;
        if ((mid == 0 || x > arr[mid - 1]) && arr[mid] == x)
            return mid;
        else if (x > arr[mid])
            return first(arr, (mid + 1), high, x, n);
        else
            return first(arr, low, (mid - 1), x, n);
    }
    return -1;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);


    ll n, x = 0, ans;
    cin >> n;
    ans = n;
    pll a[n];
    fo(i, n)
    {
        cin >> a[i].ff;
        a[i].ss = i + 1;
    }
    sort(a, a + n);
    fo(i, n)
    {
        ans += (n - i - 1) * a[i].ff;
    }
    cout << ans << ""\n"";
    fo(i, n) cout << a[n - i - 1].ss << "" "";
    nl;
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>

#define ll long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pk pop_back
#define pf push_front
#define pt pop_front
#define st setprecision

using namespace std;

int main()
{
    ll t = 1;
    //    cin >> t;
    while (t--)
    {
        ll n, s = 0;
        cin >> n;
        ll a[n + 10], dp[n + 10] = {};
        for (ll i = 1; i <= n; ++i)
        {
            cin >> a[i];
            dp[i] = a[i];
        }
        sort(a + 1, a + n + 1);
        reverse(a + 1, a + n + 1);
        for (ll i = 1; i <= n; ++i)
        {
            s += a[i] * (i - 1) + 1;
        }
        cout << s << ""\n"";
        for (ll i = 1; i <= n; ++i)
        {
            for (ll j = 1; j <= n; ++j)
            {
                if (a[i] == dp[j])
                {
                    cout << j << "" "";
                    dp[j] = 0;
                }
            }
        }
        cout << ""\n"";
    }
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
#define ll long long
using namespace std;
int main()
{
    ll t, i, k = 0, x, n, m = 1, sum = 0;
    cin >> t;
    n = t;
    vector<pair<int, int> > v;
    while (n--)
    {
        k++;
        cin >> x;
        v.push_back(make_pair(x, k));
    }
    sort(v.begin(), v.end());
    reverse(v.begin(), v.end());
    for (i = 1; i < t; i++)
    {
        sum = sum + m * v[i].first;
        m++;
    }
    cout << sum + t << endl;
    for (i = 0; i < t; i++)
        cout << v[i].second << "" "";
}
",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
"#include <bits/stdc++.h>
using namespace std;
#define endl '\n'
const int maxElments = 2e5;

int main()
{
    // fast i/o
    ios::sync_with_stdio(0);
    cin.tie(0), cout.tie(0);
    int n;
    cin >> n;
    int x, max_ = 0, result = 0, count = 0;
    vector<pair<int, int>> res;
    for (int i = 0; i < n; i++)
    {
        cin >> x;
        res.push_back({ x, i + 1 });
    }
    sort(res.begin(), res.end(), greater<>());
    for (int i = 0; i < n; i++)
    {
        result += (res[i].first * i) + 1;
    }
    cout << result << endl;
    for (auto x : res)
    {
        cout << x.second << "" "";
    }
    cout << endl;
    return 0;
}",1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
